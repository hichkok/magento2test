/**
 * Created by P&P on 6/8/2014.
 */
var THREE={REVISION:"64"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;d<e;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else for(f in c={}.hasOwnProperty,b)c.call(b,f)&&(a[f]=b[f]);return a};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=self.setTimeout(function(){b(c+f)},f);a=c+f;return g});void 0===self.cancelAnimationFrame&&void 0!==
    self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;
THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;
THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;
THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;
THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):"number"===typeof a?this.setHex(a):"string"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){0>c&&(c+=1);1<c&&(c-=1);return c<1/6?a+6*(b-a)*
    c:.5>c?b:c<2/3?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b;c=2*c-b;this.r=d(c,b,a+1/3);this.g=d(c,b,a);this.b=d(c,b,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a))return a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=
    Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;this.g=
    a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
    8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h=(f+e)/2;if(f===e)f=g=0;else{var k=e-f,f=.5>=h?k/(e+f):k/(2-e-f);switch(e){case b:g=(c-d)/k+(c<d?6:0);break;case c:g=(d-b)/k+2;break;case d:g=(b-c)/k+4}g/=6}a.h=g;a.s=f;a.l=h;return a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,
b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;
    this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
    darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
    grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
    lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
    palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
    tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(a){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a;this._updateEuler()},get y(){return this._y},set y(a){this._y=a;this._updateEuler()},get z(){return this._z},set z(a){this._z=a;this._updateEuler()},get w(){return this._w},set w(a){this._w=a;this._updateEuler()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=
    d;this._updateEuler();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._w=a._w;this._updateEuler();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*
    g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,
    this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h);!1!==b&&this._updateEuler();return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this._updateEuler();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],k=b[6],b=b[10],l=c+f+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(k-g)/c,this._x=
    .25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=.25*c,this._z=(g+k)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+k)/c,this._z=.25*c);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*
    this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=
    a._w,g=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+f*g+d*k-e*h;this._y=d*l+f*h+e*g-c*k;this._z=e*l+f*k+c*h-d*g;this._w=f*l-c*g-d*h-e*k;this._updateEuler();return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=
    -a._z,g=-g):this.copy(a);if(1<=g)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),k=Math.sqrt(1-g*g);if(.001>Math.abs(k))return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;g=Math.sin((1-b)*h)/k;h=Math.sin(b*h)/k;this._w=f*g+this._w*h;this._x=c*g+this._x*h;this._y=d*g+this._y*h;this._z=e*g+this._z*h;this._updateEuler();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){this._x=
    a[0];this._y=a[1];this._z=a[2];this._w=a[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=
    a.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);
    return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
    b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){this.x=a[0];this.y=a[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
    a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
    this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
    b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+
    a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,k=a*c+g*b-e*d,l=a*d+e*c-f*b,b=-e*b-f*c-g*d;this.x=h*a+b*-e+k*-g-l*-f;this.y=k*a+b*-f+l*-e-h*-g;this.z=l*a+b*-g+h*-f-k*-e;return this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;
    this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=
    b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
    setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=
        a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;this.x=d*h-e*g;this.y=e*f-c*h;this.z=c*g-d*f;return this},angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},
    setEulerFromQuaternion:function(a,b){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");
        return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();
        a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};
THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b){!1===b instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");this.applyQuaternion(a.setFromEuler(b));return this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),projectOnVector:function(){var a=new THREE.Vector3;
    return function(b){a.copy(b).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b);return this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){a.copy(this).projectOnVector(b).multiplyScalar(2);return this.subVectors(a,this)}}()});THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
    case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
    addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},
    applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,
        this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(k-b)){if(.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+g)/4;f=(f+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>l?.01>h?(b=.707106781,
        c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=f/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(f-c)*(f-c)+(g-d)*(g-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+l-1)/2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&
    (this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*
        this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&
        a.w===this.w},fromArray:function(a){this.x=a[0];this.y=a[1];this.z=a[2];this.w=a[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a;this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a;this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a;this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a;this._updateQuaternion()},
    set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this._updateQuaternion();return this},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this._updateQuaternion();return this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],k=d[5],l=d[9],p=d[2],n=d[6],d=d[10];b=b||this._order;"XYZ"===b?(this._y=Math.asin(c(g)),.99999>Math.abs(g)?(this._x=Math.atan2(-l,d),this._z=
        Math.atan2(-f,e)):(this._x=Math.atan2(n,k),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(l)),.99999>Math.abs(l)?(this._y=Math.atan2(g,d),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-p,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(n)),.99999>Math.abs(n)?(this._y=Math.atan2(-p,d),this._z=Math.atan2(-f,k)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(p)),.99999>Math.abs(p)?(this._x=Math.atan2(n,d),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,k))):"YZX"===b?(this._z=
        Math.asin(c(h)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-p,e)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=Math.asin(-c(f)),.99999>Math.abs(f)?(this._x=Math.atan2(n,k),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b);this._order=b;this._updateQuaternion();return this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=a.y*
        a.y,g=a.z*a.z,h=a.w*a.w;b=b||this._order;"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?
        (this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+
        b);this._order=b;!1!==c&&this._updateQuaternion();return this},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,
        this._y,this._z,this._order)}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);
    this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);
    this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);
    this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),
        (a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);
    return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x);a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y);a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z)},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var b=1,c=a.length;b<c;b++)this.addPoint(a[b])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=
    new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);this.makeEmpty();b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var e=b.geometry.vertices,f=0,g=e.length;f<g;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),copy:function(a){this.min.copy(a.min);
    this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);
    this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-
    this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=
    new THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,
    this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);
    this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(a,b,c,d,e,f,g,h,k){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==k?k:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,k){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=e;l[7]=f;l[2]=g;l[5]=h;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
    multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],k=a[7],a=a[8];return b*f*a-b*g*k-c*e*a+c*g*h+d*e*k-d*f*h},getInverse:function(a,
b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/
        c);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};
THREE.Matrix4=function(a,b,c,d,e,f,g,h,k,l,p,n,u,t,s,r){var v=this.elements=new Float32Array(16);v[0]=void 0!==a?a:1;v[4]=b||0;v[8]=c||0;v[12]=d||0;v[1]=e||0;v[5]=void 0!==f?f:1;v[9]=g||0;v[13]=h||0;v[2]=k||0;v[6]=l||0;v[10]=void 0!==p?p:1;v[14]=n||0;v[3]=u||0;v[7]=t||0;v[11]=s||0;v[15]=void 0!==r?r:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,k,l,p,n,u,t,s,r){var v=this.elements;v[0]=a;v[4]=b;v[8]=c;v[12]=d;v[1]=e;v[5]=f;v[9]=g;v[13]=h;v[2]=k;v[6]=l;v[10]=p;v[14]=n;v[3]=u;v[7]=t;v[11]=s;v[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");
    return this.copyPosition(a)},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*f;c[9]=b[9]*f;c[10]=b[10]*f;return this}}(),makeRotationFromEuler:function(a){!1===
    a instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){a=f*h;var k=f*e,l=c*h,p=c*e;b[0]=g*h;b[4]=-g*e;b[8]=d;b[1]=k+l*d;b[5]=a-p*d;b[9]=-c*g;b[2]=p-a*d;b[6]=l+k*d;b[10]=f*g}else"YXZ"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a+p*c,b[4]=l*c-k,b[8]=
    f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=k*c-l,b[6]=p+a*c,b[10]=f*g):"ZXY"===a.order?(a=g*h,k=g*e,l=d*h,p=d*e,b[0]=a-p*c,b[4]=-f*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=f*h,b[9]=p-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(a=f*h,k=f*e,l=c*h,p=c*e,b[0]=g*h,b[4]=l*d-k,b[8]=a*d+p,b[1]=g*e,b[5]=p*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=g*h,b[4]=p-a*e,b[8]=l*e+k,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-p*e):"XZY"===a.order&&(a=f*g,k=f*d,l=c*g,p=c*d,b[0]=
    g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+p,b[5]=f*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=p*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,k=e+e;a=c*g;var l=c*
    h,c=c*k,p=d*h,d=d*k,e=e*k,g=f*g,h=f*h,f=f*k;b[0]=1-(p+e);b[4]=l-f;b[8]=c+h;b[1]=l+f;b[5]=1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+p);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(f,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(f,c).normalize());b.crossVectors(c,a);g[0]=
    a.x;g[4]=b.x;g[8]=c.x;g[1]=a.y;g[5]=b.y;g[9]=c.y;g[2]=a.z;g[6]=b.z;g[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],k=c[12],l=c[1],p=c[5],n=c[9],u=c[13],t=c[2],s=c[6],r=c[10],v=c[14],w=c[3],q=c[7],x=c[11],
    c=c[15],y=d[0],I=d[4],H=d[8],D=d[12],B=d[1],G=d[5],M=d[9],z=d[13],V=d[2],F=d[6],E=d[10],A=d[14],J=d[3],C=d[7],R=d[11],d=d[15];e[0]=f*y+g*B+h*V+k*J;e[4]=f*I+g*G+h*F+k*C;e[8]=f*H+g*M+h*E+k*R;e[12]=f*D+g*z+h*A+k*d;e[1]=l*y+p*B+n*V+u*J;e[5]=l*I+p*G+n*F+u*C;e[9]=l*H+p*M+n*E+u*R;e[13]=l*D+p*z+n*A+u*d;e[2]=t*y+s*B+r*V+v*J;e[6]=t*I+s*G+r*F+v*C;e[10]=t*H+s*M+r*E+v*R;e[14]=t*D+s*z+r*A+v*d;e[3]=w*y+q*B+x*V+c*J;e[7]=w*I+q*G+x*F+c*C;e[11]=w*H+q*M+x*E+c*R;e[15]=w*D+q*z+x*A+c*d;return this},multiplyToArray:function(a,
b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
    return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
    a.transformDirection(this)},crossVector:function(a){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],k=a[13],l=a[2],p=a[6],n=a[10],u=a[14];return a[3]*(+e*h*p-d*k*p-e*g*n+c*k*n+d*g*u-c*h*u)+a[7]*(+b*h*u-b*k*n+e*f*n-d*f*u+d*k*l-e*h*l)+a[11]*(+b*k*p-b*g*u-e*f*p+c*f*u+e*g*l-c*k*l)+a[15]*(-d*g*l-b*h*p+b*g*n+d*f*p-c*f*
    n+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;
    a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;
    b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],k=d[1],l=d[5],p=d[9],n=d[13],u=d[2],t=d[6],s=d[10],r=d[14],v=d[3],w=d[7],q=d[11],d=d[15];c[0]=p*r*w-n*s*w+n*t*q-l*r*q-p*t*d+l*s*d;c[4]=h*s*w-g*r*w-h*t*q+f*r*q+g*t*d-f*s*d;c[8]=g*n*w-h*p*w+h*l*q-f*n*q-g*l*d+f*p*d;c[12]=h*p*t-g*n*t-h*l*s+f*n*s+g*l*r-f*p*r;c[1]=n*s*v-p*r*v-n*u*q+k*r*q+p*u*d-k*s*d;c[5]=g*r*v-h*s*v+h*u*q-e*r*q-g*u*d+e*s*d;c[9]=h*p*v-g*n*v-h*k*q+e*n*q+g*k*d-
    e*p*d;c[13]=g*n*u-h*p*u+h*k*s-e*n*s-g*k*r+e*p*r;c[2]=l*r*v-n*t*v+n*u*w-k*r*w-l*u*d+k*t*d;c[6]=h*t*v-f*r*v-h*u*w+e*r*w+f*u*d-e*t*d;c[10]=f*n*v-h*l*v+h*k*w-e*n*w-f*k*d+e*l*d;c[14]=h*l*u-f*n*u-h*k*t+e*n*t+f*k*r-e*l*r;c[3]=p*t*v-l*s*v-p*u*w+k*s*w+l*u*q-k*t*q;c[7]=f*s*v-g*t*v+g*u*w-e*s*w-f*u*q+e*t*q;c[11]=g*l*v-f*p*v-g*k*w+e*p*w+f*k*q-e*l*q;c[15]=f*p*u-g*l*u+g*k*t-e*p*t-f*k*s+e*l*s;c=e*c[0]+k*c[4]+u*c[8]+v*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");
    this.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(a){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(a){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(a){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},
    scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,
        0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,k=e*f,l=e*g;this.set(k*f+c,k*g-d*h,k*h+d*g,0,k*g+d*h,l*g+c,l*h-d*f,0,k*h-d*g,l*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,
        0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),k=a.set(f[8],f[9],f[10]).length();c.x=f[12];c.y=f[13];c.z=f[14];b.elements.set(this.elements);c=1/g;var f=1/h,l=1/k;b.elements[0]*=c;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=
        f;b.elements[5]*=f;b.elements[6]*=f;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=g;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*
        b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,k=c-d,l=f-e;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/k;g[9]=0;g[13]=-((c+d)/k);g[2]=0;g[6]=0;g[10]=-2/l;g[14]=-((f+e)/l);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],
        a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);
    var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceTo(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceTo(b)}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(.5),f=b.clone().sub(a).normalize(),g=.5*a.distanceTo(b),h=
    this.origin.clone().sub(e);a=-this.direction.dot(f);b=h.dot(this.direction);var k=-h.dot(f),l=h.lengthSq(),p=Math.abs(1-a*a),n,u;0<=p?(h=a*k-b,n=a*b-k,u=g*p,0<=h?n>=-u?n<=u?(g=1/p,h*=g,n*=g,a=h*(h+a*n+2*b)+n*(a*h+n+2*k)+l):(n=g,h=Math.max(0,-(a*n+b)),a=-h*h+n*(n+2*k)+l):(n=-g,h=Math.max(0,-(a*n+b)),a=-h*h+n*(n+2*k)+l):n<=-u?(h=Math.max(0,-(-a*g+b)),n=0<h?-g:Math.min(Math.max(-g,-k),g),a=-h*h+n*(n+2*k)+l):n<=u?(h=0,n=Math.min(Math.max(-g,-k),g),a=n*(n+2*k)+l):(h=Math.max(0,-(a*g+b)),n=0<h?g:Math.min(Math.max(-g,
    -k),g),a=-h*h+n*(n+2*k)+l)):(n=0<a?-g:g,h=Math.max(0,-(a*n+b)),a=-h*h+n*(n+2*k)+l);c&&c.copy(this.direction.clone().multiplyScalar(h).add(this.origin));d&&d.copy(f.clone().multiplyScalar(n).add(e));return a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?
    0:null;a=-(this.origin.dot(a.normal)+a.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x;f=1/this.direction.y;g=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=f?(e=(a.min.y-h.y)*f,f*=
    a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;0<=g?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,k){b.subVectors(f,e);c.subVectors(g,e);d.crossVectors(b,c);f=this.direction.dot(d);if(0<
    f){if(h)return null;h=1}else if(0>f)h=-1,f=-f;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;g=h*this.direction.dot(b.cross(a));if(0>g||e+g>f)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/f,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},
    clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;f<g;f++)e=Math.max(e,d.distanceToSquared(b[f]));this.radius=Math.sqrt(e);return this}}(),copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=
    this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);
    return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;g[0].copy(a);g[1].copy(b);g[2].copy(c);g[3].copy(d);g[4].copy(e);g[5].copy(f);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],k=c[6],l=c[7],p=c[8],n=c[9],u=c[10],t=c[11],s=c[12],r=c[13],v=c[14],c=c[15];b[0].setComponents(f-a,l-g,t-p,c-s).normalize();b[1].setComponents(f+
    a,l+g,t+p,c+s).normalize();b[2].setComponents(f+d,l+h,t+n,c+r).normalize();b[3].setComponents(f-d,l-h,t-n,c-r).normalize();b[4].setComponents(f-e,l-k,t-u,c-v).normalize();b[5].setComponents(f+e,l+k,t+u,c+v).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,
    c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x;b.x=0<f.normal.x?c.max.x:c.min.x;a.y=0<f.normal.y?c.min.y:c.max.y;b.y=0<f.normal.y?c.max.y:c.min.y;a.z=0<f.normal.z?c.min.z:c.max.z;b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),
    containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,
    c);return this}}(),copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,
b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f){if(0==this.distanceToPoint(b.start))return d.copy(b.start)}else return f=-(b.start.dot(this.normal)+this.constant)/f,0>f||1<f?void 0:d.copy(e).multiplyScalar(f).add(b.start)}}(),
    coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);g.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(f,g);return this}}(),translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&
        a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?b[e]="-":14==e?b[e]="4":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19==e?d&3|8:d]);return b.join("")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,
b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(){var a=Math.PI/
    180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,k,l,p,n,u;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:f+
    2;l=this.points[c[0]];p=this.points[c[1]];n=this.points[c[2]];u=this.points[c[3]];h=g*g;k=g*h;d.x=b(l.x,p.x,n.x,u.x,g,h,k);d.y=b(l.y,p.y,n.y,u.y,g,h,k);d.z=b(l.z,p.z,n.z,u.z,g,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
    a/c,d=this.getPoint(b),g.copy(d),k+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],k=new THREE.Vector3,l=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=l.chunks[b]-l.chunks[b-1];g=Math.ceil(a*c/l.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(k.copy(d).clone());
    h.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e);b.subVectors(f,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);f=a.dot(c);var k=b.dot(b);g=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0==l)return h.set(-2,-1,-1);l=1/l;k=(k*f-e*g)*l;d=(d*g-e*f)*l;return h.set(1-k-d,d,k)}}();
THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||
    new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
    clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
    a=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&
c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(){var a=[];return function(b){if(void 0!==this._listeners){var c=this._listeners[b.type];if(void 0!==c){b.target=this;for(var d=c.length,e=0;e<d;e++)a[e]=c[e];for(e=0;e<d;e++)a[e].call(this,
    b)}}}}()};
(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray;new a.Plane;new a.Vector3;var d=new a.Vector3,e=new a.Matrix4,f=function(a,b){return a.distance-b.distance},g=new a.Vector3,h=new a.Vector3,k=new a.Vector3,l=function(f,p,t){if(f instanceof a.Sprite){d.setFromMatrixPosition(f.matrixWorld);var s=p.ray.distanceToPoint(d);if(s>f.scale.x)return t;t.push({distance:s,point:f.position,face:null,object:f})}else if(f instanceof a.LOD)d.setFromMatrixPosition(f.matrixWorld),
    s=p.ray.origin.distanceTo(d),l(f.getObjectForDistance(s),p,t);else if(f instanceof a.Mesh){var r=f.geometry;null===r.boundingSphere&&r.computeBoundingSphere();b.copy(r.boundingSphere);b.applyMatrix4(f.matrixWorld);if(!1===p.ray.isIntersectionSphere(b))return t;e.getInverse(f.matrixWorld);c.copy(p.ray).applyMatrix4(e);if(null!==r.boundingBox&&!1===c.isIntersectionBox(r.boundingBox))return t;if(r instanceof a.BufferGeometry){var v=f.material;if(void 0===v||!1===r.dynamic)return t;var w,q,x=p.precision;
    if(void 0!==r.attributes.index)for(var y=r.offsets,I=r.attributes.index.array,H=r.attributes.position.array,D=r.offsets.length,B=r.attributes.index.array.length/3,B=0;B<D;++B)for(var s=y[B].start,G=y[B].index,r=s,M=s+y[B].count;r<M;r+=3)s=G+I[r],w=G+I[r+1],q=G+I[r+2],g.set(H[3*s],H[3*s+1],H[3*s+2]),h.set(H[3*w],H[3*w+1],H[3*w+2]),k.set(H[3*q],H[3*q+1],H[3*q+2]),w=v.side===a.BackSide?c.intersectTriangle(k,h,g,!0):c.intersectTriangle(g,h,k,v.side!==a.DoubleSide),null!==w&&(w.applyMatrix4(f.matrixWorld),
        s=p.ray.origin.distanceTo(w),s<x||s<p.near||s>p.far||t.push({distance:s,point:w,face:null,faceIndex:null,object:f}));else for(H=r.attributes.position.array,B=r.attributes.position.array.length,r=0;r<B;r+=3)s=r,w=r+1,q=r+2,g.set(H[3*s],H[3*s+1],H[3*s+2]),h.set(H[3*w],H[3*w+1],H[3*w+2]),k.set(H[3*q],H[3*q+1],H[3*q+2]),w=v.side===a.BackSide?c.intersectTriangle(k,h,g,!0):c.intersectTriangle(g,h,k,v.side!==a.DoubleSide),null!==w&&(w.applyMatrix4(f.matrixWorld),s=p.ray.origin.distanceTo(w),s<x||s<p.near||
        s>p.far||t.push({distance:s,point:w,face:null,faceIndex:null,object:f}))}else if(r instanceof a.Geometry)for(I=f.material instanceof a.MeshFaceMaterial,H=!0===I?f.material.materials:null,x=p.precision,y=r.vertices,D=0,B=r.faces.length;D<B;D++)G=r.faces[D],v=!0===I?H[G.materialIndex]:f.material,void 0!==v&&(s=y[G.a],w=y[G.b],q=y[G.c],w=v.side===a.BackSide?c.intersectTriangle(q,w,s,!0):c.intersectTriangle(s,w,q,v.side!==a.DoubleSide),null!==w&&(w.applyMatrix4(f.matrixWorld),s=p.ray.origin.distanceTo(w),
    s<x||s<p.near||s>p.far||t.push({distance:s,point:w,face:G,faceIndex:D,object:f})))}else if(f instanceof a.Line){x=p.linePrecision;v=x*x;r=f.geometry;null===r.boundingSphere&&r.computeBoundingSphere();b.copy(r.boundingSphere);b.applyMatrix4(f.matrixWorld);if(!1===p.ray.isIntersectionSphere(b))return t;e.getInverse(f.matrixWorld);c.copy(p.ray).applyMatrix4(e);if(r instanceof a.Geometry)for(y=r.vertices,x=y.length,w=new a.Vector3,q=new a.Vector3,B=f.type===a.LineStrip?1:2,r=0;r<x-1;r+=B)c.distanceSqToSegment(y[r],
    y[r+1],q,w)>v||(s=c.origin.distanceTo(q),s<p.near||s>p.far||t.push({distance:s,point:w.clone().applyMatrix4(f.matrixWorld),face:null,faceIndex:null,object:f}))}},p=function(a,b,c){a=a.getDescendants();for(var d=0,e=a.length;d<e;d++)l(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.linePrecision=1;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&p(a,this,c);l(a,this,c);c.sort(f);return c};a.Raycaster.prototype.intersectObjects=
    function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)l(a[d],this,c),!0===b&&p(a[d],this,c);c.sort(f);return c}})(THREE);
THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this._rotation=new THREE.Euler;this._quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this._rotation._quaternion=this.quaternion;this._quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;
    this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};
THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(a){this._rotation=a;this._rotation._quaternion=this._quaternion;this._quaternion._euler=this._rotation;this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(a){this._quaternion=a;this._quaternion._euler=this._rotation;this._rotation._quaternion=this._quaternion;this._quaternion._updateEuler()},get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");
    return this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var a=new THREE.Matrix4;return function(b){this.matrix.multiplyMatrices(b,
    this.matrix);this.position.setFromMatrixPosition(this.matrix);this.scale.setFromMatrixScale(this.matrix);a.extractRotation(this.matrix);this.quaternion.setFromRotationMatrix(a)}}(),setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;
    return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){a.copy(b);a.applyQuaternion(this.quaternion);
    this.position.add(a.multiplyScalar(c));return this}}(),translate:function(a,b){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=
    new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;a.dispatchEvent({type:"removed"});this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);
    for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");
    return this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):
    this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){void 0===a&&(a=new THREE.Object3D);void 0===b&&(b=!0);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.quaternion.copy(this.quaternion);a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);
    a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a.userData=JSON.parse(JSON.stringify(this.userData));if(!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){function a(){if(k===p){var a=new THREE.RenderableVertex;l.push(a);p++;k++;return a}return l[k++]}function b(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function c(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var d,e,f=[],g=
    0,h,k,l=[],p=0,n,u,t=[],s=0,r,v,w=[],q=0,x,y,I=[],H=0,D={objects:[],sprites:[],lights:[],elements:[]},B=new THREE.Vector3,G=new THREE.Vector4,M=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),z=new THREE.Box3,V=Array(3),F=new THREE.Matrix4,E=new THREE.Matrix4,A,J=new THREE.Matrix4,C=new THREE.Matrix3,R=new THREE.Matrix3,ma=new THREE.Vector3,P=new THREE.Frustum,ia=new THREE.Vector4,Z=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);
    E.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(E)};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);E.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse);return a.applyProjection(E)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,c)};var Y=function(a){if(e===g){var b=new THREE.RenderableObject;
    f.push(b);g++;e++;d=b}else d=f[e++];d.id=a.id;d.object=a;null!==a.renderDepth?d.z=a.renderDepth:(B.setFromMatrixPosition(a.matrixWorld),B.applyProjection(E),d.z=B.z);return d},L=function(a){if(!1!==a.visible){a instanceof THREE.Light?D.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?!1!==a.frustumCulled&&!0!==P.intersectsObject(a)||D.objects.push(Y(a)):a instanceof THREE.Sprite&&D.sprites.push(Y(a));for(var b=0,c=a.children.length;b<c;b++)L(a.children[b])}};this.projectScene=function(d,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             f,g,p){var B=!1,ga,T,ba,aa,da,S,Q,pa,Y,na,Ma,Ia;y=v=u=0;D.elements.length=0;!0===d.autoUpdate&&d.updateMatrixWorld();void 0===f.parent&&f.updateMatrixWorld();F.copy(f.matrixWorldInverse.getInverse(f.matrixWorld));E.multiplyMatrices(f.projectionMatrix,F);R.getNormalMatrix(F);P.setFromMatrix(E);e=0;D.objects.length=0;D.sprites.length=0;D.lights.length=0;L(d);!0===g&&D.objects.sort(b);d=0;for(g=D.objects.length;d<g;d++)if(Q=D.objects[d].object,A=Q.matrixWorld,k=0,Q instanceof THREE.Mesh){pa=Q.geometry;
    ba=pa.vertices;Y=pa.faces;pa=pa.faceVertexUvs;C.getNormalMatrix(A);Ma=Q.material instanceof THREE.MeshFaceMaterial;Ia=!0===Ma?Q.material:null;ga=0;for(T=ba.length;ga<T;ga++){h=a();h.positionWorld.copy(ba[ga]).applyMatrix4(A);h.positionScreen.copy(h.positionWorld).applyMatrix4(E);var qa=1/h.positionScreen.w;h.positionScreen.x*=qa;h.positionScreen.y*=qa;h.positionScreen.z*=qa;h.visible=!(-1>h.positionScreen.x||1<h.positionScreen.x||-1>h.positionScreen.y||1<h.positionScreen.y||-1>h.positionScreen.z||
        1<h.positionScreen.z)}ba=0;for(ga=Y.length;ba<ga;ba++)if(T=Y[ba],qa=!0===Ma?Ia.materials[T.materialIndex]:Q.material,void 0!==qa&&(S=qa.side,aa=l[T.a],da=l[T.b],na=l[T.c],V[0]=aa.positionScreen,V[1]=da.positionScreen,V[2]=na.positionScreen,!0===aa.visible||!0===da.visible||!0===na.visible||M.isIntersectionBox(z.setFromPoints(V))))if(B=0>(na.positionScreen.x-aa.positionScreen.x)*(da.positionScreen.y-aa.positionScreen.y)-(na.positionScreen.y-aa.positionScreen.y)*(da.positionScreen.x-aa.positionScreen.x),
        S===THREE.DoubleSide||B===(S===THREE.FrontSide)){if(u===s){var wa=new THREE.RenderableFace3;t.push(wa);s++;u++;n=wa}else n=t[u++];n.id=Q.id;n.v1.copy(aa);n.v2.copy(da);n.v3.copy(na);n.normalModel.copy(T.normal);!1!==B||S!==THREE.BackSide&&S!==THREE.DoubleSide||n.normalModel.negate();n.normalModel.applyMatrix3(C).normalize();n.normalModelView.copy(n.normalModel).applyMatrix3(R);n.centroidModel.copy(T.centroid).applyMatrix4(A);na=T.vertexNormals;aa=0;for(da=Math.min(na.length,3);aa<da;aa++)wa=n.vertexNormalsModel[aa],
        wa.copy(na[aa]),!1!==B||S!==THREE.BackSide&&S!==THREE.DoubleSide||wa.negate(),wa.applyMatrix3(C).normalize(),n.vertexNormalsModelView[aa].copy(wa).applyMatrix3(R);n.vertexNormalsLength=na.length;B=0;for(aa=Math.min(pa.length,3);B<aa;B++)if(na=pa[B][ba],void 0!==na)for(da=0,S=na.length;da<S;da++)n.uvs[B][da]=na[da];n.color=T.color;n.material=qa;ma.copy(n.centroidModel).applyProjection(E);n.z=ma.z;D.elements.push(n)}}else if(Q instanceof THREE.Line)for(J.multiplyMatrices(E,A),ba=Q.geometry.vertices,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   aa=a(),aa.positionScreen.copy(ba[0]).applyMatrix4(J),Y=Q.type===THREE.LinePieces?2:1,ga=1,T=ba.length;ga<T;ga++)aa=a(),aa.positionScreen.copy(ba[ga]).applyMatrix4(J),0<(ga+1)%Y||(da=l[k-2],ia.copy(aa.positionScreen),Z.copy(da.positionScreen),!0===c(ia,Z)&&(ia.multiplyScalar(1/ia.w),Z.multiplyScalar(1/Z.w),v===q?(pa=new THREE.RenderableLine,w.push(pa),q++,v++,r=pa):r=w[v++],r.id=Q.id,r.v1.positionScreen.copy(ia),r.v2.positionScreen.copy(Z),r.z=Math.max(ia.z,Z.z),r.material=Q.material,Q.material.vertexColors===
    THREE.VertexColors&&(r.vertexColors[0].copy(Q.geometry.colors[ga]),r.vertexColors[1].copy(Q.geometry.colors[ga-1])),D.elements.push(r)));d=0;for(g=D.sprites.length;d<g;d++)Q=D.sprites[d].object,A=Q.matrixWorld,G.set(A.elements[12],A.elements[13],A.elements[14],1),G.applyMatrix4(E),qa=1/G.w,G.z*=qa,-1<=G.z&&1>=G.z&&(y===H?(Y=new THREE.RenderableSprite,I.push(Y),H++,y++,x=Y):x=I[y++],x.id=Q.id,x.x=G.x*qa,x.y=G.y*qa,x.z=G.z,x.object=Q,x.rotation=Q.rotation,x.scale.x=Q.scale.x*Math.abs(x.x-(G.x+f.projectionMatrix.elements[0])/
    (G.w+f.projectionMatrix.elements[12])),x.scale.y=Q.scale.y*Math.abs(x.y-(G.y+f.projectionMatrix.elements[5])/(G.w+f.projectionMatrix.elements[13])),x.material=Q.material,D.elements.push(x));!0===p&&D.elements.sort(b);return D}};
THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
    return a}};THREE.Face4=function(a,b,c,d,e,f,g){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,e,f,g)};
THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=
    this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var f=0,g=e.vertexNormals.length;f<g;f++)e.vertexNormals[f].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof
THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g);b.subVectors(f,
    g);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else for(e=this.__tmpVertices,b=0,c=this.vertices.length;b<c;b++)e[b].set(0,0,0);if(a){var f,g,h=new THREE.Vector3,k=new THREE.Vector3;new THREE.Vector3;
    new THREE.Vector3;new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],a=this.vertices[d.a],f=this.vertices[d.b],g=this.vertices[d.c],h.subVectors(g,f),k.subVectors(a,f),h.cross(k),e[d.a].add(h),e[d.b].add(h),e[d.c].add(h)}else for(b=0,c=this.faces.length;b<c;b++)d=this.faces[b],e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal);b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),
    d.vertexNormals[2].copy(e[d.c])},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;f.faces=
    this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var g=this.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),g.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();
    c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=g.faceNormals[c],k=g.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,k,l,p,n,u,t,s,r,v,w=[],q=[];c=new THREE.Vector3;var x=new THREE.Vector3,y=new THREE.Vector3,I=new THREE.Vector3,H=new THREE.Vector3;
    a=0;for(b=this.vertices.length;a<b;a++)w[a]=new THREE.Vector3,q[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,v=e.b,e=e.c,g=this.vertices[d],h=this.vertices[v],k=this.vertices[e],l=f[0],p=f[1],n=f[2],f=h.x-g.x,u=k.x-g.x,t=h.y-g.y,s=k.y-g.y,h=h.z-g.z,g=k.z-g.z,k=p.x-l.x,r=n.x-l.x,p=p.y-l.y,l=n.y-l.y,n=1/(k*l-r*p),c.set((l*f-p*u)*n,(l*t-p*s)*n,(l*h-p*g)*n),x.set((k*u-r*f)*n,(k*s-r*t)*n,(k*g-r*h)*n),w[d].add(c),w[v].add(c),w[e].add(c),q[d].add(x),
        q[v].add(x),q[e].add(x);x=["a","b","c","d"];a=0;for(b=this.faces.length;a<b;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)H.copy(e.vertexNormals[c]),d=e[x[c]],v=w[d],y.copy(v),y.sub(H.multiplyScalar(H.dot(v))).normalize(),I.crossVectors(e.vertexNormals[c],v),d=I.dot(q[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(y.x,y.y,y.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=
    a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g;this.__tmpVertices=void 0;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=Math.round(d.x*e)+"_"+Math.round(d.y*e)+"_"+Math.round(d.z*
    e),void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];a=[];f=0;for(g=this.faces.length;f<g;f++)for(e=this.faces[f],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]==e[(d+1)%3]){a.push(f);break}for(f=a.length-1;0<=f;f--)for(e=a[f],this.faces.splice(e,1),c=0,g=this.faceVertexUvs.length;c<g;c++)this.faceVertexUvs[c].splice(e,1);f=this.vertices.length-b.length;this.vertices=b;return f},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<
    d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];c=0;for(d=b.length;c<d;c++){for(var e=b[c],f=[],g=0,h=e.length;g<h;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;
THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.dynamic=!0;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c,d){this.attributes[a]={itemSize:d,array:new b(c*d)}},applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&((new THREE.Matrix3).getNormalMatrix(a).multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===
this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=
    new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){for(var d=this.boundingSphere.center,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),a.addPoint(b);a.center(d);for(var g=0,e=0,f=c.length;e<f;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g)}}}(),computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;
    if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else for(a=0,b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0;var e=this.attributes.position.array,f=this.attributes.normal.array,g,h,k,l,p,n,u=new THREE.Vector3,t=new THREE.Vector3,s=new THREE.Vector3,r=new THREE.Vector3,v=new THREE.Vector3;if(this.attributes.index){var w=this.attributes.index.array,q=this.offsets;c=0;for(d=q.length;c<d;++c){b=q[c].start;g=q[c].count;var x=
        q[c].index;a=b;for(b+=g;a<b;a+=3)g=x+w[a],h=x+w[a+1],k=x+w[a+2],l=e[3*g],p=e[3*g+1],n=e[3*g+2],u.set(l,p,n),l=e[3*h],p=e[3*h+1],n=e[3*h+2],t.set(l,p,n),l=e[3*k],p=e[3*k+1],n=e[3*k+2],s.set(l,p,n),r.subVectors(s,t),v.subVectors(u,t),r.cross(v),f[3*g]+=r.x,f[3*g+1]+=r.y,f[3*g+2]+=r.z,f[3*h]+=r.x,f[3*h+1]+=r.y,f[3*h+2]+=r.z,f[3*k]+=r.x,f[3*k+1]+=r.y,f[3*k+2]+=r.z}}else for(a=0,b=e.length;a<b;a+=9)l=e[a],p=e[a+1],n=e[a+2],u.set(l,p,n),l=e[a+3],p=e[a+4],n=e[a+5],t.set(l,p,n),l=e[a+6],p=e[a+7],n=e[a+8],
        s.set(l,p,n),r.subVectors(s,t),v.subVectors(u,t),r.cross(v),f[a]=r.x,f[a+1]=r.y,f[a+2]=r.z,f[a+3]=r.x,f[a+4]=r.y,f[a+5]=r.z,f[a+6]=r.x,f[a+7]=r.y,f[a+8]=r.z;this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,f=a.length;e<f;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a,b,c){n=d[3*a];u=d[3*a+1];t=d[3*a+2];s=d[3*b];r=d[3*b+1];v=d[3*b+2];w=d[3*c];
    q=d[3*c+1];x=d[3*c+2];y=f[2*a];I=f[2*a+1];H=f[2*b];D=f[2*b+1];B=f[2*c];G=f[2*c+1];M=s-n;z=w-n;V=r-u;F=q-u;E=v-t;A=x-t;J=H-y;C=B-y;R=D-I;ma=G-I;P=1/(J*ma-C*R);ia.set((ma*M-R*z)*P,(ma*V-R*F)*P,(ma*E-R*A)*P);Z.set((J*z-C*M)*P,(J*F-C*V)*P,(J*A-C*E)*P);k[a].add(ia);k[b].add(ia);k[c].add(ia);l[a].add(Z);l[b].add(Z);l[c].add(Z)}function b(a){ba.x=e[3*a];ba.y=e[3*a+1];ba.z=e[3*a+2];aa.copy(ba);S=k[a];ga.copy(S);ga.sub(ba.multiplyScalar(ba.dot(S))).normalize();T.crossVectors(aa,S);Q=T.dot(l[a]);da=0>Q?-1:
    1;h[4*a]=ga.x;h[4*a+1]=ga.y;h[4*a+2]=ga.z;h[4*a+3]=da}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,
    array:new Float32Array(4*g)});for(var h=this.attributes.tangent.array,k=[],l=[],p=0;p<g;p++)k[p]=new THREE.Vector3,l[p]=new THREE.Vector3;var n,u,t,s,r,v,w,q,x,y,I,H,D,B,G,M,z,V,F,E,A,J,C,R,ma,P,ia=new THREE.Vector3,Z=new THREE.Vector3,Y,L,ca,N,ja,U=this.offsets,p=0;for(L=U.length;p<L;++p){Y=U[p].start;ca=U[p].count;var ta=U[p].index,g=Y;for(Y+=ca;g<Y;g+=3)ca=ta+c[g],N=ta+c[g+1],ja=ta+c[g+2],a(ca,N,ja)}var ga=new THREE.Vector3,T=new THREE.Vector3,ba=new THREE.Vector3,aa=new THREE.Vector3,da,S,Q,p=
    0;for(L=U.length;p<L;++p)for(Y=U[p].start,ca=U[p].count,ta=U[p].index,g=Y,Y+=ca;g<Y;g+=3)ca=ta+c[g],N=ta+c[g+1],ja=ta+c[g+2],b(ca),b(N),b(ja);this.tangentsNeedUpdate=this.hasTangents=!0}},clone:function(){var a=new THREE.BufferGeometry,b=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],c;for(c in this.attributes){for(var d=this.attributes[c],e=d.array,f={itemSize:d.itemSize,numItems:d.numItems,array:null},d=0,g=b.length;d<g;d++){var h=
    b[d];if(e instanceof h){f.array=new h(e);break}}a.attributes[c]=f}d=0;for(g=this.offsets.length;d<g;d++)b=this.offsets[d],a.offsets.push({start:b.start,index:b.index,count:b.count});return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();
THREE.Camera.prototype.clone=function(a){void 0===a&&(a=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,a);a.matrixWorldInverse.copy(this.matrixWorldInverse);a.projectionMatrix.copy(this.projectionMatrix);a.projectionMatrixInverse.copy(this.projectionMatrixInverse);return a};THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};
THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,a);a.left=this.left;a.right=this.right;a.top=this.top;a.bottom=this.bottom;a.near=this.near;a.far=this.far;return a};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,a);a.fov=this.fov;a.aspect=this.aspect;a.near=this.near;a.far=this.far;return a};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(a){void 0===a&&(a=new THREE.Light);THREE.Object3D.prototype.clone.call(this,a);a.color.copy(this.color);return a};
THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,a);return a};
THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
    0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.position.set(0,100,0);this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,a);a.groundColor.copy(this.groundColor);a.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;THREE.Light.prototype.clone.call(this,a);a.intensity=this.intensity;a.distance=this.distance;return a};
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
    this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,a);a.target=this.target.clone();a.intensity=this.intensity;a.distance=this.distance;a.angle=this.angle;a.exponent=this.exponent;a.castShadow=this.castShadow;a.onlyShadow=this.onlyShadow;return a};
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
    a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
    a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,b){var e=new Image;e.onload=function(){if(c(this.width)&&c(this.height))a.image=this;else{var b=d(this.width),e=d(this.height);a.image.width=b;a.image.height=e;a.image.getContext("2d").drawImage(this,0,0,b,e)}a.needsUpdate=!0};e.crossOrigin=h.crossOrigin;e.src=b}function f(a,c,d,f,g,h,k){var l=/\.dds$/i.test(d),p=b+"/"+d;if(l){var y=THREE.ImageUtils.loadCompressedTexture(p);a[c]=y}else y=document.createElement("canvas"),
    a[c]=new THREE.Texture(y);a[c].sourceFile=d;f&&(a[c].repeat.set(f[0],f[1]),1!==f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[c].wrapT=THREE.RepeatWrapping));g&&a[c].offset.set(g[0],g[1]);h&&(d={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==d[h[0]]&&(a[c].wrapS=d[h[0]]),void 0!==d[h[1]]&&(a[c].wrapT=d[h[1]]));k&&(a[c].anisotropy=k);l||e(a[c],p)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,k="MeshLambertMaterial",l={color:15658734,opacity:1,
    map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var p=a.shading.toLowerCase();"phong"===p?k="MeshPhongMaterial":"basic"===p&&(k="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(l.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)l.transparent=a.transparent;void 0!==a.depthTest&&(l.depthTest=a.depthTest);void 0!==a.depthWrite&&(l.depthWrite=a.depthWrite);void 0!==a.visible&&(l.visible=a.visible);void 0!==a.flipSided&&(l.side=THREE.BackSide);
    void 0!==a.doubleSided&&(l.side=THREE.DoubleSide);void 0!==a.wireframe&&(l.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?l.vertexColors=THREE.FaceColors:a.vertexColors&&(l.vertexColors=THREE.VertexColors));a.colorDiffuse?l.color=g(a.colorDiffuse):a.DbgColor&&(l.color=a.DbgColor);a.colorSpecular&&(l.specular=g(a.colorSpecular));a.colorAmbient&&(l.ambient=g(a.colorAmbient));a.transparency&&(l.opacity=a.transparency);a.specularCoef&&(l.shininess=a.specularCoef);a.mapDiffuse&&
    b&&f(l,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(l,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(l,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(l,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(l,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
        a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(l.bumpScale=a.mapBumpScale);a.mapNormal?(k=THREE.ShaderLib.normalmap,p=THREE.UniformsUtils.clone(k.uniforms),p.tNormal.value=l.normalMap,a.mapNormalFactor&&p.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),l.map&&(p.tDiffuse.value=l.map,p.enableDiffuse.value=!0),l.specularMap&&(p.tSpecular.value=l.specularMap,p.enableSpecular.value=!0),l.lightMap&&(p.tAO.value=l.lightMap,p.enableAO.value=!0),p.uDiffuseColor.value.setHex(l.color),
        p.uSpecularColor.value.setHex(l.specular),p.uAmbientColor.value.setHex(l.ambient),p.uShininess.value=l.shininess,void 0!==l.opacity&&(p.uOpacity.value=l.opacity),k=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:p,lights:!0,fog:!0}),l.transparent&&(k.transparent=!0)):k=new THREE[k](l);void 0!==a.envOpt&&(k.envOpt=a.envOpt);if(void 0!==a.envMap){l=[];for(p=0;6>p;++p)l[p]=b+"/"+a.envMap[p];k.envMap=new THREE.ImageUtils.loadTextureCube(l)}if(void 0!==a.envRefraction){l=
        [];for(p=0;6>p;++p)l[p]=b+"/"+a.envRefraction[p];k.envMap=new THREE.ImageUtils.loadTextureCube(l,new THREE.CubeRefractionMapping)}void 0!==a.refractionRatio&&(k.refractionRatio=a.refractionRatio);void 0!==a.reflectivity&&(k.reflectivity=a.reflectivity);void 0!==a.DbgName&&(k.name=a.DbgName);return k}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=new XMLHttpRequest;void 0!==b&&f.addEventListener("load",function(c){b(c.target.responseText);e.manager.itemEnd(a)},!1);void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&f.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);f.open("GET",a,!0);f.send(null);e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");void 0!==b&&f.addEventListener("load",function(c){e.manager.itemEnd(a);b(this)},!1);void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1);void 0!==d&&f.addEventListener("error",function(a){d(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);f.src=a;e.manager.itemStart(a);return f},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),h=a.parse(h,d);c(h.geometry,h.materials,h.textureInformation)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===
f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.withCredentials=this.withCredentials;f.send(null)};
THREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;(function(b){var d,g,h,k,l,p,n,u,t,s,r,v,w,q=a.faces;p=a.vertices;var x=a.normals,y=a.colors,I=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&I++;for(d=0;d<I;d++)c.faceVertexUvs[d]=[]}k=0;for(l=p.length;k<l;)d=new THREE.Vector3,d.x=p[k++]*b,d.y=p[k++]*b,d.z=p[k++]*b,c.vertices.push(d);k=0;for(l=q.length;k<l;)if(b=q[k++],t=b&1,h=b&2,d=b&8,n=b&16,s=b&32,p=b&64,b&=128,t){t=new THREE.Face3;
    t.a=q[k];t.b=q[k+1];t.c=q[k+3];r=new THREE.Face3;r.a=q[k+1];r.b=q[k+2];r.c=q[k+3];k+=4;h&&(h=q[k++],t.materialIndex=h,r.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<I;d++)for(v=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],g=0;4>g;g++)u=q[k++],w=v[2*u],u=v[2*u+1],w=new THREE.Vector2(w,u),2!==g&&c.faceVertexUvs[d][h].push(w),0!==g&&c.faceVertexUvs[d][h+1].push(w);n&&(n=3*q[k++],t.normal.set(x[n++],x[n++],x[n]),r.normal.copy(t.normal));if(s)for(d=0;4>d;d++)n=3*q[k++],s=new THREE.Vector3(x[n++],
        x[n++],x[n]),2!==d&&t.vertexNormals.push(s),0!==d&&r.vertexNormals.push(s);p&&(p=q[k++],p=y[p],t.color.setHex(p),r.color.setHex(p));if(b)for(d=0;4>d;d++)p=q[k++],p=y[p],2!==d&&t.vertexColors.push(new THREE.Color(p)),0!==d&&r.vertexColors.push(new THREE.Color(p));c.faces.push(t);c.faces.push(r)}else{t=new THREE.Face3;t.a=q[k++];t.b=q[k++];t.c=q[k++];h&&(h=q[k++],t.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<I;d++)for(v=a.uvs[d],c.faceVertexUvs[d][h]=[],g=0;3>g;g++)u=q[k++],w=v[2*u],u=v[2*u+1],
    w=new THREE.Vector2(w,u),c.faceVertexUvs[d][h].push(w);n&&(n=3*q[k++],t.normal.set(x[n++],x[n++],x[n]));if(s)for(d=0;3>d;d++)n=3*q[k++],s=new THREE.Vector3(x[n++],x[n++],x[n]),t.vertexNormals.push(s);p&&(p=q[k++],t.color.setHex(y[p]));if(b)for(d=0;3>d;d++)p=q[k++],t.vertexColors.push(new THREE.Color(y[p]));c.faces.push(t)}})(d);(function(){var b,d,g,h;if(a.skinWeights)for(b=0,d=a.skinWeights.length;b<d;b+=2)g=a.skinWeights[b],h=a.skinWeights[b+1],c.skinWeights.push(new THREE.Vector4(g,h,0,0));if(a.skinIndices)for(b=
d=a.skinIndices.length;b<d;b+=2)g=a.skinIndices[b],h=a.skinIndices[b+1],c.skinIndices.push(new THREE.Vector4(g,h,0,0));c.bones=a.bones;c.animation=a.animation;c.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var d,g,h,k,l,p;d=0;for(g=a.morphTargets.length;d<g;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,p=a.morphTargets[d].vertices,h=0,k=p.length;h<k;h+=3){var n=new THREE.Vector3;n.x=p[h]*
    b;n.y=p[h+1]*b;n.z=p[h+2]*b;l.push(n)}}if(void 0!==a.morphColors)for(d=0,g=a.morphColors.length;d<g;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,l=a.morphColors[d].colors,b=0,h=l.length;b<h;b+=3)p=new THREE.Color(16755200),p.setRGB(l[b],l[b+1],l[b+2]),k.push(p)})(d);c.computeCentroids();c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials)return{geometry:c};d=this.initMaterials(a.materials,b);this.needsTangents(d)&&
c.computeTangents();void 0!==a.textureInformation&&(a.textureInformation.texturePath=b);return{geometry:c,materials:d,textureInformation:a.textureInformation}};THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++};this.itemEnd=function(a){e++;if(void 0!==d.onProgress)d.onProgress(a,e,f);if(e===f&&void 0!==d.onLoad)d.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;
THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this;c=new THREE.XHRLoader;c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.attributes,d=a.offsets;a=a.boundingSphere;for(var e in c){var f=c[e];b.attributes[e]={itemSize:f.itemSize,array:new self[f.type](f.array)}}void 0!==d&&(b.offsets=JSON.parse(JSON.stringify(d)));
    void 0!==a&&(b.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==a.center?a.center:[0,0,0]),a.radius));return b}};THREE.GeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a,b,c,d){var e=this;c=new THREE.XHRLoader;c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){}};
THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this;c=new THREE.XHRLoader;c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];void 0!==a.color&&b.color.setHex(a.color);void 0!==a.ambient&&b.ambient.setHex(a.ambient);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&
(b.shininess=a.shininess);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.blending&&(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.wireframe&&(b.wireframe=a.wireframe);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){var e=this;c=new THREE.XHRLoader(e.manager);c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){b(e.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials);return this.parseObject(a.object,b,c)},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    e=0,f=a.length;e<f;e++){var g,h=a[e];switch(h.type){case "PlaneGeometry":g=new THREE.PlaneGeometry(h.width,h.height,h.widthSegments,h.heightSegments);break;case "CircleGeometry":g=new THREE.CircleGeometry(h.radius,h.segments);break;case "CubeGeometry":g=new THREE.CubeGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case "CylinderGeometry":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case "SphereGeometry":g=
    new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case "IcosahedronGeometry":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case "TorusGeometry":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case "TorusKnotGeometry":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case "BufferGeometry":g=d.parse(h.data);break;case "Geometry":g=
    c.parse(h.data).geometry}g.uuid=h.uuid;void 0!==h.name&&(g.name=h.name);b[h.uuid]=g}return b},parseMaterials:function(a){var b={};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;d<e;d++){var f=a[d],g=c.parse(f);g.uuid=f.uuid;void 0!==f.name&&(g.name=f.name);b[f.uuid]=g}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case "Scene":e=new THREE.Scene;break;case "PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,
    b.far);break;case "OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case "AmbientLight":e=new THREE.AmbientLight(b.color);break;case "DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case "PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case "SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case "HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,
    b.intensity);break;case "Mesh":e=c[b.geometry];var f=d[b.material];void 0===e&&console.error("THREE.ObjectLoader: Undefined geometry "+b.geometry);void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material);e=new THREE.Mesh(e,f);break;case "Sprite":f=d[b.material];void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material);e=new THREE.Sprite(f);break;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==b.name&&(e.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),
    a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&(e.userData=b.userData);if(void 0!==b.children)for(var g in b.children)e.add(this.parseObject(b.children[g],c,d));return e}}()};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};
THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b,c,d){var e=this;c=new THREE.XHRLoader(e.manager);c.setCrossOrigin(this.crossOrigin);c.load(a,function(c){e.parse(JSON.parse(c),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:t+"/"+a}function e(){f(B.scene,
    M.objects)}function f(a,b){var c,e,g,h,l,p;for(p in b){var n=B.objects[p],q=b[p];if(void 0===n){if(q.type&&q.type in u.hierarchyHandlers){if(void 0===q.loading){c={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var t={},w;for(w in q)w in c||(t[w]=q[w]);r=B.materials[q.material];q.loading=!0;c=u.hierarchyHandlers[q.type].loaderObject;c.options?c.load(d(q.url,M.urlBaseType),k(p,a,r,q)):c.load(d(q.url,M.urlBaseType),k(p,
    a,r,q),t)}}else if(void 0!==q.geometry){if(s=B.geometries[q.geometry]){n=!1;r=B.materials[q.material];n=r instanceof THREE.ShaderMaterial;e=q.position;g=q.rotation;h=q.scale;c=q.matrix;l=q.quaternion;q.material||(r=new THREE.MeshFaceMaterial(B.face_materials[q.geometry]));r instanceof THREE.MeshFaceMaterial&&0===r.materials.length&&(r=new THREE.MeshFaceMaterial(B.face_materials[q.geometry]));if(r instanceof THREE.MeshFaceMaterial)for(t=0;t<r.materials.length;t++)n=n||r.materials[t]instanceof THREE.ShaderMaterial;
    n&&s.computeTangents();q.skin?n=new THREE.SkinnedMesh(s,r):q.morph?(n=new THREE.MorphAnimMesh(s,r),void 0!==q.duration&&(n.duration=q.duration),void 0!==q.time&&(n.time=q.time),void 0!==q.mirroredLoop&&(n.mirroredLoop=q.mirroredLoop),r.morphNormals&&s.computeMorphNormals()):n=new THREE.Mesh(s,r);n.name=p;c?(n.matrixAutoUpdate=!1,n.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(n.position.fromArray(e),l?n.quaternion.fromArray(l):n.rotation.fromArray(g),
        n.scale.fromArray(h));n.visible=q.visible;n.castShadow=q.castShadow;n.receiveShadow=q.receiveShadow;a.add(n);B.objects[p]=n}}else if("AmbientLight"===q.type||"PointLight"===q.type||"DirectionalLight"===q.type||"SpotLight"===q.type||"HemisphereLight"===q.type||"AreaLight"===q.type){t=q.color;c=q.intensity;e=q.distance;g=q.position;h=q.rotation;switch(q.type){case "AmbientLight":x=new THREE.AmbientLight(t);break;case "PointLight":x=new THREE.PointLight(t,c,e);x.position.fromArray(g);break;case "DirectionalLight":x=
    new THREE.DirectionalLight(t,c);x.position.fromArray(q.direction);break;case "SpotLight":x=new THREE.SpotLight(t,c,e,1);x.angle=q.angle;x.position.fromArray(g);x.target.set(g[0],g[1]-e,g[2]);x.target.applyEuler(new THREE.Euler(h[0],h[1],h[2],"XYZ"));break;case "HemisphereLight":x=new THREE.DirectionalLight(t,c,e);x.target.set(g[0],g[1]-e,g[2]);x.target.applyEuler(new THREE.Euler(h[0],h[1],h[2],"XYZ"));break;case "AreaLight":x=new THREE.AreaLight(t,c),x.position.fromArray(g),x.width=q.size,x.height=
    q.size_y}a.add(x);x.name=p;B.lights[p]=x;B.objects[p]=x}else"PerspectiveCamera"===q.type||"OrthographicCamera"===q.type?(e=q.position,g=q.rotation,l=q.quaternion,"PerspectiveCamera"===q.type?v=new THREE.PerspectiveCamera(q.fov,q.aspect,q.near,q.far):"OrthographicCamera"===q.type&&(v=new THREE.OrthographicCamera(q.left,q.right,q.top,q.bottom,q.near,q.far)),v.name=p,v.position.fromArray(e),void 0!==l?v.quaternion.fromArray(l):void 0!==g&&v.rotation.fromArray(g),a.add(v),B.cameras[p]=v,B.objects[p]=
    v):(e=q.position,g=q.rotation,h=q.scale,l=q.quaternion,n=new THREE.Object3D,n.name=p,n.position.fromArray(e),l?n.quaternion.fromArray(l):n.rotation.fromArray(g),n.scale.fromArray(h),n.visible=void 0!==q.visible?q.visible:!1,a.add(n),B.objects[p]=n,B.empties[p]=n);if(n){if(void 0!==q.userData)for(var z in q.userData)n.userData[z]=q.userData[z];if(void 0!==q.groups)for(t=0;t<q.groups.length;t++)c=q.groups[t],void 0===B.groups[c]&&(B.groups[c]=[]),B.groups[c].push(p)}}void 0!==n&&void 0!==q.children&&
f(n,q.children)}}function g(a,b,c,d,f){var g=f.rotation,h=f.quaternion,k=f.scale;a.position.fromArray(f.position);h?a.quaternion.fromArray(h):a.rotation.fromArray(g);a.scale.fromArray(k);d&&a.traverse(function(a){a.material=d});var l=void 0!==f.visible?f.visible:!0;a.traverse(function(a){a.visible=l});c.add(a);a.name=b;B.objects[b]=a;e()}function h(a){return function(b,c){b.name=a;B.geometries[a]=b;B.face_materials[a]=c;e();y-=1;u.onLoadComplete();p()}}function k(a,b,c,d){return function(e){g(e.content?
    e.content:e.dae?e.scene:e,a,b,c,d);y-=1;u.onLoadComplete();p()}}function l(a){return function(b,c){b.name=a;B.geometries[a]=b;B.face_materials[a]=c}}function p(){u.callbackProgress({totalModels:H,totalTextures:D,loadedModels:H-y,loadedTextures:D-I},B);u.onLoadProgress();if(0===y&&0===I){for(var a=0;a<G.length;a++){var c=G[a],d=B.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,B.scene.add(c.object.target));c.object.target.userData.targetInverse=c.object}b(B)}}function n(a,
b){b(a);if(void 0!==a.children)for(var c in a.children)n(a.children[c],b)}var u=this,t=THREE.Loader.prototype.extractUrlBase(c),s,r,v,w,q,x,y,I,H,D,B,G=[],M=a,z;for(z in this.geometryHandlers)a=this.geometryHandlers[z].loaderClass,this.geometryHandlers[z].loaderObject=new a;for(z in this.hierarchyHandlers)a=this.hierarchyHandlers[z].loaderClass,this.hierarchyHandlers[z].loaderObject=new a;I=y=0;B={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},
    lights:{},fogs:{},empties:{},groups:{}};M.transform&&(z=M.transform.position,a=M.transform.rotation,c=M.transform.scale,z&&B.scene.position.fromArray(z),a&&B.scene.rotation.fromArray(a),c&&B.scene.scale.fromArray(c),z||a||c)&&(B.scene.updateMatrix(),B.scene.updateMatrixWorld());z=function(a){return function(){I-=a;p();u.onLoadComplete()}};for(var V in M.fogs)a=M.fogs[V],"linear"===a.type?w=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(w=new THREE.FogExp2(0,a.density)),a=a.color,w.color.setRGB(a[0],
    a[1],a[2]),B.fogs[V]=w;for(var F in M.geometries)w=M.geometries[F],w.type in this.geometryHandlers&&(y+=1,u.onLoadStart());for(var E in M.objects)n(M.objects[E],function(a){a.type&&a.type in u.hierarchyHandlers&&(y+=1,u.onLoadStart())});H=y;for(F in M.geometries)if(w=M.geometries[F],"cube"===w.type)s=new THREE.CubeGeometry(w.width,w.height,w.depth,w.widthSegments,w.heightSegments,w.depthSegments),s.name=F,B.geometries[F]=s;else if("plane"===w.type)s=new THREE.PlaneGeometry(w.width,w.height,w.widthSegments,
    w.heightSegments),s.name=F,B.geometries[F]=s;else if("sphere"===w.type)s=new THREE.SphereGeometry(w.radius,w.widthSegments,w.heightSegments),s.name=F,B.geometries[F]=s;else if("cylinder"===w.type)s=new THREE.CylinderGeometry(w.topRad,w.botRad,w.height,w.radSegs,w.heightSegs),s.name=F,B.geometries[F]=s;else if("torus"===w.type)s=new THREE.TorusGeometry(w.radius,w.tube,w.segmentsR,w.segmentsT),s.name=F,B.geometries[F]=s;else if("icosahedron"===w.type)s=new THREE.IcosahedronGeometry(w.radius,w.subdivisions),
    s.name=F,B.geometries[F]=s;else if(w.type in this.geometryHandlers){E={};for(q in w)"type"!==q&&"url"!==q&&(E[q]=w[q]);this.geometryHandlers[w.type].loaderObject.load(d(w.url,M.urlBaseType),h(F),E)}else"embedded"===w.type&&(E=M.embeds[w.id],E.metadata=M.metadata,E&&(E=this.geometryHandlers.ascii.loaderObject.parse(E,""),l(F)(E.geometry,E.materials)));for(var A in M.textures)if(F=M.textures[A],F.url instanceof Array)for(I+=F.url.length,q=0;q<F.url.length;q++)u.onLoadStart();else I+=1,u.onLoadStart();
    D=I;for(A in M.textures){F=M.textures[A];void 0!==F.mapping&&void 0!==THREE[F.mapping]&&(F.mapping=new THREE[F.mapping]);if(F.url instanceof Array){E=F.url.length;w=[];for(q=0;q<E;q++)w[q]=d(F.url[q],M.urlBaseType);q=(q=/\.dds$/i.test(w[0]))?THREE.ImageUtils.loadCompressedTextureCube(w,F.mapping,z(E)):THREE.ImageUtils.loadTextureCube(w,F.mapping,z(E))}else q=/\.dds$/i.test(F.url),E=d(F.url,M.urlBaseType),w=z(1),q=q?THREE.ImageUtils.loadCompressedTexture(E,F.mapping,w):THREE.ImageUtils.loadTexture(E,
        F.mapping,w),void 0!==THREE[F.minFilter]&&(q.minFilter=THREE[F.minFilter]),void 0!==THREE[F.magFilter]&&(q.magFilter=THREE[F.magFilter]),F.anisotropy&&(q.anisotropy=F.anisotropy),F.repeat&&(q.repeat.set(F.repeat[0],F.repeat[1]),1!==F.repeat[0]&&(q.wrapS=THREE.RepeatWrapping),1!==F.repeat[1]&&(q.wrapT=THREE.RepeatWrapping)),F.offset&&q.offset.set(F.offset[0],F.offset[1]),F.wrap&&(E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==E[F.wrap[0]]&&(q.wrapS=E[F.wrap[0]]),void 0!==
        E[F.wrap[1]]&&(q.wrapT=E[F.wrap[1]]));B.textures[A]=q}var J,C;for(J in M.materials){A=M.materials[J];for(C in A.parameters)"envMap"===C||"map"===C||"lightMap"===C||"bumpMap"===C?A.parameters[C]=B.textures[A.parameters[C]]:"shading"===C?A.parameters[C]="flat"===A.parameters[C]?THREE.FlatShading:THREE.SmoothShading:"side"===C?A.parameters[C]="double"==A.parameters[C]?THREE.DoubleSide:"back"==A.parameters[C]?THREE.BackSide:THREE.FrontSide:"blending"===C?A.parameters[C]=A.parameters[C]in THREE?THREE[A.parameters[C]]:
        THREE.NormalBlending:"combine"===C?A.parameters[C]=A.parameters[C]in THREE?THREE[A.parameters[C]]:THREE.MultiplyOperation:"vertexColors"===C?"face"==A.parameters[C]?A.parameters[C]=THREE.FaceColors:A.parameters[C]&&(A.parameters[C]=THREE.VertexColors):"wrapRGB"===C&&(z=A.parameters[C],A.parameters[C]=new THREE.Vector3(z[0],z[1],z[2]));void 0!==A.parameters.opacity&&1>A.parameters.opacity&&(A.parameters.transparent=!0);A.parameters.normalMap?(z=THREE.ShaderLib.normalmap,F=THREE.UniformsUtils.clone(z.uniforms),
        q=A.parameters.color,E=A.parameters.specular,w=A.parameters.ambient,V=A.parameters.shininess,F.tNormal.value=B.textures[A.parameters.normalMap],A.parameters.normalScale&&F.uNormalScale.value.set(A.parameters.normalScale[0],A.parameters.normalScale[1]),A.parameters.map&&(F.tDiffuse.value=A.parameters.map,F.enableDiffuse.value=!0),A.parameters.envMap&&(F.tCube.value=A.parameters.envMap,F.enableReflection.value=!0,F.uReflectivity.value=A.parameters.reflectivity),A.parameters.lightMap&&(F.tAO.value=A.parameters.lightMap,
        F.enableAO.value=!0),A.parameters.specularMap&&(F.tSpecular.value=B.textures[A.parameters.specularMap],F.enableSpecular.value=!0),A.parameters.displacementMap&&(F.tDisplacement.value=B.textures[A.parameters.displacementMap],F.enableDisplacement.value=!0,F.uDisplacementBias.value=A.parameters.displacementBias,F.uDisplacementScale.value=A.parameters.displacementScale),F.uDiffuseColor.value.setHex(q),F.uSpecularColor.value.setHex(E),F.uAmbientColor.value.setHex(w),F.uShininess.value=V,A.parameters.opacity&&
        (F.uOpacity.value=A.parameters.opacity),r=new THREE.ShaderMaterial({fragmentShader:z.fragmentShader,vertexShader:z.vertexShader,uniforms:F,lights:!0,fog:!0})):r=new THREE[A.type](A.parameters);r.name=J;B.materials[J]=r}for(J in M.materials)if(A=M.materials[J],A.parameters.materials){C=[];for(q=0;q<A.parameters.materials.length;q++)C.push(B.materials[A.parameters.materials[q]]);B.materials[J].materials=C}e();B.cameras&&M.defaults.camera&&(B.currentCamera=B.cameras[M.defaults.camera]);B.fogs&&M.defaults.fog&&
    (B.scene.fog=B.fogs[M.defaults.fog]);u.callbackSync(B);p()}};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){c=new THREE.ImageLoader(this.manager);c.setCrossOrigin(this.crossOrigin);c.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)})},setCrossOrigin:function(a){this.crossOrigin=a}};
THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;
    a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;a.visible=this.visible;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
    this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
    "round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
    a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
    this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
    a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a};THREE.ParticleSystemMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleSystemMaterial.prototype.clone=function(){var a=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(a)};
THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
    this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.rotation=this.rotation;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(a,c){};this.setValues(a)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;
THREE.Texture=function(a,b,c,d,e,f,g,h,k){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==k?k:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;
    this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
    this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,k,l,p){THREE.Texture.call(this,null,f,g,h,k,l,d,e,p);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};
THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
    this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
    THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||b)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;b=0;for(var c=this.children.length;b<c;b++){var d=this.children[b];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}if(void 0==this.boneInverses)for(this.boneInverses=
b=0,c=this.bones.length;b<c;b++)d=new THREE.Matrix4,d.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(d);b=0;for(c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object};
THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;d<e;d++)if(c>=this.objects[d].distance)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;else break;for(;d<e;d++)this.objects[d].object.visible=!1}}}();THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Particle=THREE.Sprite;
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1);if(a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else a instanceof THREE.Camera||(this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Scene.prototype.clone=function(a){void 0===a&&(a=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,a);null!==this.fog&&(a.fog=this.fog.clone());null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone());a.autoUpdate=this.autoUpdate;a.matrixAutoUpdate=this.matrixAutoUpdate;return a};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};
THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(a){function b(a,b,c){for(var d=0,e=y.length;d<e;d++){var f=y[d];Ma.copy(f.color);if(f instanceof THREE.DirectionalLight){var g=ea.setFromMatrixPosition(f.matrixWorld).normalize(),h=b.dot(g);0>=h||(h*=f.intensity,c.add(Ma.multiplyScalar(h)))}else f instanceof THREE.PointLight&&(g=ea.setFromMatrixPosition(f.matrixWorld),h=b.dot(ea.subVectors(g,a).normalize()),0>=h||(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0!=h&&(h*=f.intensity,c.add(Ma.multiplyScalar(h)))))}}
    function c(a,b,c,d){p(b);n(c);u(d);t(a.getStyle());z.stroke();ya.expandByScalar(2*b)}function d(a){s(a.getStyle());z.fill()}function e(a,b,c,e,f,g,h,m,k,l,p,n,q){if(!(q instanceof THREE.DataTexture||void 0===q.image||0===q.image.width)){if(!0===q.needsUpdate){var r=q.wrapS===THREE.RepeatWrapping,t=q.wrapT===THREE.RepeatWrapping;Ia[q.id]=z.createPattern(q.image,!0===r&&!0===t?"repeat":!0===r&&!1===t?"repeat-x":!1===r&&!0===t?"repeat-y":"no-repeat");q.needsUpdate=!1}void 0===Ia[q.id]?s("rgba(0,0,0,1)"):
        s(Ia[q.id]);var r=q.offset.x/q.repeat.x,t=q.offset.y/q.repeat.y,u=q.image.width*q.repeat.x,v=q.image.height*q.repeat.y;h=(h+r)*u;m=(1-m+t)*v;c-=a;e-=b;f-=a;g-=b;k=(k+r)*u-h;l=(1-l+t)*v-m;p=(p+r)*u-h;n=(1-n+t)*v-m;r=k*n-p*l;0===r?(void 0===qa[q.id]&&(b=document.createElement("canvas"),b.width=q.image.width,b.height=q.image.height,b=b.getContext("2d"),b.drawImage(q.image,0,0),qa[q.id]=b.getImageData(0,0,q.image.width,q.image.height).data),b=qa[q.id],h=4*(Math.floor(h)+Math.floor(m)*q.image.width),aa.setRGB(b[h]/
        255,b[h+1]/255,b[h+2]/255),d(aa)):(r=1/r,q=(n*c-l*f)*r,l=(n*e-l*g)*r,c=(k*f-p*c)*r,e=(k*g-p*e)*r,a=a-q*h-c*m,h=b-l*h-e*m,z.save(),z.transform(q,l,c,e,a,h),z.fill(),z.restore())}}function f(a,b,c,d,e,f,g,h,m,k,l,p,n){var q,r;q=n.width-1;r=n.height-1;g*=q;h*=r;c-=a;d-=b;e-=a;f-=b;m=m*q-g;k=k*r-h;l=l*q-g;p=p*r-h;r=1/(m*p-l*k);q=(p*c-k*e)*r;k=(p*d-k*f)*r;c=(m*e-l*c)*r;d=(m*f-l*d)*r;a=a-q*g-c*h;b=b-k*g-d*h;z.save();z.transform(q,k,c,d,a,b);z.clip();z.drawImage(n,0,0);z.restore()}function g(a,b,c,d){xa[0]=
        255*a.r|0;xa[1]=255*a.g|0;xa[2]=255*a.b|0;xa[4]=255*b.r|0;xa[5]=255*b.g|0;xa[6]=255*b.b|0;xa[8]=255*c.r|0;xa[9]=255*c.g|0;xa[10]=255*c.b|0;xa[12]=255*d.r|0;xa[13]=255*d.g|0;xa[14]=255*d.b|0;Na.putImageData(m,0,0);Ja.drawImage(Ea,0,0);return Oa}function h(a,b,c){var d=b.x-a.x,e=b.y-a.y,f=d*d+e*e;0!==f&&(c/=Math.sqrt(f),d*=c,e*=c,b.x+=d,b.y+=e,a.x-=d,a.y-=e)}function k(a){E!==a&&(E=z.globalAlpha=a)}function l(a){A!==a&&(a===THREE.NormalBlending?z.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?
        z.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(z.globalCompositeOperation="darker"),A=a)}function p(a){R!==a&&(R=z.lineWidth=a)}function n(a){ma!==a&&(ma=z.lineCap=a)}function u(a){P!==a&&(P=z.lineJoin=a)}function t(a){J!==a&&(J=z.strokeStyle=a)}function s(a){C!==a&&(C=z.fillStyle=a)}function r(a,b){if(ia!==a||Z!==b)z.setLineDash([a,b]),ia=a,Z=b}console.log("THREE.CanvasRenderer",THREE.REVISION);var v=THREE.Math.smoothstep;a=a||{};var w=this,q,x,y,I=new THREE.Projector,H=void 0!==
        a.canvas?a.canvas:document.createElement("canvas"),D=H.width,B=H.height,G=Math.floor(D/2),M=Math.floor(B/2),z=H.getContext("2d"),V=new THREE.Color(0),F=0,E=1,A=0,J=null,C=null,R=null,ma=null,P=null,ia=null,Z=0,Y,L,ca,N;new THREE.RenderableVertex;new THREE.RenderableVertex;var ja,U,ta,ga,T,ba,aa=new THREE.Color,da=new THREE.Color,S=new THREE.Color,Q=new THREE.Color,pa=new THREE.Color,Da=new THREE.Color,na=new THREE.Color,Ma=new THREE.Color,Ia={},qa={},wa,Ta,Pa,Ua,ub,bb,cb,Ka,gb,rb,Qa=new THREE.Box2,
        la=new THREE.Box2,ya=new THREE.Box2,db=new THREE.Color,Bb=new THREE.Color,va=new THREE.Color,ea=new THREE.Vector3,Ea,Na,m,xa,Oa,Ja,za=16;Ea=document.createElement("canvas");Ea.width=Ea.height=2;Na=Ea.getContext("2d");Na.fillStyle="rgba(0,0,0,1)";Na.fillRect(0,0,2,2);m=Na.getImageData(0,0,2,2);xa=m.data;Oa=document.createElement("canvas");Oa.width=Oa.height=za;Ja=Oa.getContext("2d");Ja.translate(-za/2,-za/2);Ja.scale(za,za);za--;void 0===z.setLineDash&&(z.setLineDash=void 0!==z.mozDash?function(a){z.mozDash=
            null!==a[0]?a:null}:function(){});this.domElement=H;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(a,b,c){D=a*this.devicePixelRatio;B=b*this.devicePixelRatio;G=Math.floor(D/2);M=Math.floor(B/2);H.width=D;H.height=B;1!==this.devicePixelRatio&&
        !1!==c&&(H.style.width=a+"px",H.style.height=b+"px");Qa.set(new THREE.Vector2(-G,-M),new THREE.Vector2(G,M));la.set(new THREE.Vector2(-G,-M),new THREE.Vector2(G,M));E=1;A=0;P=ma=R=C=J=null};this.setClearColor=function(a,b){V.set(a);F=void 0!==b?b:1;la.set(new THREE.Vector2(-G,-M),new THREE.Vector2(G,M))};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getMaxAnisotropy=function(){return 0};
    this.clear=function(){z.setTransform(1,0,0,-1,G,M);!1===la.empty()&&(la.intersect(Qa),la.expandByScalar(2),1>F&&z.clearRect(la.min.x|0,la.min.y|0,la.max.x-la.min.x|0,la.max.y-la.min.y|0),0<F&&(l(THREE.NormalBlending),k(1),s("rgba("+Math.floor(255*V.r)+","+Math.floor(255*V.g)+","+Math.floor(255*V.b)+","+F+")"),z.fillRect(la.min.x|0,la.min.y|0,la.max.x-la.min.x|0,la.max.y-la.min.y|0)),la.makeEmpty())};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=
        function(a,m){if(!1===m instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();z.setTransform(1,0,0,-1,G,M);w.info.render.vertices=0;w.info.render.faces=0;q=I.projectScene(a,m,this.sortObjects,this.sortElements);x=q.elements;y=q.lights;Y=m;db.setRGB(0,0,0);Bb.setRGB(0,0,0);va.setRGB(0,0,0);for(var B=0,F=y.length;B<F;B++){var D=y[B],H=D.color;D instanceof THREE.AmbientLight?db.add(H):D instanceof THREE.DirectionalLight?
            Bb.add(H):D instanceof THREE.PointLight&&va.add(H)}B=0;for(F=x.length;B<F;B++){var A=x[B],C=A.material;if(void 0!==C&&!1!==C.visible){ya.makeEmpty();if(A instanceof THREE.RenderableSprite){L=A;L.x*=G;L.y*=M;var D=L,H=A,J=C;k(J.opacity);l(J.blending);var A=H.scale.x*G,C=H.scale.y*M,E=.5*Math.sqrt(A*A+C*C);ya.min.set(D.x-E,D.y-E);ya.max.set(D.x+E,D.y+E);!1===Qa.isIntersectionBox(ya)?ya.makeEmpty():J instanceof THREE.SpriteMaterial||J instanceof THREE.ParticleSystemMaterial?(null!==J.map?(H=J.map.image,
            z.save(),z.translate(D.x,D.y),z.rotate(J.rotation),z.scale(A,-C),z.drawImage(H,0,0,H.width,H.height,-.5,-.5,1,1)):(s(J.color.getStyle()),z.save(),z.translate(D.x,D.y),z.rotate(J.rotation),z.scale(A,-C),z.fillRect(-.5,-.5,1,1)),z.restore()):J instanceof THREE.SpriteCanvasMaterial&&(t(J.color.getStyle()),s(J.color.getStyle()),z.save(),z.translate(D.x,D.y),z.rotate(-H.rotation),z.scale(A,C),J.program(z),z.restore())}else if(A instanceof THREE.RenderableLine){if(L=A.v1,ca=A.v2,L.positionScreen.x*=G,L.positionScreen.y*=
            M,ca.positionScreen.x*=G,ca.positionScreen.y*=M,ya.setFromPoints([L.positionScreen,ca.positionScreen]),!0===Qa.isIntersectionBox(ya))if(D=L,H=ca,J=A,A=C,k(A.opacity),l(A.blending),z.beginPath(),z.moveTo(D.positionScreen.x,D.positionScreen.y),z.lineTo(H.positionScreen.x,H.positionScreen.y),A instanceof THREE.LineBasicMaterial){p(A.linewidth);n(A.linecap);u(A.linejoin);if(A.vertexColors!==THREE.VertexColors)t(A.color.getStyle());else if(C=J.vertexColors[0].getStyle(),J=J.vertexColors[1].getStyle(),
            C===J)t(C);else{try{var R=z.createLinearGradient(D.positionScreen.x,D.positionScreen.y,H.positionScreen.x,H.positionScreen.y);R.addColorStop(0,C);R.addColorStop(1,J)}catch(V){R=C}t(R)}z.stroke();ya.expandByScalar(2*A.linewidth)}else A instanceof THREE.LineDashedMaterial&&(p(A.linewidth),n(A.linecap),u(A.linejoin),t(A.color.getStyle()),r(A.dashSize,A.gapSize),z.stroke(),ya.expandByScalar(2*A.linewidth),r(null,null))}else if(A instanceof THREE.RenderableFace3){L=A.v1;ca=A.v2;N=A.v3;if(-1>L.positionScreen.z||
            1<L.positionScreen.z)continue;if(-1>ca.positionScreen.z||1<ca.positionScreen.z)continue;if(-1>N.positionScreen.z||1<N.positionScreen.z)continue;L.positionScreen.x*=G;L.positionScreen.y*=M;ca.positionScreen.x*=G;ca.positionScreen.y*=M;N.positionScreen.x*=G;N.positionScreen.y*=M;0<C.overdraw&&(h(L.positionScreen,ca.positionScreen,C.overdraw),h(ca.positionScreen,N.positionScreen,C.overdraw),h(N.positionScreen,L.positionScreen,C.overdraw));ya.setFromPoints([L.positionScreen,ca.positionScreen,N.positionScreen]);
            if(!0===Qa.isIntersectionBox(ya)){D=L;H=ca;J=N;w.info.render.vertices+=3;w.info.render.faces++;k(C.opacity);l(C.blending);ja=D.positionScreen.x;U=D.positionScreen.y;ta=H.positionScreen.x;ga=H.positionScreen.y;T=J.positionScreen.x;ba=J.positionScreen.y;var E=ja,P=U,Z=ta,ia=ga,qa=T,ma=ba;z.beginPath();z.moveTo(E,P);z.lineTo(Z,ia);z.lineTo(qa,ma);z.closePath();(C instanceof THREE.MeshLambertMaterial||C instanceof THREE.MeshPhongMaterial)&&null===C.map?(Da.copy(C.color),na.copy(C.emissive),C.vertexColors===
                THREE.FaceColors&&Da.multiply(A.color),!1===C.wireframe&&C.shading===THREE.SmoothShading&&3===A.vertexNormalsLength?(da.copy(db),S.copy(db),Q.copy(db),b(A.v1.positionWorld,A.vertexNormalsModel[0],da),b(A.v2.positionWorld,A.vertexNormalsModel[1],S),b(A.v3.positionWorld,A.vertexNormalsModel[2],Q),da.multiply(Da).add(na),S.multiply(Da).add(na),Q.multiply(Da).add(na),pa.addColors(S,Q).multiplyScalar(.5),Pa=g(da,S,Q,pa),f(ja,U,ta,ga,T,ba,0,0,1,0,0,1,Pa)):(aa.copy(db),b(A.centroidModel,A.normalModel,aa),
                aa.multiply(Da).add(na),!0===C.wireframe?c(aa,C.wireframeLinewidth,C.wireframeLinecap,C.wireframeLinejoin):d(aa))):C instanceof THREE.MeshBasicMaterial||C instanceof THREE.MeshLambertMaterial||C instanceof THREE.MeshPhongMaterial?null!==C.map?C.map.mapping instanceof THREE.UVMapping&&(Ua=A.uvs[0],e(ja,U,ta,ga,T,ba,Ua[0].x,Ua[0].y,Ua[1].x,Ua[1].y,Ua[2].x,Ua[2].y,C.map)):null!==C.envMap?C.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(ea.copy(A.vertexNormalsModelView[0]),ub=.5*ea.x+.5,
                bb=.5*ea.y+.5,ea.copy(A.vertexNormalsModelView[1]),cb=.5*ea.x+.5,Ka=.5*ea.y+.5,ea.copy(A.vertexNormalsModelView[2]),gb=.5*ea.x+.5,rb=.5*ea.y+.5,e(ja,U,ta,ga,T,ba,ub,bb,cb,Ka,gb,rb,C.envMap)):(aa.copy(C.color),C.vertexColors===THREE.FaceColors&&aa.multiply(A.color),!0===C.wireframe?c(aa,C.wireframeLinewidth,C.wireframeLinecap,C.wireframeLinejoin):d(aa)):C instanceof THREE.MeshDepthMaterial?(wa=Y.near,Ta=Y.far,da.r=da.g=da.b=1-v(D.positionScreen.z*D.positionScreen.w,wa,Ta),S.r=S.g=S.b=1-v(H.positionScreen.z*
                H.positionScreen.w,wa,Ta),Q.r=Q.g=Q.b=1-v(J.positionScreen.z*J.positionScreen.w,wa,Ta),pa.addColors(S,Q).multiplyScalar(.5),Pa=g(da,S,Q,pa),f(ja,U,ta,ga,T,ba,0,0,1,0,0,1,Pa)):C instanceof THREE.MeshNormalMaterial&&(D=void 0,C.shading===THREE.FlatShading?(D=A.normalModelView,aa.setRGB(D.x,D.y,D.z).multiplyScalar(.5).addScalar(.5),!0===C.wireframe?c(aa,C.wireframeLinewidth,C.wireframeLinecap,C.wireframeLinejoin):d(aa)):C.shading===THREE.SmoothShading&&(D=A.vertexNormalsModelView[0],da.setRGB(D.x,D.y,
                D.z).multiplyScalar(.5).addScalar(.5),D=A.vertexNormalsModelView[1],S.setRGB(D.x,D.y,D.z).multiplyScalar(.5).addScalar(.5),D=A.vertexNormalsModelView[2],Q.setRGB(D.x,D.y,D.z).multiplyScalar(.5).addScalar(.5),pa.addColors(S,Q).multiplyScalar(.5),Pa=g(da,S,Q,pa),f(ja,U,ta,ga,T,ba,0,0,1,0,0,1,Pa)))}}la.union(ya)}}z.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
    envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
    envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
    envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
    map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
    map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
    lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
    normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
    specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
    lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
    lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
    lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
    lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
    lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
    color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
    skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
    morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
    default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
    skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
    shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
    shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
    value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
    value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
    value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
    THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
    THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
    THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
    THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
    THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
    THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
    THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
    value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
    "void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
    THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
    THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
    THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
    THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
    THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
    fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
    value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",
    THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",
    value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",
    value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
    THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
    THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
    THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
    cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
    depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=m.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
    function c(a,b){var c=b.geometry,g=a.faces3,h=3*g.length,k=1*g.length,l=3*g.length,g=d(b,a),p=f(g),n=e(g),q=g.vertexColors?g.vertexColors:!1;a.__vertexArray=new Float32Array(3*h);n&&(a.__normalArray=new Float32Array(3*h));c.hasTangents&&(a.__tangentArray=new Float32Array(4*h));q&&(a.__colorArray=new Float32Array(3*h));p&&(0<c.faceVertexUvs.length&&(a.__uvArray=new Float32Array(2*h)),1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*h)));b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&
    (a.__skinIndexArray=new Float32Array(4*h),a.__skinWeightArray=new Float32Array(4*h));a.__faceArray=new Uint16Array(3*k);a.__lineArray=new Uint16Array(2*l);if(a.numMorphTargets)for(a.__morphTargetsArrays=[],c=0,p=a.numMorphTargets;c<p;c++)a.__morphTargetsArrays.push(new Float32Array(3*h));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0,p=a.numMorphNormals;c<p;c++)a.__morphNormalsArrays.push(new Float32Array(3*h));a.__webglFaceCount=3*k;a.__webglLineCount=2*l;if(g.attributes){void 0===a.__webglCustomAttributesList&&
    (a.__webglCustomAttributesList=[]);for(var r in g.attributes){var k=g.attributes[r],l={},t;for(t in k)l[t]=k[t];if(!l.__webglInitialized||l.createUniqueBuffers)l.__webglInitialized=!0,c=1,"v2"===l.type?c=2:"v3"===l.type?c=3:"v4"===l.type?c=4:"c"===l.type&&(c=3),l.size=c,l.array=new Float32Array(h*c),l.buffer=m.createBuffer(),l.buffer.belongsToAttribute=r,k.needsUpdate=!0,l.__original=k;a.__webglCustomAttributesList.push(l)}}a.__inittedArrays=!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?
        a.material.materials[b.materialIndex]:a.material}function e(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a){la[a]||(m.enableVertexAttribArray(a),la[a]=!0)}function h(){for(var a in la)la[a]&&(m.disableVertexAttribArray(a),la[a]=
        !1)}function k(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function l(a,b){return b[0]-a[0]}function p(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)aa=ta=null,T=ba=pa=Q=wa=qa=Da=-1,Ea=!0,a[d].render(b,c,rb,Qa),aa=ta=null,T=ba=pa=Q=wa=qa=Da=-1,Ea=!0}function n(a,b,c,d,e,f,g,h){var m,k,l,p;b?(k=a.length-1,p=b=-1):(k=0,b=a.length,p=1);for(var n=k;n!==b;n+=p)if(m=a[n],m.render){k=m.object;l=m.buffer;if(h)m=h;else{m=m[c];if(!m)continue;g&&N.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst);
        N.setDepthTest(m.depthTest);N.setDepthWrite(m.depthWrite);G(m.polygonOffset,m.polygonOffsetFactor,m.polygonOffsetUnits)}N.setMaterialFaces(m);l instanceof THREE.BufferGeometry?N.renderBufferDirect(d,e,f,m,l,k):N.renderBuffer(d,e,f,m,l,k)}}function u(a,b,c,d,e,f,g){for(var h,m,k=0,l=a.length;k<l;k++)if(h=a[k],m=h.object,m.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&N.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);N.setDepthTest(h.depthTest);N.setDepthWrite(h.depthWrite);G(h.polygonOffset,
        h.polygonOffsetFactor,h.polygonOffsetUnits)}N.renderImmediateObject(c,d,e,h,m)}}function t(a,d){var e,f,g,h;if(void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",Fb)),f=a.geometry,void 0!==f))if(f instanceof THREE.BufferGeometry){var k,l;for(k in f.attributes)l="index"===k?m.ELEMENT_ARRAY_BUFFER:m.ARRAY_BUFFER,h=f.attributes[k],
        void 0===h.numItems&&(h.numItems=h.array.length),h.buffer=m.createBuffer(),m.bindBuffer(l,h.buffer),m.bufferData(l,h.array,m.STATIC_DRAW)}else if(a instanceof THREE.Mesh){g=a.material;if(void 0===f.geometryGroups){k=f;var p,n,q;l={};var r=k.morphTargets.length,t=k.morphNormals.length,u=g instanceof THREE.MeshFaceMaterial;k.geometryGroups={};g=0;for(p=k.faces.length;g<p;g++)n=k.faces[g],n=u?n.materialIndex:0,void 0===l[n]&&(l[n]={hash:n,counter:0}),q=l[n].hash+"_"+l[n].counter,void 0===k.geometryGroups[q]&&
        (k.geometryGroups[q]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:r,numMorphNormals:t}),65535<k.geometryGroups[q].vertices+3&&(l[n].counter+=1,q=l[n].hash+"_"+l[n].counter,void 0===k.geometryGroups[q]&&(k.geometryGroups[q]={faces3:[],materialIndex:n,vertices:0,numMorphTargets:r,numMorphNormals:t})),k.geometryGroups[q].faces3.push(g),k.geometryGroups[q].vertices+=3;k.geometryGroupsList=[];for(h in k.geometryGroups)k.geometryGroups[h].id=da++,k.geometryGroupsList.push(k.geometryGroups[h])}for(e in f.geometryGroups)if(h=
        f.geometryGroups[e],!h.__webglVertexBuffer){k=h;k.__webglVertexBuffer=m.createBuffer();k.__webglNormalBuffer=m.createBuffer();k.__webglTangentBuffer=m.createBuffer();k.__webglColorBuffer=m.createBuffer();k.__webglUVBuffer=m.createBuffer();k.__webglUV2Buffer=m.createBuffer();k.__webglSkinIndicesBuffer=m.createBuffer();k.__webglSkinWeightsBuffer=m.createBuffer();k.__webglFaceBuffer=m.createBuffer();k.__webglLineBuffer=m.createBuffer();r=l=void 0;if(k.numMorphTargets)for(k.__webglMorphTargetsBuffers=
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     [],l=0,r=k.numMorphTargets;l<r;l++)k.__webglMorphTargetsBuffers.push(m.createBuffer());if(k.numMorphNormals)for(k.__webglMorphNormalsBuffers=[],l=0,r=k.numMorphNormals;l<r;l++)k.__webglMorphNormalsBuffers.push(m.createBuffer());N.info.memory.geometries++;c(h,a);f.verticesNeedUpdate=!0;f.morphTargetsNeedUpdate=!0;f.elementsNeedUpdate=!0;f.uvsNeedUpdate=!0;f.normalsNeedUpdate=!0;f.tangentsNeedUpdate=!0;f.colorsNeedUpdate=!0}}else a instanceof THREE.Line?f.__webglVertexBuffer||(h=f,h.__webglVertexBuffer=
        m.createBuffer(),h.__webglColorBuffer=m.createBuffer(),h.__webglLineDistanceBuffer=m.createBuffer(),N.info.memory.geometries++,h=f,k=h.vertices.length,h.__vertexArray=new Float32Array(3*k),h.__colorArray=new Float32Array(3*k),h.__lineDistanceArray=new Float32Array(1*k),h.__webglLineCount=k,b(h,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0,f.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&!f.__webglVertexBuffer&&(h=f,h.__webglVertexBuffer=m.createBuffer(),h.__webglColorBuffer=m.createBuffer(),
        N.info.memory.geometries++,h=f,k=h.vertices.length,h.__vertexArray=new Float32Array(3*k),h.__colorArray=new Float32Array(3*k),h.__sortArray=[],h.__webglParticleCount=k,b(h,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0);if(void 0===a.__webglActive){if(a instanceof THREE.Mesh)if(f=a.geometry,f instanceof THREE.BufferGeometry)s(d.__webglObjects,f,a);else{if(f instanceof THREE.Geometry)for(e in f.geometryGroups)h=f.geometryGroups[e],s(d.__webglObjects,h,a)}else a instanceof THREE.Line||a instanceof
        THREE.ParticleSystem?(f=a.geometry,s(d.__webglObjects,f,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?d.__webglObjectsImmediate.push({id:null,object:a,opaque:null,transparent:null,z:0}):a instanceof THREE.Sprite?d.__webglSprites.push(a):a instanceof THREE.LensFlare&&d.__webglFlares.push(a);a.__webglActive=!0}}function s(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;
        return!1}function v(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function w(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Line?q(b.__webglObjects,a):a instanceof THREE.Sprite?x(b.__webglSprites,a):a instanceof THREE.LensFlare?x(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&q(b.__webglObjectsImmediate,a);delete a.__webglActive}function q(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}
    function x(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function y(a,b,c,d,e){S=0;d.needsUpdate&&(d.program&&Kb(d),N.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(N.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,k=d.uniforms;g!==ta&&(m.useProgram(g),ta=g,f=!0);d.id!==T&&(T=d.id,f=!0);if(f||a!==aa)m.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==aa&&(aa=a);if(d.skinning)if(Ab&&
        e.useVertexTexture){if(null!==h.boneTexture){var l=I();m.uniform1i(h.boneTexture,l);N.setTexture(e.boneTexture,l)}null!==h.boneTextureWidth&&m.uniform1i(h.boneTextureWidth,e.boneTextureWidth);null!==h.boneTextureHeight&&m.uniform1i(h.boneTextureHeight,e.boneTextureHeight)}else null!==h.boneGlobalMatrices&&m.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(k.fogColor.value=c.color,c instanceof THREE.Fog?(k.fogNear.value=c.near,k.fogFar.value=c.far):c instanceof THREE.FogExp2&&
        (k.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Ea){var p,n=l=0,q=0,r,t,u,s=Na,v=s.directional.colors,w=s.directional.positions,x=s.point.colors,z=s.point.positions,A=s.point.distances,B=s.spot.colors,y=s.spot.positions,M=s.spot.distances,G=s.spot.directions,L=s.spot.anglesCos,E=s.spot.exponents,U=s.hemi.skyColors,R=s.hemi.groundColors,Q=s.hemi.positions,ga=0,da=0,ba=0,P=0,ca=0,hc=0,ic=0,Sb=0,Z=p=0;c=u=Z=0;for(f=b.length;c<
        f;c++)if(p=b[c],!p.onlyShadow)if(r=p.color,t=p.intensity,u=p.distance,p instanceof THREE.AmbientLight)p.visible&&(N.gammaInput?(l+=r.r*r.r,n+=r.g*r.g,q+=r.b*r.b):(l+=r.r,n+=r.g,q+=r.b));else if(p instanceof THREE.DirectionalLight){if(ca+=1,p.visible&&(ea.setFromMatrixPosition(p.matrixWorld),va.setFromMatrixPosition(p.target.matrixWorld),ea.sub(va),ea.normalize(),0!==ea.x||0!==ea.y||0!==ea.z))p=3*ga,w[p]=ea.x,w[p+1]=ea.y,w[p+2]=ea.z,N.gammaInput?H(v,p,r,t*t):D(v,p,r,t),ga+=1}else p instanceof THREE.PointLight?
        (hc+=1,p.visible&&(Z=3*da,N.gammaInput?H(x,Z,r,t*t):D(x,Z,r,t),va.setFromMatrixPosition(p.matrixWorld),z[Z]=va.x,z[Z+1]=va.y,z[Z+2]=va.z,A[da]=u,da+=1)):p instanceof THREE.SpotLight?(ic+=1,p.visible&&(Z=3*ba,N.gammaInput?H(B,Z,r,t*t):D(B,Z,r,t),va.setFromMatrixPosition(p.matrixWorld),y[Z]=va.x,y[Z+1]=va.y,y[Z+2]=va.z,M[ba]=u,ea.copy(va),va.setFromMatrixPosition(p.target.matrixWorld),ea.sub(va),ea.normalize(),G[Z]=ea.x,G[Z+1]=ea.y,G[Z+2]=ea.z,L[ba]=Math.cos(p.angle),E[ba]=p.exponent,ba+=1)):p instanceof
        THREE.HemisphereLight&&(Sb+=1,p.visible&&(ea.setFromMatrixPosition(p.matrixWorld),ea.normalize(),0!==ea.x||0!==ea.y||0!==ea.z))&&(u=3*P,Q[u]=ea.x,Q[u+1]=ea.y,Q[u+2]=ea.z,r=p.color,p=p.groundColor,N.gammaInput?(t*=t,H(U,u,r,t),H(R,u,p,t)):(D(U,u,r,t),D(R,u,p,t)),P+=1);c=3*ga;for(f=Math.max(v.length,3*ca);c<f;c++)v[c]=0;c=3*da;for(f=Math.max(x.length,3*hc);c<f;c++)x[c]=0;c=3*ba;for(f=Math.max(B.length,3*ic);c<f;c++)B[c]=0;c=3*P;for(f=Math.max(U.length,3*Sb);c<f;c++)U[c]=0;c=3*P;for(f=Math.max(R.length,
            3*Sb);c<f;c++)R[c]=0;s.directional.length=ga;s.point.length=da;s.spot.length=ba;s.hemi.length=P;s.ambient[0]=l;s.ambient[1]=n;s.ambient[2]=q;Ea=!1}c=Na;k.ambientLightColor.value=c.ambient;k.directionalLightColor.value=c.directional.colors;k.directionalLightDirection.value=c.directional.positions;k.pointLightColor.value=c.point.colors;k.pointLightPosition.value=c.point.positions;k.pointLightDistance.value=c.point.distances;k.spotLightColor.value=c.spot.colors;k.spotLightPosition.value=c.spot.positions;
        k.spotLightDistance.value=c.spot.distances;k.spotLightDirection.value=c.spot.directions;k.spotLightAngleCos.value=c.spot.anglesCos;k.spotLightExponent.value=c.spot.exponents;k.hemisphereLightSkyColor.value=c.hemi.skyColors;k.hemisphereLightGroundColor.value=c.hemi.groundColors;k.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){k.opacity.value=d.opacity;N.gammaInput?k.diffuse.value.copyGammaToLinear(d.color):
        k.diffuse.value=d.color;k.map.value=d.map;k.lightMap.value=d.lightMap;k.specularMap.value=d.specularMap;d.bumpMap&&(k.bumpMap.value=d.bumpMap,k.bumpScale.value=d.bumpScale);d.normalMap&&(k.normalMap.value=d.normalMap,k.normalScale.value.copy(d.normalScale));var Y;d.map?Y=d.map:d.specularMap?Y=d.specularMap:d.normalMap?Y=d.normalMap:d.bumpMap&&(Y=d.bumpMap);void 0!==Y&&(c=Y.offset,Y=Y.repeat,k.offsetRepeat.value.set(c.x,c.y,Y.x,Y.y));k.envMap.value=d.envMap;k.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?
        1:-1;k.reflectivity.value=d.reflectivity;k.refractionRatio.value=d.refractionRatio;k.combine.value=d.combine;k.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(k.diffuse.value=d.color,k.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(k.diffuse.value=d.color,k.opacity.value=d.opacity,k.dashSize.value=d.dashSize,k.totalSize.value=d.dashSize+d.gapSize,k.scale.value=d.scale):d instanceof THREE.ParticleSystemMaterial?
        (k.psColor.value=d.color,k.opacity.value=d.opacity,k.size.value=d.size,k.scale.value=C.height/2,k.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(k.shininess.value=d.shininess,N.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.emissive.value.copyGammaToLinear(d.emissive),k.specular.value.copyGammaToLinear(d.specular)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive,k.specular.value=d.specular),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?
        (N.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.emissive.value.copyGammaToLinear(d.emissive)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(k.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&k.shadowMatrix)for(c=Y=0,f=b.length;c<f;c++)l=b[c],l.castShadow&&(l instanceof THREE.SpotLight||
        l instanceof THREE.DirectionalLight&&!l.shadowCascade)&&(k.shadowMap.value[Y]=l.shadowMap,k.shadowMapSize.value[Y]=l.shadowMapSize,k.shadowMatrix.value[Y]=l.shadowMatrix,k.shadowDarkness.value[Y]=l.shadowDarkness,k.shadowBias.value[Y]=l.shadowBias,Y++);b=d.uniformsList;k=0;for(Y=b.length;k<Y;k++)if(f=g.uniforms[b[k][1]])if(c=b[k][0],n=c.type,l=c.value,"i"===n)m.uniform1i(f,l);else if("f"===n)m.uniform1f(f,l);else if("v2"===n)m.uniform2f(f,l.x,l.y);else if("v3"===n)m.uniform3f(f,l.x,l.y,l.z);else if("v4"===
        n)m.uniform4f(f,l.x,l.y,l.z,l.w);else if("c"===n)m.uniform3f(f,l.r,l.g,l.b);else if("iv1"===n)m.uniform1iv(f,l);else if("iv"===n)m.uniform3iv(f,l);else if("fv1"===n)m.uniform1fv(f,l);else if("fv"===n)m.uniform3fv(f,l);else if("v2v"===n){void 0===c._array&&(c._array=new Float32Array(2*l.length));n=0;for(q=l.length;n<q;n++)s=2*n,c._array[s]=l[n].x,c._array[s+1]=l[n].y;m.uniform2fv(f,c._array)}else if("v3v"===n){void 0===c._array&&(c._array=new Float32Array(3*l.length));n=0;for(q=l.length;n<q;n++)s=
        3*n,c._array[s]=l[n].x,c._array[s+1]=l[n].y,c._array[s+2]=l[n].z;m.uniform3fv(f,c._array)}else if("v4v"===n){void 0===c._array&&(c._array=new Float32Array(4*l.length));n=0;for(q=l.length;n<q;n++)s=4*n,c._array[s]=l[n].x,c._array[s+1]=l[n].y,c._array[s+2]=l[n].z,c._array[s+3]=l[n].w;m.uniform4fv(f,c._array)}else if("m4"===n)void 0===c._array&&(c._array=new Float32Array(16)),l.flattenToArray(c._array),m.uniformMatrix4fv(f,!1,c._array);else if("m4v"===n){void 0===c._array&&(c._array=new Float32Array(16*
        l.length));n=0;for(q=l.length;n<q;n++)l[n].flattenToArrayOffset(c._array,16*n);m.uniformMatrix4fv(f,!1,c._array)}else if("t"===n){if(s=l,l=I(),m.uniform1i(f,l),s)if(s.image instanceof Array&&6===s.image.length){if(c=s,f=l,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.addEventListener("dispose",Gb),c.image.__webglTextureCube=m.createTexture(),N.info.memory.textures++);m.activeTexture(m.TEXTURE0+f);m.bindTexture(m.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,
        c.flipY);f=c instanceof THREE.CompressedTexture;l=[];for(n=0;6>n;n++)N.autoScaleCubemaps&&!f?(q=l,s=n,v=c.image[n],x=dc,v.width<=x&&v.height<=x||(z=Math.max(v.width,v.height),w=Math.floor(v.width*x/z),x=Math.floor(v.height*x/z),z=document.createElement("canvas"),z.width=w,z.height=x,z.getContext("2d").drawImage(v,0,0,v.width,v.height,0,0,w,x),v=z),q[s]=v):l[n]=c.image[n];n=l[0];q=V(n.width)&&V(n.height);s=J(c.format);v=J(c.type);F(m.TEXTURE_CUBE_MAP,c,q);for(n=0;6>n;n++)if(f)for(x=l[n].mipmaps,z=
        0,A=x.length;z<A;z++)w=x[z],c.format!==THREE.RGBAFormat?m.compressedTexImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+n,z,s,w.width,w.height,0,w.data):m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+n,z,s,w.width,w.height,0,s,v,w.data);else m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,v,l[n]);c.generateMipmaps&&q&&m.generateMipmap(m.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else m.activeTexture(m.TEXTURE0+f),m.bindTexture(m.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else s instanceof
    THREE.WebGLRenderTargetCube?(c=s,m.activeTexture(m.TEXTURE0+l),m.bindTexture(m.TEXTURE_CUBE_MAP,c.__webglTexture)):N.setTexture(s,l)}else if("tv"===n){void 0===c._array&&(c._array=[]);n=0;for(q=c.value.length;n<q;n++)c._array[n]=I();m.uniform1iv(f,c._array);n=0;for(q=c.value.length;n<q;n++)s=c.value[n],l=c._array[n],s&&N.setTexture(s,l)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+n);(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition&&
    (va.setFromMatrixPosition(a.matrixWorld),m.uniform3f(h.cameraPosition,va.x,va.y,va.z));(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&m.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}m.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&m.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&m.uniformMatrix4fv(h.modelMatrix,
        !1,e.matrixWorld.elements);return g}function I(){var a=S;a>=Pb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Pb);S+=1;return a}function H(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function D(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function B(a){a!==ub&&(m.lineWidth(a),ub=a)}function G(a,b,c){Ta!==a&&(a?m.enable(m.POLYGON_OFFSET_FILL):m.disable(m.POLYGON_OFFSET_FILL),Ta=a);!a||Pa===b&&Ua===c||(m.polygonOffset(b,c),Pa=b,Ua=c)}function M(a){a=
        a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function z(a,b){var c;"fragment"===a?c=m.createShader(m.FRAGMENT_SHADER):"vertex"===a&&(c=m.createShader(m.VERTEX_SHADER));m.shaderSource(c,b);m.compileShader(c);return m.getShaderParameter(c,m.COMPILE_STATUS)?c:(console.error(m.getShaderInfoLog(c)),console.error(M(b)),null)}function V(a){return 0===(a&a-1)}function F(a,b,c){c?(m.texParameteri(a,m.TEXTURE_WRAP_S,J(b.wrapS)),m.texParameteri(a,m.TEXTURE_WRAP_T,J(b.wrapT)),
        m.texParameteri(a,m.TEXTURE_MAG_FILTER,J(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,J(b.minFilter))):(m.texParameteri(a,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(a,m.TEXTURE_MAG_FILTER,A(b.magFilter)),m.texParameteri(a,m.TEXTURE_MIN_FILTER,A(b.minFilter)));Ja&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy)&&(m.texParameterf(a,Ja.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Qb)),b.__oldAnisotropy=b.anisotropy)}
    function E(a,b){m.bindRenderbuffer(m.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_COMPONENT16,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,b.width,b.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a)):m.renderbufferStorage(m.RENDERBUFFER,m.RGBA4,b.width,b.height)}function A(a){return a===
        THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?m.NEAREST:m.LINEAR}function J(a){if(a===THREE.RepeatWrapping)return m.REPEAT;if(a===THREE.ClampToEdgeWrapping)return m.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return m.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return m.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return m.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return m.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return m.LINEAR;
        if(a===THREE.LinearMipMapNearestFilter)return m.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return m.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return m.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return m.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return m.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return m.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return m.BYTE;if(a===THREE.ShortType)return m.SHORT;if(a===THREE.UnsignedShortType)return m.UNSIGNED_SHORT;
        if(a===THREE.IntType)return m.INT;if(a===THREE.UnsignedIntType)return m.UNSIGNED_INT;if(a===THREE.FloatType)return m.FLOAT;if(a===THREE.AlphaFormat)return m.ALPHA;if(a===THREE.RGBFormat)return m.RGB;if(a===THREE.RGBAFormat)return m.RGBA;if(a===THREE.LuminanceFormat)return m.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return m.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return m.FUNC_ADD;if(a===THREE.SubtractEquation)return m.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return m.FUNC_REVERSE_SUBTRACT;
        if(a===THREE.ZeroFactor)return m.ZERO;if(a===THREE.OneFactor)return m.ONE;if(a===THREE.SrcColorFactor)return m.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return m.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return m.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return m.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return m.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return m.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return m.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return m.ONE_MINUS_DST_COLOR;
        if(a===THREE.SrcAlphaSaturateFactor)return m.SRC_ALPHA_SATURATE;if(void 0!==za){if(a===THREE.RGB_S3TC_DXT1_Format)return za.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return za.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return za.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return za.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var C=void 0!==a.canvas?a.canvas:document.createElement("canvas"),
        R=void 0!==a.precision?a.precision:"highp",ma=void 0!==a.alpha?a.alpha:!1,P=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ia=void 0!==a.antialias?a.antialias:!1,Z=void 0!==a.stencil?a.stencil:!0,Y=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,L=new THREE.Color(0),ca=0;this.domElement=C;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=
        this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,
        faces:0,points:0}};var N=this,ja=[],U=0,ta=null,ga=null,T=-1,ba=null,aa=null,da=0,S=0,Q=-1,pa=-1,Da=-1,na=-1,Ma=-1,Ia=-1,qa=-1,wa=-1,Ta=null,Pa=null,Ua=null,ub=null,bb=0,cb=0,Ka=C.width,gb=C.height,rb=0,Qa=0,la={},ya=new THREE.Frustum,db=new THREE.Matrix4,Bb=new THREE.Matrix4,va=new THREE.Vector3,ea=new THREE.Vector3,Ea=!0,Na={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],
        anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},m,xa,Oa,Ja,za;(function(){try{var a={alpha:ma,premultipliedAlpha:P,antialias:ia,stencil:Z,preserveDrawingBuffer:Y};m=C.getContext("webgl",a)||C.getContext("experimental-webgl",a);if(null===m)throw"Error creating WebGL context.";}catch(b){console.error(b)}xa=m.getExtension("OES_texture_float");m.getExtension("OES_texture_float_linear");Oa=m.getExtension("OES_standard_derivatives");Ja=m.getExtension("EXT_texture_filter_anisotropic")||
        m.getExtension("MOZ_EXT_texture_filter_anisotropic")||m.getExtension("WEBKIT_EXT_texture_filter_anisotropic");za=m.getExtension("WEBGL_compressed_texture_s3tc")||m.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||m.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");xa||console.log("THREE.WebGLRenderer: Float textures not supported.");Oa||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Ja||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");
        za||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===m.getShaderPrecisionFormat&&(m.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})})();m.clearColor(0,0,0,1);m.clearDepth(1);m.clearStencil(0);m.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);m.enable(m.CULL_FACE);m.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA);m.viewport(bb,cb,Ka,gb);m.clearColor(L.r,L.g,
        L.b,ca);this.context=m;var Pb=m.getParameter(m.MAX_TEXTURE_IMAGE_UNITS),cc=m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS);m.getParameter(m.MAX_TEXTURE_SIZE);var dc=m.getParameter(m.MAX_CUBE_MAP_TEXTURE_SIZE),Qb=Ja?m.getParameter(Ja.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Eb=0<cc,Ab=Eb&&xa;za&&m.getParameter(m.COMPRESSED_TEXTURE_FORMATS);var ec=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.HIGH_FLOAT),fc=m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.MEDIUM_FLOAT);m.getShaderPrecisionFormat(m.VERTEX_SHADER,
        m.LOW_FLOAT);var gc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.HIGH_FLOAT),vc=m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.MEDIUM_FLOAT);m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.LOW_FLOAT);m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.HIGH_INT);m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.MEDIUM_INT);m.getShaderPrecisionFormat(m.VERTEX_SHADER,m.LOW_INT);m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.HIGH_INT);m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,m.MEDIUM_INT);m.getShaderPrecisionFormat(m.FRAGMENT_SHADER,
        m.LOW_INT);var wc=0<ec.precision&&0<gc.precision,Rb=0<fc.precision&&0<vc.precision;"highp"!==R||wc||(Rb?(R="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(R="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"!==R||Rb||(R="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return m};this.supportsVertexTextures=function(){return Eb};this.supportsFloatTextures=function(){return xa};
    this.supportsStandardDerivatives=function(){return Oa};this.supportsCompressedTextureS3TC=function(){return za};this.getMaxAnisotropy=function(){return Qb};this.getPrecision=function(){return R};this.setSize=function(a,b,c){C.width=a*this.devicePixelRatio;C.height=b*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==c&&(C.style.width=a+"px",C.style.height=b+"px");this.setViewport(0,0,C.width,C.height)};this.setViewport=function(a,b,c,d){bb=void 0!==a?a:0;cb=void 0!==b?b:0;Ka=void 0!==c?c:C.width;
        gb=void 0!==d?d:C.height;m.viewport(bb,cb,Ka,gb)};this.setScissor=function(a,b,c,d){m.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?m.enable(m.SCISSOR_TEST):m.disable(m.SCISSOR_TEST)};this.setClearColor=function(a,b){L.set(a);ca=void 0!==b?b:1;m.clearColor(L.r,L.g,L.b,ca)};this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(a,b)};this.getClearColor=function(){return L};this.getClearAlpha=function(){return ca};
    this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=m.COLOR_BUFFER_BIT;if(void 0===b||b)d|=m.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=m.STENCIL_BUFFER_BIT;m.clear(d)};this.clearColor=function(){m.clear(m.COLOR_BUFFER_BIT)};this.clearDepth=function(){m.clear(m.DEPTH_BUFFER_BIT)};this.clearStencil=function(){m.clear(m.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=
        function(a){a.init(this);this.renderPluginsPre.push(a)};this.updateShadowMap=function(a,b){ta=null;T=ba=wa=qa=Da=-1;Ea=!0;pa=Q=-1;this.shadowMapPlugin.update(a,b)};var Fb=function(a){a=a.target;a.removeEventListener("dispose",Fb);a.__webglInit=void 0;if(a instanceof THREE.BufferGeometry){var b=a.attributes,c;for(c in b)void 0!==b[c].buffer&&m.deleteBuffer(b[c].buffer);N.info.memory.geometries--}else if(void 0!==a.geometryGroups)for(b in a.geometryGroups){c=a.geometryGroups[b];if(void 0!==c.numMorphTargets)for(var d=
        0,e=c.numMorphTargets;d<e;d++)m.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(void 0!==c.numMorphNormals)for(d=0,e=c.numMorphNormals;d<e;d++)m.deleteBuffer(c.__webglMorphNormalsBuffers[d]);Jb(c)}else Jb(a)},Gb=function(a){a=a.target;a.removeEventListener("dispose",Gb);a.image&&a.image.__webglTextureCube?m.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,m.deleteTexture(a.__webglTexture));N.info.memory.textures--},Hb=function(a){a=a.target;a.removeEventListener("dispose",
        Hb);if(a&&a.__webglTexture)if(m.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)m.deleteFramebuffer(a.__webglFramebuffer[b]),m.deleteRenderbuffer(a.__webglRenderbuffer[b]);else m.deleteFramebuffer(a.__webglFramebuffer),m.deleteRenderbuffer(a.__webglRenderbuffer);N.info.memory.textures--},Ib=function(a){a=a.target;a.removeEventListener("dispose",Ib);Kb(a)},Jb=function(a){void 0!==a.__webglVertexBuffer&&m.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&
    m.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&m.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&m.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&m.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&m.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&m.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&m.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&m.deleteBuffer(a.__webglFaceBuffer);
        void 0!==a.__webglLineBuffer&&m.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&m.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)m.deleteBuffer(a.__webglCustomAttributesList[b].buffer);N.info.memory.geometries--},Kb=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;a=0;for(c=ja.length;a<c;a++)if(d=ja[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=
        [];a=0;for(c=ja.length;a<c;a++)d=ja[a],d.program!==b&&e.push(d);ja=e;m.deleteProgram(b);N.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=m.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=m.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=m.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=m.createBuffer());a.hasPositions&&(m.bindBuffer(m.ARRAY_BUFFER,
        a.__webglVertexBuffer),m.bufferData(m.ARRAY_BUFFER,a.positionArray,m.DYNAMIC_DRAW),m.enableVertexAttribArray(b.attributes.position),m.vertexAttribPointer(b.attributes.position,3,m.FLOAT,!1,0,0));if(a.hasNormals){m.bindBuffer(m.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,k,l,n,p,q,r,s=3*a.count;for(r=0;r<s;r+=9)q=a.normalArray,d=q[r],e=q[r+1],f=q[r+2],g=q[r+3],k=q[r+4],n=q[r+5],h=q[r+6],l=q[r+7],p=q[r+8],d=(d+g+h)/3,e=(e+k+l)/3,f=(f+n+p)/3,q[r]=d,q[r+1]=e,q[r+
        2]=f,q[r+3]=d,q[r+4]=e,q[r+5]=f,q[r+6]=d,q[r+7]=e,q[r+8]=f}m.bufferData(m.ARRAY_BUFFER,a.normalArray,m.DYNAMIC_DRAW);m.enableVertexAttribArray(b.attributes.normal);m.vertexAttribPointer(b.attributes.normal,3,m.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(m.bindBuffer(m.ARRAY_BUFFER,a.__webglUvBuffer),m.bufferData(m.ARRAY_BUFFER,a.uvArray,m.DYNAMIC_DRAW),m.enableVertexAttribArray(b.attributes.uv),m.vertexAttribPointer(b.attributes.uv,2,m.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(m.bindBuffer(m.ARRAY_BUFFER,
        a.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,a.colorArray,m.DYNAMIC_DRAW),m.enableVertexAttribArray(b.attributes.color),m.vertexAttribPointer(b.attributes.color,3,m.FLOAT,!1,0,0));m.drawArrays(m.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var k,l,n,p;k=y(a,b,c,d,f);b=k.attributes;a=e.attributes;c=!1;k=16777215*e.id+2*k.id+(d.wireframe?1:0);k!==ba&&(ba=k,c=!0);c&&h();if(f instanceof THREE.Mesh)if(f=a.index){e=e.offsets;1<e.length&&(c=!0);for(var q=
        0,r=e.length;q<r;q++){var s=e[q].index;if(c){for(l in b)n=b[l],k=a[l],0<=n&&(k?(p=k.itemSize,m.bindBuffer(m.ARRAY_BUFFER,k.buffer),g(n),m.vertexAttribPointer(n,p,m.FLOAT,!1,0,s*p*4)):d.defaultAttributeValues&&(2===d.defaultAttributeValues[l].length?m.vertexAttrib2fv(n,d.defaultAttributeValues[l]):3===d.defaultAttributeValues[l].length&&m.vertexAttrib3fv(n,d.defaultAttributeValues[l])));m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,f.buffer)}m.drawElements(m.TRIANGLES,e[q].count,m.UNSIGNED_SHORT,2*e[q].start);
        N.info.render.calls++;N.info.render.vertices+=e[q].count;N.info.render.faces+=e[q].count/3}}else{if(c)for(l in b)"index"!==l&&(n=b[l],k=a[l],0<=n&&(k?(p=k.itemSize,m.bindBuffer(m.ARRAY_BUFFER,k.buffer),g(n),m.vertexAttribPointer(n,p,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[l]&&(2===d.defaultAttributeValues[l].length?m.vertexAttrib2fv(n,d.defaultAttributeValues[l]):3===d.defaultAttributeValues[l].length&&m.vertexAttrib3fv(n,d.defaultAttributeValues[l]))));d=e.attributes.position;
        m.drawArrays(m.TRIANGLES,0,d.numItems/3);N.info.render.calls++;N.info.render.vertices+=d.numItems/3;N.info.render.faces+=d.numItems/3/3}else if(f instanceof THREE.ParticleSystem){if(c){for(l in b)n=b[l],k=a[l],0<=n&&(k?(p=k.itemSize,m.bindBuffer(m.ARRAY_BUFFER,k.buffer),g(n),m.vertexAttribPointer(n,p,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[l]&&(2===d.defaultAttributeValues[l].length?m.vertexAttrib2fv(n,d.defaultAttributeValues[l]):3===d.defaultAttributeValues[l].length&&
        m.vertexAttrib3fv(n,d.defaultAttributeValues[l])));d=a.position;m.drawArrays(m.POINTS,0,d.numItems/3);N.info.render.calls++;N.info.render.points+=d.numItems/3}}else if(f instanceof THREE.Line&&c){for(l in b)n=b[l],k=a[l],0<=n&&(k?(p=k.itemSize,m.bindBuffer(m.ARRAY_BUFFER,k.buffer),g(n),m.vertexAttribPointer(n,p,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[l]&&(2===d.defaultAttributeValues[l].length?m.vertexAttrib2fv(n,d.defaultAttributeValues[l]):3===d.defaultAttributeValues[l].length&&
        m.vertexAttrib3fv(n,d.defaultAttributeValues[l])));l=f.type===THREE.LineStrip?m.LINE_STRIP:m.LINES;B(d.linewidth);d=a.position;m.drawArrays(l,0,d.numItems/3);N.info.render.calls++;N.info.render.points+=d.numItems}}};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var k,n;c=y(a,b,c,d,f);a=c.attributes;b=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==ba&&(ba=c,b=!0);b&&h();if(!d.morphTargets&&0<=a.position)b&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),g(a.position),m.vertexAttribPointer(a.position,
        3,m.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),g(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0)):0<=c.position&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglVertexBuffer),g(c.position),m.vertexAttribPointer(c.position,3,m.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var p=0;n=f.morphTargetForcedOrder;for(k=f.morphTargetInfluences;p<d.numSupportedMorphTargets&&
        p<n.length;)0<=c["morphTarget"+p]&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[n[p]]),g(c["morphTarget"+p]),m.vertexAttribPointer(c["morphTarget"+p],3,m.FLOAT,!1,0,0)),0<=c["morphNormal"+p]&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[n[p]]),g(c["morphNormal"+p]),m.vertexAttribPointer(c["morphNormal"+p],3,m.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[p]=k[n[p]],p++}else{n=[];k=f.morphTargetInfluences;var q,r=k.length;for(q=0;q<r;q++)p=k[q],0<p&&n.push([p,
        q]);n.length>d.numSupportedMorphTargets?(n.sort(l),n.length=d.numSupportedMorphTargets):n.length>d.numSupportedMorphNormals?n.sort(l):0===n.length&&n.push([0,0]);for(p=0;p<d.numSupportedMorphTargets;)n[p]?(q=n[p][1],0<=c["morphTarget"+p]&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[q]),g(c["morphTarget"+p]),m.vertexAttribPointer(c["morphTarget"+p],3,m.FLOAT,!1,0,0)),0<=c["morphNormal"+p]&&d.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[q]),g(c["morphNormal"+
        p]),m.vertexAttribPointer(c["morphNormal"+p],3,m.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[p]=k[q]):f.__webglMorphTargetInfluences[p]=0,p++}null!==d.program.uniforms.morphTargetInfluences&&m.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(b){if(e.__webglCustomAttributesList)for(k=0,n=e.__webglCustomAttributesList.length;k<n;k++)c=e.__webglCustomAttributesList[k],0<=a[c.buffer.belongsToAttribute]&&(m.bindBuffer(m.ARRAY_BUFFER,c.buffer),g(a[c.buffer.belongsToAttribute]),
        m.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,m.FLOAT,!1,0,0));0<=a.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglColorBuffer),g(a.color),m.vertexAttribPointer(a.color,3,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib3fv(a.color,d.defaultAttributeValues.color));0<=a.normal&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglNormalBuffer),g(a.normal),m.vertexAttribPointer(a.normal,3,m.FLOAT,!1,0,0));0<=a.tangent&&(m.bindBuffer(m.ARRAY_BUFFER,
        e.__webglTangentBuffer),g(a.tangent),m.vertexAttribPointer(a.tangent,4,m.FLOAT,!1,0,0));0<=a.uv&&(f.geometry.faceVertexUvs[0]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUVBuffer),g(a.uv),m.vertexAttribPointer(a.uv,2,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib2fv(a.uv,d.defaultAttributeValues.uv));0<=a.uv2&&(f.geometry.faceVertexUvs[1]?(m.bindBuffer(m.ARRAY_BUFFER,e.__webglUV2Buffer),g(a.uv2),m.vertexAttribPointer(a.uv2,2,m.FLOAT,!1,0,0)):d.defaultAttributeValues&&m.vertexAttrib2fv(a.uv2,
        d.defaultAttributeValues.uv2));d.skinning&&0<=a.skinIndex&&0<=a.skinWeight&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),g(a.skinIndex),m.vertexAttribPointer(a.skinIndex,4,m.FLOAT,!1,0,0),m.bindBuffer(m.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),g(a.skinWeight),m.vertexAttribPointer(a.skinWeight,4,m.FLOAT,!1,0,0));0<=a.lineDistance&&(m.bindBuffer(m.ARRAY_BUFFER,e.__webglLineDistanceBuffer),g(a.lineDistance),m.vertexAttribPointer(a.lineDistance,1,m.FLOAT,!1,0,0))}f instanceof THREE.Mesh?
        (d.wireframe?(B(d.wireframeLinewidth),b&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),m.drawElements(m.LINES,e.__webglLineCount,m.UNSIGNED_SHORT,0)):(b&&m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),m.drawElements(m.TRIANGLES,e.__webglFaceCount,m.UNSIGNED_SHORT,0)),N.info.render.calls++,N.info.render.vertices+=e.__webglFaceCount,N.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?m.LINE_STRIP:m.LINES,B(d.linewidth),m.drawArrays(f,0,
        e.__webglLineCount),N.info.render.calls++):f instanceof THREE.ParticleSystem&&(m.drawArrays(m.POINTS,0,e.__webglParticleCount),N.info.render.calls++,N.info.render.points+=e.__webglParticleCount)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,l=a.__lights,q=a.fog;T=-1;Ea=!0;!0===a.autoUpdate&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);
        db.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);ya.setFromMatrix(db);this.autoUpdateObjects&&this.initWebGLObjects(a);p(this.renderPluginsPre,a,b);N.info.render.calls=0;N.info.render.vertices=0;N.info.render.faces=0;N.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.id=d,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof
            THREE.ParticleSystem)||!g.frustumCulled||ya.intersectsObject(g))){var r=g;r._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,r.matrixWorld);r._normalMatrix.getNormalMatrix(r._modelViewMatrix);var r=f,s=r.buffer,t=void 0,v=t=void 0,v=r.object.material;if(v instanceof THREE.MeshFaceMaterial)t=s.materialIndex,t=v.materials[t],t.transparent?(r.transparent=t,r.opaque=null):(r.opaque=t,r.transparent=null);else if(t=v)t.transparent?(r.transparent=t,r.opaque=null):(r.opaque=t,r.transparent=null);f.render=
            !0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(va.setFromMatrixPosition(g.matrixWorld),va.applyProjection(db),f.z=va.z))}this.sortObjects&&h.sort(k);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(g._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,g.matrixWorld),g._normalMatrix.getNormalMatrix(g._modelViewMatrix),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,
            this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),G(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),n(a.__webglObjects,!1,"",b,l,q,!0,d),u(a.__webglObjectsImmediate,"",b,l,q,!1,d)):(d=null,this.setBlending(THREE.NoBlending),n(a.__webglObjects,!0,"opaque",b,l,q,!1,d),u(a.__webglObjectsImmediate,"opaque",b,l,q,!1,d),n(a.__webglObjects,!1,"transparent",b,l,q,!0,d),u(a.__webglObjectsImmediate,"transparent",b,
            l,q,!0,d));p(this.renderPluginsPost,a,b);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(m.bindTexture(m.TEXTURE_CUBE_MAP,c.__webglTexture),m.generateMipmap(m.TEXTURE_CUBE_MAP),m.bindTexture(m.TEXTURE_CUBE_MAP,null)):(m.bindTexture(m.TEXTURE_2D,c.__webglTexture),m.generateMipmap(m.TEXTURE_2D),m.bindTexture(m.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,
c,d,e){var f=y(a,b,c,d,e);ba=-1;N.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,m,ya):e.render(function(a){N.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;)t(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)w(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,g=a.__webglObjects.length;b<
        g;b++){var h=a.__webglObjects[b].object;void 0===h.__webglInit&&(void 0!==h.__webglActive&&w(h,a),t(h,a));var k=h,n=k.geometry,p=void 0,q=void 0,s=void 0;if(n instanceof THREE.BufferGeometry){var u=m.DYNAMIC_DRAW,x=!n.dynamic,z=n.attributes,A=void 0,B=void 0;for(A in z)B=z[A],B.needsUpdate&&("index"===A?(m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,B.buffer),m.bufferData(m.ELEMENT_ARRAY_BUFFER,B.array,u)):(m.bindBuffer(m.ARRAY_BUFFER,B.buffer),m.bufferData(m.ARRAY_BUFFER,B.array,u)),B.needsUpdate=!1),x&&!B.dynamic&&
        (B.array=null)}else if(k instanceof THREE.Mesh){for(var C=0,D=n.geometryGroupsList.length;C<D;C++)if(p=n.geometryGroupsList[C],s=d(k,p),n.buffersNeedUpdate&&c(p,k),q=s.attributes&&r(s),n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||q){var y=p,M=k,H=m.DYNAMIC_DRAW,F=!n.dynamic,G=s;if(y.__inittedArrays){var I=e(G),J=G.vertexColors?G.vertexColors:!1,L=f(G),N=I===THREE.SmoothShading,E=void 0,U=void 0,
        R=void 0,Q=void 0,ga=void 0,V=void 0,da=void 0,ba=void 0,aa=void 0,Y=void 0,Z=void 0,P=void 0,T=void 0,S=void 0,ta=void 0,ca=void 0,ea=void 0,ia=void 0,pa=void 0,ja=void 0,na=void 0,qa=void 0,la=void 0,ma=void 0,wa=void 0,xa=void 0,ya=void 0,za=void 0,Da=void 0,Ca=void 0,Ma=void 0,Ia=void 0,Ea=void 0,Ja=void 0,Ra=void 0,Ua=void 0,hb=void 0,ib=void 0,Oa=void 0,Pa=void 0,eb=0,fb=0,Na=0,Qa=0,Ta=0,jb=0,Sa=0,vb=0,Za=0,ua=0,Aa=0,O=0,La=void 0,kb=y.__vertexArray,bb=y.__uvArray,cb=y.__uv2Array,Ka=y.__normalArray,
        Va=y.__tangentArray,lb=y.__colorArray,Wa=y.__skinIndexArray,Xa=y.__skinWeightArray,gb=y.__morphTargetsArrays,ub=y.__morphNormalsArrays,rb=y.__webglCustomAttributesList,K=void 0,Tb=y.__faceArray,xb=y.__lineArray,Fa=M.geometry,Eb=Fa.elementsNeedUpdate,Ab=Fa.uvsNeedUpdate,Gb=Fa.normalsNeedUpdate,Pb=Fa.tangentsNeedUpdate,Qb=Fa.colorsNeedUpdate,Rb=Fa.morphTargetsNeedUpdate,jc=Fa.vertices,ha=y.faces3,mb=Fa.faces,Fb=Fa.faceVertexUvs[0],Hb=Fa.faceVertexUvs[1],kc=Fa.skinIndices,Ub=Fa.skinWeights,Vb=Fa.morphTargets,
        Ib=Fa.morphNormals;if(Fa.verticesNeedUpdate){E=0;for(U=ha.length;E<U;E++)Q=mb[ha[E]],P=jc[Q.a],T=jc[Q.b],S=jc[Q.c],kb[fb]=P.x,kb[fb+1]=P.y,kb[fb+2]=P.z,kb[fb+3]=T.x,kb[fb+4]=T.y,kb[fb+5]=T.z,kb[fb+6]=S.x,kb[fb+7]=S.y,kb[fb+8]=S.z,fb+=9;m.bindBuffer(m.ARRAY_BUFFER,y.__webglVertexBuffer);m.bufferData(m.ARRAY_BUFFER,kb,H)}if(Rb)for(Ra=0,Ua=Vb.length;Ra<Ua;Ra++){E=Aa=0;for(U=ha.length;E<U;E++)Oa=ha[E],Q=mb[Oa],P=Vb[Ra].vertices[Q.a],T=Vb[Ra].vertices[Q.b],S=Vb[Ra].vertices[Q.c],hb=gb[Ra],hb[Aa]=P.x,hb[Aa+
        1]=P.y,hb[Aa+2]=P.z,hb[Aa+3]=T.x,hb[Aa+4]=T.y,hb[Aa+5]=T.z,hb[Aa+6]=S.x,hb[Aa+7]=S.y,hb[Aa+8]=S.z,G.morphNormals&&(N?(Pa=Ib[Ra].vertexNormals[Oa],ia=Pa.a,pa=Pa.b,ja=Pa.c):ja=pa=ia=Ib[Ra].faceNormals[Oa],ib=ub[Ra],ib[Aa]=ia.x,ib[Aa+1]=ia.y,ib[Aa+2]=ia.z,ib[Aa+3]=pa.x,ib[Aa+4]=pa.y,ib[Aa+5]=pa.z,ib[Aa+6]=ja.x,ib[Aa+7]=ja.y,ib[Aa+8]=ja.z),Aa+=9;m.bindBuffer(m.ARRAY_BUFFER,y.__webglMorphTargetsBuffers[Ra]);m.bufferData(m.ARRAY_BUFFER,gb[Ra],H);G.morphNormals&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglMorphNormalsBuffers[Ra]),
        m.bufferData(m.ARRAY_BUFFER,ub[Ra],H))}if(Ub.length){E=0;for(U=ha.length;E<U;E++)Q=mb[ha[E]],ma=Ub[Q.a],wa=Ub[Q.b],xa=Ub[Q.c],Xa[ua]=ma.x,Xa[ua+1]=ma.y,Xa[ua+2]=ma.z,Xa[ua+3]=ma.w,Xa[ua+4]=wa.x,Xa[ua+5]=wa.y,Xa[ua+6]=wa.z,Xa[ua+7]=wa.w,Xa[ua+8]=xa.x,Xa[ua+9]=xa.y,Xa[ua+10]=xa.z,Xa[ua+11]=xa.w,ya=kc[Q.a],za=kc[Q.b],Da=kc[Q.c],Wa[ua]=ya.x,Wa[ua+1]=ya.y,Wa[ua+2]=ya.z,Wa[ua+3]=ya.w,Wa[ua+4]=za.x,Wa[ua+5]=za.y,Wa[ua+6]=za.z,Wa[ua+7]=za.w,Wa[ua+8]=Da.x,Wa[ua+9]=Da.y,Wa[ua+10]=Da.z,Wa[ua+11]=Da.w,ua+=12;
        0<ua&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglSkinIndicesBuffer),m.bufferData(m.ARRAY_BUFFER,Wa,H),m.bindBuffer(m.ARRAY_BUFFER,y.__webglSkinWeightsBuffer),m.bufferData(m.ARRAY_BUFFER,Xa,H))}if(Qb&&J){E=0;for(U=ha.length;E<U;E++)Q=mb[ha[E]],da=Q.vertexColors,ba=Q.color,3===da.length&&J===THREE.VertexColors?(na=da[0],qa=da[1],la=da[2]):la=qa=na=ba,lb[Za]=na.r,lb[Za+1]=na.g,lb[Za+2]=na.b,lb[Za+3]=qa.r,lb[Za+4]=qa.g,lb[Za+5]=qa.b,lb[Za+6]=la.r,lb[Za+7]=la.g,lb[Za+8]=la.b,Za+=9;0<Za&&(m.bindBuffer(m.ARRAY_BUFFER,
        y.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,lb,H))}if(Pb&&Fa.hasTangents){E=0;for(U=ha.length;E<U;E++)Q=mb[ha[E]],aa=Q.vertexTangents,ta=aa[0],ca=aa[1],ea=aa[2],Va[Sa]=ta.x,Va[Sa+1]=ta.y,Va[Sa+2]=ta.z,Va[Sa+3]=ta.w,Va[Sa+4]=ca.x,Va[Sa+5]=ca.y,Va[Sa+6]=ca.z,Va[Sa+7]=ca.w,Va[Sa+8]=ea.x,Va[Sa+9]=ea.y,Va[Sa+10]=ea.z,Va[Sa+11]=ea.w,Sa+=12;m.bindBuffer(m.ARRAY_BUFFER,y.__webglTangentBuffer);m.bufferData(m.ARRAY_BUFFER,Va,H)}if(Gb&&I){E=0;for(U=ha.length;E<U;E++)if(Q=mb[ha[E]],ga=Q.vertexNormals,V=
        Q.normal,3===ga.length&&N)for(Ca=0;3>Ca;Ca++)Ia=ga[Ca],Ka[jb]=Ia.x,Ka[jb+1]=Ia.y,Ka[jb+2]=Ia.z,jb+=3;else for(Ca=0;3>Ca;Ca++)Ka[jb]=V.x,Ka[jb+1]=V.y,Ka[jb+2]=V.z,jb+=3;m.bindBuffer(m.ARRAY_BUFFER,y.__webglNormalBuffer);m.bufferData(m.ARRAY_BUFFER,Ka,H)}if(Ab&&Fb&&L){E=0;for(U=ha.length;E<U;E++)if(R=ha[E],Y=Fb[R],void 0!==Y)for(Ca=0;3>Ca;Ca++)Ea=Y[Ca],bb[Na]=Ea.x,bb[Na+1]=Ea.y,Na+=2;0<Na&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglUVBuffer),m.bufferData(m.ARRAY_BUFFER,bb,H))}if(Ab&&Hb&&L){E=0;for(U=ha.length;E<
        U;E++)if(R=ha[E],Z=Hb[R],void 0!==Z)for(Ca=0;3>Ca;Ca++)Ja=Z[Ca],cb[Qa]=Ja.x,cb[Qa+1]=Ja.y,Qa+=2;0<Qa&&(m.bindBuffer(m.ARRAY_BUFFER,y.__webglUV2Buffer),m.bufferData(m.ARRAY_BUFFER,cb,H))}if(Eb){E=0;for(U=ha.length;E<U;E++)Tb[Ta]=eb,Tb[Ta+1]=eb+1,Tb[Ta+2]=eb+2,Ta+=3,xb[vb]=eb,xb[vb+1]=eb+1,xb[vb+2]=eb,xb[vb+3]=eb+2,xb[vb+4]=eb+1,xb[vb+5]=eb+2,vb+=6,eb+=3;m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,y.__webglFaceBuffer);m.bufferData(m.ELEMENT_ARRAY_BUFFER,Tb,H);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,y.__webglLineBuffer);
        m.bufferData(m.ELEMENT_ARRAY_BUFFER,xb,H)}if(rb)for(Ca=0,Ma=rb.length;Ca<Ma;Ca++)if(K=rb[Ca],K.__original.needsUpdate){O=0;if(1===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(E=0,U=ha.length;E<U;E++)Q=mb[ha[E]],K.array[O]=K.value[Q.a],K.array[O+1]=K.value[Q.b],K.array[O+2]=K.value[Q.c],O+=3;else{if("faces"===K.boundTo)for(E=0,U=ha.length;E<U;E++)La=K.value[ha[E]],K.array[O]=La,K.array[O+1]=La,K.array[O+2]=La,O+=3}else if(2===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(E=0,
ha.length;E<U;E++)Q=mb[ha[E]],P=K.value[Q.a],T=K.value[Q.b],S=K.value[Q.c],K.array[O]=P.x,K.array[O+1]=P.y,K.array[O+2]=T.x,K.array[O+3]=T.y,K.array[O+4]=S.x,K.array[O+5]=S.y,O+=6;else{if("faces"===K.boundTo)for(E=0,U=ha.length;E<U;E++)S=T=P=La=K.value[ha[E]],K.array[O]=P.x,K.array[O+1]=P.y,K.array[O+2]=T.x,K.array[O+3]=T.y,K.array[O+4]=S.x,K.array[O+5]=S.y,O+=6}else if(3===K.size){var sa;sa="c"===K.type?["r","g","b"]:["x","y","z"];if(void 0===K.boundTo||"vertices"===K.boundTo)for(E=0,U=ha.length;E<
        U;E++)Q=mb[ha[E]],P=K.value[Q.a],T=K.value[Q.b],S=K.value[Q.c],K.array[O]=P[sa[0]],K.array[O+1]=P[sa[1]],K.array[O+2]=P[sa[2]],K.array[O+3]=T[sa[0]],K.array[O+4]=T[sa[1]],K.array[O+5]=T[sa[2]],K.array[O+6]=S[sa[0]],K.array[O+7]=S[sa[1]],K.array[O+8]=S[sa[2]],O+=9;else if("faces"===K.boundTo)for(E=0,U=ha.length;E<U;E++)S=T=P=La=K.value[ha[E]],K.array[O]=P[sa[0]],K.array[O+1]=P[sa[1]],K.array[O+2]=P[sa[2]],K.array[O+3]=T[sa[0]],K.array[O+4]=T[sa[1]],K.array[O+5]=T[sa[2]],K.array[O+6]=S[sa[0]],K.array[O+
        7]=S[sa[1]],K.array[O+8]=S[sa[2]],O+=9;else if("faceVertices"===K.boundTo)for(E=0,U=ha.length;E<U;E++)La=K.value[ha[E]],P=La[0],T=La[1],S=La[2],K.array[O]=P[sa[0]],K.array[O+1]=P[sa[1]],K.array[O+2]=P[sa[2]],K.array[O+3]=T[sa[0]],K.array[O+4]=T[sa[1]],K.array[O+5]=T[sa[2]],K.array[O+6]=S[sa[0]],K.array[O+7]=S[sa[1]],K.array[O+8]=S[sa[2]],O+=9}else if(4===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(E=0,U=ha.length;E<U;E++)Q=mb[ha[E]],P=K.value[Q.a],T=K.value[Q.b],S=K.value[Q.c],K.array[O]=
        P.x,K.array[O+1]=P.y,K.array[O+2]=P.z,K.array[O+3]=P.w,K.array[O+4]=T.x,K.array[O+5]=T.y,K.array[O+6]=T.z,K.array[O+7]=T.w,K.array[O+8]=S.x,K.array[O+9]=S.y,K.array[O+10]=S.z,K.array[O+11]=S.w,O+=12;else if("faces"===K.boundTo)for(E=0,U=ha.length;E<U;E++)S=T=P=La=K.value[ha[E]],K.array[O]=P.x,K.array[O+1]=P.y,K.array[O+2]=P.z,K.array[O+3]=P.w,K.array[O+4]=T.x,K.array[O+5]=T.y,K.array[O+6]=T.z,K.array[O+7]=T.w,K.array[O+8]=S.x,K.array[O+9]=S.y,K.array[O+10]=S.z,K.array[O+11]=S.w,O+=12;else if("faceVertices"===
        K.boundTo)for(E=0,U=ha.length;E<U;E++)La=K.value[ha[E]],P=La[0],T=La[1],S=La[2],K.array[O]=P.x,K.array[O+1]=P.y,K.array[O+2]=P.z,K.array[O+3]=P.w,K.array[O+4]=T.x,K.array[O+5]=T.y,K.array[O+6]=T.z,K.array[O+7]=T.w,K.array[O+8]=S.x,K.array[O+9]=S.y,K.array[O+10]=S.z,K.array[O+11]=S.w,O+=12;m.bindBuffer(m.ARRAY_BUFFER,K.buffer);m.bufferData(m.ARRAY_BUFFER,K.array,H)}F&&(delete y.__inittedArrays,delete y.__colorArray,delete y.__normalArray,delete y.__tangentArray,delete y.__uvArray,delete y.__uv2Array,
        delete y.__faceArray,delete y.__vertexArray,delete y.__lineArray,delete y.__skinIndexArray,delete y.__skinWeightArray)}}n.verticesNeedUpdate=!1;n.morphTargetsNeedUpdate=!1;n.elementsNeedUpdate=!1;n.uvsNeedUpdate=!1;n.normalsNeedUpdate=!1;n.colorsNeedUpdate=!1;n.tangentsNeedUpdate=!1;n.buffersNeedUpdate=!1;s.attributes&&v(s)}else if(k instanceof THREE.Line){s=d(k,n);q=s.attributes&&r(s);if(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||q){var Ya=n,Wb=m.DYNAMIC_DRAW,Lb=void 0,
        Mb=void 0,Nb=void 0,Xb=void 0,ra=void 0,Yb=void 0,Jb=Ya.vertices,Kb=Ya.colors,pc=Ya.lineDistances,cc=Jb.length,dc=Kb.length,ec=pc.length,Zb=Ya.__vertexArray,$b=Ya.__colorArray,qc=Ya.__lineDistanceArray,fc=Ya.colorsNeedUpdate,gc=Ya.lineDistancesNeedUpdate,lc=Ya.__webglCustomAttributesList,ac=void 0,rc=void 0,Ba=void 0,Cb=void 0,Ga=void 0,oa=void 0;if(Ya.verticesNeedUpdate){for(Lb=0;Lb<cc;Lb++)Xb=Jb[Lb],ra=3*Lb,Zb[ra]=Xb.x,Zb[ra+1]=Xb.y,Zb[ra+2]=Xb.z;m.bindBuffer(m.ARRAY_BUFFER,Ya.__webglVertexBuffer);
        m.bufferData(m.ARRAY_BUFFER,Zb,Wb)}if(fc){for(Mb=0;Mb<dc;Mb++)Yb=Kb[Mb],ra=3*Mb,$b[ra]=Yb.r,$b[ra+1]=Yb.g,$b[ra+2]=Yb.b;m.bindBuffer(m.ARRAY_BUFFER,Ya.__webglColorBuffer);m.bufferData(m.ARRAY_BUFFER,$b,Wb)}if(gc){for(Nb=0;Nb<ec;Nb++)qc[Nb]=pc[Nb];m.bindBuffer(m.ARRAY_BUFFER,Ya.__webglLineDistanceBuffer);m.bufferData(m.ARRAY_BUFFER,qc,Wb)}if(lc)for(ac=0,rc=lc.length;ac<rc;ac++)if(oa=lc[ac],oa.needsUpdate&&(void 0===oa.boundTo||"vertices"===oa.boundTo)){ra=0;Cb=oa.value.length;if(1===oa.size)for(Ba=
a<Cb;Ba++)oa.array[Ba]=oa.value[Ba];else if(2===oa.size)for(Ba=0;Ba<Cb;Ba++)Ga=oa.value[Ba],oa.array[ra]=Ga.x,oa.array[ra+1]=Ga.y,ra+=2;else if(3===oa.size)if("c"===oa.type)for(Ba=0;Ba<Cb;Ba++)Ga=oa.value[Ba],oa.array[ra]=Ga.r,oa.array[ra+1]=Ga.g,oa.array[ra+2]=Ga.b,ra+=3;else for(Ba=0;Ba<Cb;Ba++)Ga=oa.value[Ba],oa.array[ra]=Ga.x,oa.array[ra+1]=Ga.y,oa.array[ra+2]=Ga.z,ra+=3;else if(4===oa.size)for(Ba=0;Ba<Cb;Ba++)Ga=oa.value[Ba],oa.array[ra]=Ga.x,oa.array[ra+1]=Ga.y,oa.array[ra+2]=Ga.z,oa.array[ra+
        3]=Ga.w,ra+=4;m.bindBuffer(m.ARRAY_BUFFER,oa.buffer);m.bufferData(m.ARRAY_BUFFER,oa.array,Wb)}}n.verticesNeedUpdate=!1;n.colorsNeedUpdate=!1;n.lineDistancesNeedUpdate=!1;s.attributes&&v(s)}else if(k instanceof THREE.ParticleSystem){s=d(k,n);q=s.attributes&&r(s);if(n.verticesNeedUpdate||n.colorsNeedUpdate||k.sortParticles||q){var nb=n,mc=m.DYNAMIC_DRAW,Ob=k,Ha=void 0,ob=void 0,pb=void 0,X=void 0,qb=void 0,wb=void 0,bc=nb.vertices,nc=bc.length,oc=nb.colors,sc=oc.length,yb=nb.__vertexArray,zb=nb.__colorArray,
        sb=nb.__sortArray,tc=nb.verticesNeedUpdate,uc=nb.colorsNeedUpdate,tb=nb.__webglCustomAttributesList,$a=void 0,Db=void 0,fa=void 0,ab=void 0,ka=void 0,W=void 0;if(Ob.sortParticles){Bb.copy(db);Bb.multiply(Ob.matrixWorld);for(Ha=0;Ha<nc;Ha++)pb=bc[Ha],va.copy(pb),va.applyProjection(Bb),sb[Ha]=[va.z,Ha];sb.sort(l);for(Ha=0;Ha<nc;Ha++)pb=bc[sb[Ha][1]],X=3*Ha,yb[X]=pb.x,yb[X+1]=pb.y,yb[X+2]=pb.z;for(ob=0;ob<sc;ob++)X=3*ob,wb=oc[sb[ob][1]],zb[X]=wb.r,zb[X+1]=wb.g,zb[X+2]=wb.b;if(tb)for($a=0,Db=tb.length;$a<
        Db;$a++)if(W=tb[$a],void 0===W.boundTo||"vertices"===W.boundTo)if(X=0,ab=W.value.length,1===W.size)for(fa=0;fa<ab;fa++)qb=sb[fa][1],W.array[fa]=W.value[qb];else if(2===W.size)for(fa=0;fa<ab;fa++)qb=sb[fa][1],ka=W.value[qb],W.array[X]=ka.x,W.array[X+1]=ka.y,X+=2;else if(3===W.size)if("c"===W.type)for(fa=0;fa<ab;fa++)qb=sb[fa][1],ka=W.value[qb],W.array[X]=ka.r,W.array[X+1]=ka.g,W.array[X+2]=ka.b,X+=3;else for(fa=0;fa<ab;fa++)qb=sb[fa][1],ka=W.value[qb],W.array[X]=ka.x,W.array[X+1]=ka.y,W.array[X+2]=
        ka.z,X+=3;else if(4===W.size)for(fa=0;fa<ab;fa++)qb=sb[fa][1],ka=W.value[qb],W.array[X]=ka.x,W.array[X+1]=ka.y,W.array[X+2]=ka.z,W.array[X+3]=ka.w,X+=4}else{if(tc)for(Ha=0;Ha<nc;Ha++)pb=bc[Ha],X=3*Ha,yb[X]=pb.x,yb[X+1]=pb.y,yb[X+2]=pb.z;if(uc)for(ob=0;ob<sc;ob++)wb=oc[ob],X=3*ob,zb[X]=wb.r,zb[X+1]=wb.g,zb[X+2]=wb.b;if(tb)for($a=0,Db=tb.length;$a<Db;$a++)if(W=tb[$a],W.needsUpdate&&(void 0===W.boundTo||"vertices"===W.boundTo))if(ab=W.value.length,X=0,1===W.size)for(fa=0;fa<ab;fa++)W.array[fa]=W.value[fa];
    else if(2===W.size)for(fa=0;fa<ab;fa++)ka=W.value[fa],W.array[X]=ka.x,W.array[X+1]=ka.y,X+=2;else if(3===W.size)if("c"===W.type)for(fa=0;fa<ab;fa++)ka=W.value[fa],W.array[X]=ka.r,W.array[X+1]=ka.g,W.array[X+2]=ka.b,X+=3;else for(fa=0;fa<ab;fa++)ka=W.value[fa],W.array[X]=ka.x,W.array[X+1]=ka.y,W.array[X+2]=ka.z,X+=3;else if(4===W.size)for(fa=0;fa<ab;fa++)ka=W.value[fa],W.array[X]=ka.x,W.array[X+1]=ka.y,W.array[X+2]=ka.z,W.array[X+3]=ka.w,X+=4}if(tc||Ob.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,nb.__webglVertexBuffer),
        m.bufferData(m.ARRAY_BUFFER,yb,mc);if(uc||Ob.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,nb.__webglColorBuffer),m.bufferData(m.ARRAY_BUFFER,zb,mc);if(tb)for($a=0,Db=tb.length;$a<Db;$a++)if(W=tb[$a],W.needsUpdate||Ob.sortParticles)m.bindBuffer(m.ARRAY_BUFFER,W.buffer),m.bufferData(m.ARRAY_BUFFER,W.array,mc)}n.verticesNeedUpdate=!1;n.colorsNeedUpdate=!1;s.attributes&&v(s)}}};this.initMaterial=function(a,b,c,d){var e,f,g,h;a.addEventListener("dispose",Ib);var k,l,n,p,q;a instanceof THREE.MeshDepthMaterial?
        q="depth":a instanceof THREE.MeshNormalMaterial?q="normal":a instanceof THREE.MeshBasicMaterial?q="basic":a instanceof THREE.MeshLambertMaterial?q="lambert":a instanceof THREE.MeshPhongMaterial?q="phong":a instanceof THREE.LineBasicMaterial?q="basic":a instanceof THREE.LineDashedMaterial?q="dashed":a instanceof THREE.ParticleSystemMaterial&&(q="particle_basic");if(q){var r=THREE.ShaderLib[q];a.uniforms=THREE.UniformsUtils.clone(r.uniforms);a.vertexShader=r.vertexShader;a.fragmentShader=r.fragmentShader}var s=
        e=0,t=0,u=r=0;for(f=b.length;u<f;u++)g=b[u],g.onlyShadow||(g instanceof THREE.DirectionalLight&&e++,g instanceof THREE.PointLight&&s++,g instanceof THREE.SpotLight&&t++,g instanceof THREE.HemisphereLight&&r++);f=s;g=t;h=r;t=r=0;for(s=b.length;t<s;t++)u=b[t],u.castShadow&&(u instanceof THREE.SpotLight&&r++,u instanceof THREE.DirectionalLight&&!u.shadowCascade&&r++);p=r;Ab&&d&&d.useVertexTexture?n=1024:(b=m.getParameter(m.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&
        (b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),n=b);a:{t=a.fragmentShader;s=a.vertexShader;r=a.uniforms;b=a.attributes;u=a.defines;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
        skinning:a.skinning,maxBones:n,useVertexTexture:Ab&&d&&d.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,
        doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};d=a.index0AttributeName;var v,w,x;e=[];q?e.push(q):(e.push(t),e.push(s));for(w in u)e.push(w),e.push(u[w]);for(v in c)e.push(v),e.push(c[v]);q=e.join();v=0;for(w=ja.length;v<w;v++)if(e=ja[v],e.code===q){e.usedTimes++;l=e.program;break a}v="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?v="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&(v="SHADOWMAP_TYPE_PCF_SOFT");w=[];for(x in u)e=u[x],!1!==e&&(e=
        "#define "+x+" "+e,w.push(e));e=w.join("\n");x=m.createProgram();w=["precision "+R+" float;","precision "+R+" int;",e,Eb?"#define VERTEX_TEXTURES":"",N.gammaInput?"#define GAMMA_INPUT":"",N.gammaOutput?"#define GAMMA_OUTPUT":"",N.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+
        c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":
        "",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+v:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
        v=["precision "+R+" float;","precision "+R+" int;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",e,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",N.gammaInput?"#define GAMMA_INPUT":"",N.gammaOutput?"#define GAMMA_OUTPUT":"",N.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":
            "",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
            "",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+v:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");w=z("vertex",w+s);v=z("fragment",v+t);m.attachShader(x,w);m.attachShader(x,v);d&&m.bindAttribLocation(x,0,d);m.linkProgram(x);m.getProgramParameter(x,m.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+m.getProgramParameter(x,
            m.VALIDATE_STATUS)+", gl error ["+m.getError()+"]"),console.error("Program Info Log: "+m.getProgramInfoLog(x)));m.deleteShader(v);m.deleteShader(w);x.uniforms={};x.attributes={};var y;v="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?(v.push("boneTexture"),v.push("boneTextureWidth"),v.push("boneTextureHeight")):v.push("boneGlobalMatrices");for(y in r)v.push(y);y=v;v=0;for(w=y.length;v<w;v++)r=y[v],x.uniforms[r]=
            m.getUniformLocation(x,r);v="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(y=0;y<c.maxMorphTargets;y++)v.push("morphTarget"+y);for(y=0;y<c.maxMorphNormals;y++)v.push("morphNormal"+y);for(l in b)v.push(l);l=v;y=0;for(b=l.length;y<b;y++)v=l[y],x.attributes[v]=m.getAttribLocation(x,v);x.id=U++;ja.push({program:x,code:q,usedTimes:1});N.info.memory.programs=ja.length;l=x}a.program=l;y=a.program.attributes;if(a.morphTargets)for(a.numSupportedMorphTargets=0,b="morphTarget",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   l=0;l<this.maxMorphTargets;l++)x=b+l,0<=y[x]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(a.numSupportedMorphNormals=0,b="morphNormal",l=0;l<this.maxMorphNormals;l++)x=b+l,0<=y[x]&&a.numSupportedMorphNormals++;a.uniformsList=[];for(k in a.uniforms)a.uniformsList.push([a.uniforms[k],k])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?m.disable(m.CULL_FACE):(b===THREE.FrontFaceDirectionCW?m.frontFace(m.CW):m.frontFace(m.CCW),a===THREE.CullFaceBack?m.cullFace(m.BACK):a===THREE.CullFaceFront?
        m.cullFace(m.FRONT):m.cullFace(m.FRONT_AND_BACK),m.enable(m.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;Q!==b&&(b?m.disable(m.CULL_FACE):m.enable(m.CULL_FACE),Q=b);pa!==a&&(a?m.frontFace(m.CW):m.frontFace(m.CCW),pa=a)};this.setDepthTest=function(a){qa!==a&&(a?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),qa=a)};this.setDepthWrite=function(a){wa!==a&&(m.depthMask(a),wa=a)};this.setBlending=function(a,b,c,d){a!==Da&&(a===THREE.NoBlending?
        m.disable(m.BLEND):a===THREE.AdditiveBlending?(m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.SRC_ALPHA,m.ONE)):a===THREE.SubtractiveBlending?(m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.ZERO,m.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(m.enable(m.BLEND),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.ZERO,m.SRC_COLOR)):a===THREE.CustomBlending?m.enable(m.BLEND):(m.enable(m.BLEND),m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,
        m.ONE,m.ONE_MINUS_SRC_ALPHA)),Da=a);if(a===THREE.CustomBlending){if(b!==na&&(m.blendEquation(J(b)),na=b),c!==Ma||d!==Ia)m.blendFunc(J(c),J(d)),Ma=c,Ia=d}else Ia=Ma=na=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Gb),a.__webglTexture=m.createTexture(),N.info.memory.textures++);m.activeTexture(m.TEXTURE0+b);m.bindTexture(m.TEXTURE_2D,a.__webglTexture);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,a.flipY);m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
        a.premultiplyAlpha);m.pixelStorei(m.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=V(c.width)&&V(c.height),e=J(a.format),f=J(a.type);F(m.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,k=g.length;h<k;h++)c=g[h],m.texImage2D(m.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture)for(h=0,k=g.length;h<k;h++)c=g[h],a.format!==
        THREE.RGBAFormat?m.compressedTexImage2D(m.TEXTURE_2D,h,e,c.width,c.height,0,c.data):m.texImage2D(m.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);else if(0<g.length&&d){h=0;for(k=g.length;h<k;h++)c=g[h],m.texImage2D(m.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else m.texImage2D(m.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&m.generateMipmap(m.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else m.activeTexture(m.TEXTURE0+b),m.bindTexture(m.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=
        function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",Hb);a.__webglTexture=m.createTexture();N.info.memory.textures++;var c=V(a.width)&&V(a.height),d=J(a.format),e=J(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];m.bindTexture(m.TEXTURE_CUBE_MAP,a.__webglTexture);F(m.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=
            m.createFramebuffer();a.__webglRenderbuffer[f]=m.createRenderbuffer();m.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=m.TEXTURE_CUBE_MAP_POSITIVE_X+f;m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer[f]);m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,h,g.__webglTexture,0);E(a.__webglRenderbuffer[f],a)}c&&m.generateMipmap(m.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=m.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:
            m.createRenderbuffer(),m.bindTexture(m.TEXTURE_2D,a.__webglTexture),F(m.TEXTURE_2D,a,c),m.texImage2D(m.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=m.TEXTURE_2D,m.bindFramebuffer(m.FRAMEBUFFER,a.__webglFramebuffer),m.framebufferTexture2D(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&m.framebufferRenderbuffer(m.FRAMEBUFFER,
            m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,a.__webglRenderbuffer):E(a.__webglRenderbuffer,a),c&&m.generateMipmap(m.TEXTURE_2D);b?m.bindTexture(m.TEXTURE_CUBE_MAP,null):m.bindTexture(m.TEXTURE_2D,null);m.bindRenderbuffer(m.RENDERBUFFER,null);m.bindFramebuffer(m.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ka,a=gb,d=bb,e=cb);b!==ga&&(m.bindFramebuffer(m.FRAMEBUFFER,b),m.viewport(d,e,c,a),ga=b);rb=c;Qa=a};this.shadowMapPlugin=
        new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
    THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;
    return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};
THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=
    0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};
THREE.GeometryUtils={merge:function(a,b,c){var d,e,f=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,h=a.vertices,k=g.vertices,l=a.faces,p=g.faces;a=a.faceVertexUvs[0];g=g.faceVertexUvs[0];void 0===c&&(c=0);b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,e=(new THREE.Matrix3).getNormalMatrix(d));b=0;for(var n=k.length;b<n;b++){var u=k[b].clone();d&&u.applyMatrix4(d);h.push(u)}b=0;for(n=p.length;b<n;b++){var u=p[b],t,s,r=u.vertexNormals,v=u.vertexColors;t=new THREE.Face3(u.a+
    f,u.b+f,u.c+f);t.normal.copy(u.normal);e&&t.normal.applyMatrix3(e).normalize();h=0;for(k=r.length;h<k;h++)s=r[h].clone(),e&&s.applyMatrix3(e).normalize(),t.vertexNormals.push(s);t.color.copy(u.color);h=0;for(k=v.length;h<k;h++)s=v[h],t.vertexColors.push(s.clone());t.materialIndex=u.materialIndex+c;t.centroid.copy(u.centroid);d&&t.centroid.applyMatrix4(d);l.push(t)}b=0;for(n=g.length;b<n;b++){c=g[b];d=[];h=0;for(k=c.length;h<k;h++)d.push(new THREE.Vector2(c[h].x,c[h].y));a.push(d)}},randomPointInTriangle:function(){var a=
    new THREE.Vector3;return function(b,c,d){var e=new THREE.Vector3,f=THREE.Math.random16(),g=THREE.Math.random16();1<f+g&&(f=1-f,g=1-g);var h=1-f-g;e.copy(b);e.multiplyScalar(f);a.copy(c);a.multiplyScalar(g);e.add(a);a.copy(d);a.multiplyScalar(h);e.add(a);return e}}(),randomPointInFace:function(a,b,c){return THREE.GeometryUtils.randomPointInTriangle(b.vertices[a.a],b.vertices[a.b],b.vertices[a.c])},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-
    c)/2);return l[e]>a?b(c,e-1):l[e]<a?b(e+1,d):e}return b(0,l.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,k=0,l=[],p,n,u;for(e=0;e<h;e++)d=f[e],p=g[d.a],n=g[d.b],u=g[d.c],d._area=THREE.GeometryUtils.triangleArea(p,n,u),k+=d._area,l[e]=k;d=[];for(e=0;e<b;e++)g=THREE.Math.random16()*k,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){a.subVectors(d,c);b.subVectors(e,c);a.cross(b);return.5*
    a.length()}}(),center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.addVectors(b.min,b.max);c.multiplyScalar(-.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},triangulateQuads:function(a){var b,c,d,e,f=[],g=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faces.length;b<c;b++)for(f.push(a.faces[b]),d=0,e=a.faceVertexUvs.length;d<e;d++)g[d].push(a.faceVertexUvs[d][b]);a.faces=f;a.faceVertexUvs=g;a.computeCentroids();
    a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()}};
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){d=new THREE.ImageLoader;d.crossOrigin=this.crossOrigin;var e=new THREE.Texture(void 0,b);b=d.load(a,function(){e.needsUpdate=!0;c&&c(e)});e.image=b;e.sourceFile=a;return e},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;
    e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))};h.onerror=d;h.crossOrigin=this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=
    [];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var g=0,h=a.length;g<h;++g){var k={};e[g]=k;var l=new XMLHttpRequest;l.onload=b(l,k);l.onerror=d;k=a[g];l.open("GET",k,!0);l.responseType=
    "arraybuffer";l.send(null)}else l=new XMLHttpRequest,l.onload=function(){var a=THREE.ImageUtils.parseDDS(l.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}f.format=a.format;f.needsUpdate=!0;c&&c(f)}},l.onerror=d,l.open("GET",a,!0),l.responseType="arraybuffer",l.send(null);return f},loadDDSTexture:function(a,
b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;var g=new XMLHttpRequest;g.onload=function(){var a=THREE.ImageUtils.parseDDS(g.response,!0);if(a.isCubemap)for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var p=0;p<a.mipmapCount;p++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+p]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}else f.image.width=a.width,f.image.height=a.height,
    f.mipmaps=a.mipmaps;f.format=a.format;f.needsUpdate=!0;c&&c(f)};g.onerror=d;g.open("GET",a,!0);g.responseType="arraybuffer";g.send(null);return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function d(a,b,c,d){var e=c*d*4;a=new Uint8Array(a,b,e);for(var e=new Uint8Array(e),f=b=0,g=0;g<d;g++)for(var h=0;h<c;h++){var k=a[f];f++;var l=a[f];f++;var n=a[f];f++;var p=a[f];f++;e[b]=n;b++;e[b]=l;b++;e[b]=k;b++;e[b]=p;b++}return e}
    var e={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),g=c("DXT3"),h=c("DXT5"),k=new Int32Array(a,0,31);if(542327876!==k[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),e;if(!k[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),e;var l=k[21],p=!1;switch(l){case f:f=8;e.format=THREE.RGB_S3TC_DXT1_Format;break;case g:f=16;e.format=THREE.RGBA_S3TC_DXT3_Format;break;case h:f=16;e.format=THREE.RGBA_S3TC_DXT5_Format;
        break;default:if(32==k[22]&&k[23]&16711680&&k[24]&65280&&k[25]&255&&k[26]&4278190080)p=!0,f=64,e.format=THREE.RGBAFormat;else return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(l&255,l>>8&255,l>>16&255,l>>24&255)),e}e.mipmapCount=1;k[2]&131072&&!1!==b&&(e.mipmapCount=Math.max(1,k[7]));e.isCubemap=k[28]&512?!0:!1;e.width=k[4];e.height=k[3];for(var k=k[1]+4,g=e.width,h=e.height,l=e.isCubemap?6:1,n=0;n<l;n++){for(var u=0;u<e.mipmapCount;u++){if(p)var t=d(a,k,
        g,h),s=t.length;else s=Math.max(4,g)/4*Math.max(4,h)/4*f,t=new Uint8Array(a,k,s);e.mipmaps.push({data:t,width:g,height:h});k+=s;g=Math.max(.5*g,1);h=Math.max(.5*h,1)}g=e.width;h=e.height}return e},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,k=g.createImageData(d,
    e),l=k.data,p=0;p<d;p++)for(var n=0;n<e;n++){var u=0>n-1?0:n-1,t=n+1>e-1?e-1:n+1,s=0>p-1?0:p-1,r=p+1>d-1?d-1:p+1,v=[],w=[0,0,h[4*(n*d+p)]/255*b];v.push([-1,0,h[4*(n*d+s)]/255*b]);v.push([-1,-1,h[4*(u*d+s)]/255*b]);v.push([0,-1,h[4*(u*d+p)]/255*b]);v.push([1,-1,h[4*(u*d+r)]/255*b]);v.push([1,0,h[4*(n*d+r)]/255*b]);v.push([1,1,h[4*(t*d+r)]/255*b]);v.push([0,1,h[4*(t*d+p)]/255*b]);v.push([-1,1,h[4*(t*d+s)]/255*b]);u=[];s=v.length;for(t=0;t<s;t++){var r=v[t],q=v[(t+1)%s],r=[r[0]-w[0],r[1]-w[1],r[2]-w[2]],
    q=[q[0]-w[0],q[1]-w[1],q[2]-w[2]];u.push(c([r[1]*q[2]-r[2]*q[1],r[2]*q[0]-r[0]*q[2],r[0]*q[1]-r[1]*q[0]]))}v=[0,0,0];for(t=0;t<u.length;t++)v[0]+=u[t][0],v[1]+=u[t][1],v[2]+=u[t][2];v[0]/=u.length;v[1]/=u.length;v[2]/=u.length;w=4*(n*d+p);l[w]=(v[0]+1)/2*255|0;l[w+1]=(v[1]+1)/2*255|0;l[w+2]=255*v[2]|0;l[w+3]=255}g.putImageData(k,0,0);return f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*
    h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
    String(a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,k,l,p,n,u,t,s,r,v,w=b.glyphs[a]||b.glyphs["?"];if(w){if(w.o)for(b=w._cachedOutline||(w._cachedOutline=w.o.split(" ")),l=b.length,a=0;a<l;)switch(k=b[a++],k){case "m":k=b[a++]*c+d;p=b[a++]*c;e.moveTo(k,p);break;case "l":k=b[a++]*c+d;p=b[a++]*c;e.lineTo(k,p);break;case "q":k=b[a++]*
    c+d;p=b[a++]*c;t=b[a++]*c+d;s=b[a++]*c;e.quadraticCurveTo(t,s,k,p);if(g=f[f.length-1])for(n=g.x,u=g.y,g=1,h=this.divisions;g<=h;g++){var q=g/h;THREE.Shape.Utils.b2(q,n,t,k);THREE.Shape.Utils.b2(q,u,s,p)}break;case "b":if(k=b[a++]*c+d,p=b[a++]*c,t=b[a++]*c+d,s=b[a++]*-c,r=b[a++]*c+d,v=b[a++]*-c,e.bezierCurveTo(k,p,t,s,r,v),g=f[f.length-1])for(n=g.x,u=g.y,g=1,h=this.divisions;g<=h;g++)q=g/h,THREE.Shape.Utils.b3(q,n,t,r,k),THREE.Shape.Utils.b3(q,u,s,v,p)}return{offset:w.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],k,l,p;if(0<b(a))for(l=0;l<e;l++)g[l]=l;else for(l=0;l<e;l++)g[l]=e-1-l;var n=2*e;for(l=e-1;2<e;){if(0>=n--){console.log("Warning, unable to triangulate polygon!");break}k=l;e<=k&&(k=0);l=k+1;e<=l&&(l=0);p=l+1;e<=p&&(p=0);var u;a:{var t=u=void 0,s=void 0,r=void 0,v=void 0,w=void 0,q=void 0,x=void 0,y=void 0,
    t=a[g[k]].x,s=a[g[k]].y,r=a[g[l]].x,v=a[g[l]].y,w=a[g[p]].x,q=a[g[p]].y;if(1E-10>(r-t)*(q-s)-(v-s)*(w-t))u=!1;else{var I=void 0,H=void 0,D=void 0,B=void 0,G=void 0,M=void 0,z=void 0,V=void 0,F=void 0,E=void 0,F=V=z=y=x=void 0,I=w-r,H=q-v,D=t-w,B=s-q,G=r-t,M=v-s;for(u=0;u<e;u++)if(u!==k&&u!==l&&u!==p&&(x=a[g[u]].x,y=a[g[u]].y,z=x-t,V=y-s,F=x-r,E=y-v,x-=w,y-=q,F=I*E-H*F,z=G*V-M*z,V=D*y-B*x,-1E-10<=F&&-1E-10<=V&&-1E-10<=z)){u=!1;break a}u=!0}}if(u){f.push([a[g[k]],a[g[l]],a[g[p]]]);h.push([g[k],g[l],
    g[p]]);k=l;for(p=l+1;p<e;k++,p++)g[k]=g[p];e--;n=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,k;g<=h;)if(d=Math.floor(g+(h-g)/2),k=c[d]-f,0>k)g=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,k,l,p,n=a[0]instanceof THREE.Vector3;p=n?new THREE.Vector3:new THREE.Vector2;k=0;for(l=a.length;k<l;k++)h=a[k],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),n&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),p.add(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:p.divideScalar(l)};n&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,k;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,k=g/c.maxX,k=b.getUtoTmapping(k,g),g=b.getPoint(k),k=b.getTangent(k),k.set(-k.y,k.x).multiplyScalar(h),f.x=g.x+k.x,f.y=g.y+k.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
    this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),k=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(k);k=k.getPoint(1);h.push(k.x);h.push(k.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,k,l,p,n,u,t,s,r;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];k=f[3];n=f[0];u=f[1];0<c.length?(g=c[c.length-1],t=g.x,
    s=g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b2(r,t,n,h),r=THREE.Shape.Utils.b2(r,s,u,k),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];k=f[5];n=f[0];u=f[1];l=f[2];p=f[3];0<c.length?(g=c[c.length-1],t=g.x,s=g.y):(g=this.actions[d-1].args,t=g[g.length-2],s=g[g.length-1]);for(f=1;f<=a;f++)r=f/a,g=THREE.Shape.Utils.b3(r,t,n,l,h),r=THREE.Shape.Utils.b3(r,s,u,p,k),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.CSPLINE_THRU:g=
    this.actions[d-1].args;r=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;r=r.concat(f[0]);r=new THREE.SplineCurve(r);for(f=1;f<=g;f++)c.push(r.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];k=f[1];u=f[2];l=f[3];g=f[4];n=!!f[5];t=g-l;s=2*a;for(f=1;f<=s;f++)r=f/s,n||(r=1-r),r=l+r*t,g=h+u*Math.cos(r),r=k+u*Math.sin(r),c.push(new THREE.Vector2(g,r));break;case THREE.PathActions.ELLIPSE:for(h=f[0],k=f[1],u=f[2],p=f[3],l=f[4],g=f[5],n=!!f[6],t=g-l,s=2*a,f=1;f<=s;f++)r=f/s,n||
    (r=1-r),r=l+r*t,g=h+u*Math.cos(r),r=k+p*Math.sin(r),c.push(new THREE.Vector2(g,r))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=this.actions.length;b<c;b++)d=this.actions[b],e=d.args,d=d.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!=g.actions.length&&f.push(g);if(0==f.length)return[];var h;e=[];if(1==f.length)return d=f[0],h=new THREE.Shape,h.actions=d.actions,h.curves=d.curves,e.push(h),e;b=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(a?!b:b)for(h=new THREE.Shape,b=0,c=f.length;b<
    c;b++)d=f[b],g=THREE.Shape.Utils.isClockWise(d.getPoints()),(g=a?!g:g)?(h.actions=d.actions,h.curves=d.curves,e.push(h),h=new THREE.Shape):h.holes.push(d);else{h=void 0;b=0;for(c=f.length;b<c;b++)d=f[b],g=THREE.Shape.Utils.isClockWise(d.getPoints()),(g=a?!g:g)?(h&&e.push(h),h=new THREE.Shape,h.actions=d.actions,h.curves=d.curves):h.holes.push(d);e.push(h)}return e};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,k,l,p,n,u,t,s=[];for(k=0;k<b.length;k++){l=b[k];Array.prototype.push.apply(d,l);f=Number.POSITIVE_INFINITY;for(e=0;e<l.length;e++)for(u=l[e],t=[],n=0;n<c.length;n++)p=c[n],p=u.distanceToSquared(p),t.push(p),p<f&&(f=p,g=e,h=n);e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:l.length-1;var r=[l[g],c[h],c[e]];n=THREE.FontUtils.Triangulate.area(r);var v=[l[g],l[f],c[h]];u=THREE.FontUtils.Triangulate.area(v);t=h;p=g;h+=1;g+=-1;0>h&&
(h+=c.length);h%=c.length;0>g&&(g+=l.length);g%=l.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:l.length-1;r=[l[g],c[h],c[e]];r=THREE.FontUtils.Triangulate.area(r);v=[l[g],l[f],c[h]];v=THREE.FontUtils.Triangulate.area(v);n+u>r+v&&(h=t,g=p,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=l.length),g%=l.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:l.length-1);n=c.slice(0,h);u=c.slice(h);t=l.slice(g);p=l.slice(0,g);f=[l[g],l[f],c[h]];s.push([l[g],c[h],c[e]]);s.push(f);c=n.concat(t).concat(p).concat(u)}return{shape:c,
    isolatedPts:s,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,k,l={};f=0;for(g=d.length;f<g;f++)k=d[f].x+":"+d[f].y,void 0!==l[k]&&console.log("Duplicate point",k),l[k]=f;f=0;for(g=c.length;f<g;f++)for(h=c[f],d=0;3>d;d++)k=h[d].x+":"+h[d].y,k=l[k],void 0!==k&&(h[d]=k);f=0;for(g=e.length;f<g;f++)for(h=e[f],d=0;3>d;d++)k=h[d].x+":"+h[d].y,k=l[k],void 0!==k&&(h[d]=k);return c.concat(e)},
    isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
        this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};
THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.EllipseCurve.prototype.getPoint=function(a){var b;b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
    d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
    (a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var k=0;k<a.hierarchy[c].keys[d].morphTargets.length;k++){var l=a.hierarchy[c].keys[d].morphTargets[k];h[l]=-1}a.hierarchy[c].usedMorphTargets=h;
    for(d=0;d<a.hierarchy[c].keys.length;d++){var p={};for(l in h){for(k=0;k<a.hierarchy[c].keys[d].morphTargets.length;k++)if(a.hierarchy[c].keys[d].morphTargets[k]===l){p[l]=a.hierarchy[c].keys[d].morphTargetsInfluences[k];break}k===a.hierarchy[c].keys[d].morphTargets.length&&(p[l]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=p}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
    d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
    b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;
    f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,k,l,p;for(p=this.currentTime+=a*this.timeScale;this.currentTime>this.data.length;)this.currentTime-=this.data.length;l=this.currentTime%=this.data.length;parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,u=this.hierarchy.length;n<u;n++){a=this.hierarchy[n];k=a.animationCache;for(var t=0;3>t;t++){c=b[t];g=k.prevKey[c];h=k.nextKey[c];if(h.time<=p){if(l<=p)if(this.loop)for(g=
this.data.hierarchy[n].keys[0],h=this.getNextKeyWith(c,n,1);null!==h&&h.time<l&&h.index>g.index;)g=h,h=this.getNextKeyWith(c,n,h.index+1);else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,n,h.index+1);while(null!==h&&h.time<l&&h.index>g.index)}k.prevKey[c]=g;k.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(l-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+n),d=0>d?0:1;if("pos"===c)if(c=
    a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",n,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",n,h.index+1).pos,d=.33*d+.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],
    this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),this.target.set(d[0],d[1],d[2]),this.target.sub(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,k,l;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];k=a[c[2]];l=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],k[0],l[0],e,c,g);d[1]=this.interpolate(f[1],h[1],k[1],l[1],e,c,g);d[2]=this.interpolate(f[2],h[2],k[2],l[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
    d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix),e=this.data.hierarchy[c].keys,
    e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,k;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((k=g<h)&&!this.loop){a=0;for(var l=this.hierarchy.length;a<l;a++){var p=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=p.length-1;e=this.hierarchy[a];if(p.length){for(p=
p<f.length;p++)g=f[p],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(l=this.hierarchy.length;a<l;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var p=b.keys,n=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(p.length){this.JITCompile&&n&&(d instanceof
    THREE.Bone?d.skinMatrix=n.originalMatrix:d.matrix=n.originalMatrix);b=n.prevKey;c=n.nextKey;if(b&&c){if(c.time<=h){if(k&&this.loop)for(b=p[0],c=p[1];c.time<g;)b=c,c=p[b.index+1];else if(!k)for(var u=p.length-1;c.time<g&&c.index!==u;)b=c,c=p[b.index+1];n.prevKey=b;n.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e])for(this.hierarchy[0].updateMatrixWorld(!0),a=0;a<this.hierarchy.length;a++)f[a][e]=
        this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
    1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,u=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
    2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=u;c.activeCubeFace=5;a.render(b,k,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.radius=a=a||50;this.segments=b=void 0!==b?Math.max(3,b):8;this.thetaStart=c=void 0!==c?c:0;this.thetaLength=d=void 0!==d?d:2*Math.PI;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(.5,.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3,k=c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);f.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}c=new THREE.Vector3(0,0,1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,
        e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,r){var v,w=h.widthSegments,q=h.heightSegments,x=e/2,y=f/2,I=h.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)v="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)v="y",q=h.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)v="x",w=h.depthSegments;var H=w+1,D=q+1,B=e/w,G=f/q,M=new THREE.Vector3;M[v]=0<g?1:-1;for(e=0;e<D;e++)for(f=0;f<H;f++){var z=new THREE.Vector3;z[a]=(f*B-x)*c;z[b]=(e*G-y)*d;z[v]=g;h.vertices.push(z)}for(e=
e<q;e++)for(f=0;f<w;f++)y=f+H*e,a=f+H*(e+1),b=f+1+H*(e+1),c=f+1+H*e,d=new THREE.Vector2(f/w,1-e/q),g=new THREE.Vector2(f/w,1-(e+1)/q),v=new THREE.Vector2((f+1)/w,1-(e+1)/q),x=new THREE.Vector2((f+1)/w,1-e/q),y=new THREE.Face3(y+I,a+I,c+I),y.normal.copy(M),y.vertexNormals.push(M.clone(),M.clone(),M.clone()),y.materialIndex=r,h.faces.push(y),h.faceVertexUvs[0].push([d,g,x]),y=new THREE.Face3(a+I,b+I,c+I),y.normal.copy(M),y.vertexNormals.push(M.clone(),M.clone(),M.clone()),y.materialIndex=r,h.faces.push(y),
    h.faceVertexUvs[0].push([g.clone(),v,x.clone()])}THREE.Geometry.call(this);var h=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=f||1;a=this.width/2;b=this.height/2;c=this.depth/2;g("z","y",-1,-1,this.depth,this.height,a,0);g("z","y",1,-1,this.depth,this.height,-a,1);g("x","z",1,1,this.width,this.depth,b,2);g("x","z",1,-1,this.width,this.depth,-b,3);g("x","y",1,-1,this.width,this.height,c,4);g("x","y",-1,-1,this.width,this.height,-c,
    5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.radiusTop=a=void 0!==a?a:20;this.radiusBottom=b=void 0!==b?b:20;this.height=c=void 0!==c?c:100;this.radialSegments=d=d||8;this.heightSegments=e=e||1;this.openEnded=f=void 0!==f?f:!1;var g=c/2,h,k,l=[],p=[];for(k=0;k<=e;k++){var n=[],u=[],t=k/e,s=t*(b-a)+a;for(h=0;h<=d;h++){var r=h/d,v=new THREE.Vector3;v.x=s*Math.sin(r*Math.PI*2);v.y=-t*c+g;v.z=s*Math.cos(r*Math.PI*2);this.vertices.push(v);n.push(this.vertices.length-1);u.push(new THREE.Vector2(r,
        1-t))}l.push(n);p.push(u)}c=(b-a)/c;for(h=0;h<d;h++)for(0!==a?(n=this.vertices[l[0][h]].clone(),u=this.vertices[l[0][h+1]].clone()):(n=this.vertices[l[1][h]].clone(),u=this.vertices[l[1][h+1]].clone()),n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*c).normalize(),k=0;k<e;k++){var t=l[k][h],s=l[k+1][h],r=l[k+1][h+1],v=l[k][h+1],w=n.clone(),q=n.clone(),x=u.clone(),y=u.clone(),I=p[k][h].clone(),H=p[k+1][h].clone(),D=p[k+1][h+1].clone(),B=p[k][h+1].clone();this.faces.push(new THREE.Face3(t,
    s,v,[w,q,y]));this.faceVertexUvs[0].push([I,H,B]);this.faces.push(new THREE.Face3(s,r,v,[q.clone(),x,y.clone()]));this.faceVertexUvs[0].push([H.clone(),D,B.clone()])}if(!1===f&&0<a)for(this.vertices.push(new THREE.Vector3(0,g,0)),h=0;h<d;h++)t=l[0][h],s=l[0][h+1],r=this.vertices.length-1,w=new THREE.Vector3(0,1,0),q=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),I=p[0][h].clone(),H=p[0][h+1].clone(),D=new THREE.Vector2(H.x,0),this.faces.push(new THREE.Face3(t,s,r,[w,q,x])),this.faceVertexUvs[0].push([I,
    H,D]);if(!1===f&&0<b)for(this.vertices.push(new THREE.Vector3(0,-g,0)),h=0;h<d;h++)t=l[k][h+1],s=l[k][h],r=this.vertices.length-1,w=new THREE.Vector3(0,-1,0),q=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,-1,0),I=p[k][h+1].clone(),H=p[k][h].clone(),D=new THREE.Vector2(H.x,1),this.faces.push(new THREE.Face3(t,s,r,[w,q,x])),this.faceVertexUvs[0].push([I,H,D]);this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,k=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).add(f);k.copy(a).add(g);if(h.equals(k))return g.clone();
    h.copy(b).add(f);k.copy(c).add(g);f=d.dot(g);g=k.sub(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).add(h).sub(a).clone()}function e(c,d){var e,f;for(L=c.length;0<=--L;){e=L;f=L-1;0>f&&(f=c.length-1);for(var g=0,h=t+2*p,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              g=0;g<h;g++){var k=ia*g,l=ia*(g+1),n=d+e+k,k=d+f+k,r=d+f+l,l=d+e+l,s=c,v=g,u=h,w=e,y=f,n=n+V,k=k+V,r=r+V,l=l+V;z.faces.push(new THREE.Face3(n,k,l,null,null,q));z.faces.push(new THREE.Face3(k,r,l,null,null,q));n=x.generateSideWallUV(z,a,s,b,n,k,r,l,v,u,w,y);z.faceVertexUvs[0].push([n[0],n[1],n[3]]);z.faceVertexUvs[0].push([n[1],n[2],n[3]])}}}function f(a,b,c){z.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=V;d+=V;e+=V;z.faces.push(new THREE.Face3(c,d,e,null,null,w));c=f?x.generateBottomUV(z,
    a,b,c,d,e):x.generateTopUV(z,a,b,c,d,e);z.faceVertexUvs[0].push(c)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,p=void 0!==b.bevelSegments?b.bevelSegments:3,n=void 0!==b.bevelEnabled?b.bevelEnabled:!0,u=void 0!==b.curveSegments?b.curveSegments:12,t=void 0!==b.steps?b.steps:1,s=b.extrudePath,r,v=!1,w=b.material,q=b.extrudeMaterial,x=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,y,I,H,D;s&&(r=
    s.getSpacedPoints(t),v=!0,n=!1,y=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(s,t,!1),I=new THREE.Vector3,H=new THREE.Vector3,D=new THREE.Vector3);n||(l=k=p=0);var B,G,M,z=this,V=this.vertices.length,s=a.extractPoints(u),u=s.shape,F=s.holes;if(s=!THREE.Shape.Utils.isClockWise(u)){u=u.reverse();G=0;for(M=F.length;G<M;G++)B=F[G],THREE.Shape.Utils.isClockWise(B)&&(F[G]=B.reverse());s=!1}var E=THREE.Shape.Utils.triangulateShape(u,F),A=u;G=0;for(M=F.length;G<M;G++)B=F[G],u=u.concat(B);
    var J,C,R,ma,P,ia=u.length,Z,Y=E.length,s=[],L=0;R=A.length;J=R-1;for(C=L+1;L<R;L++,J++,C++)J===R&&(J=0),C===R&&(C=0),s[L]=d(A[L],A[J],A[C]);var ca=[],N,ja=s.concat();G=0;for(M=F.length;G<M;G++){B=F[G];N=[];L=0;R=B.length;J=R-1;for(C=L+1;L<R;L++,J++,C++)J===R&&(J=0),C===R&&(C=0),N[L]=d(B[L],B[J],B[C]);ca.push(N);ja=ja.concat(N)}for(J=0;J<p;J++){R=J/p;ma=k*(1-R);C=l*Math.sin(R*Math.PI/2);L=0;for(R=A.length;L<R;L++)P=c(A[L],s[L],C),f(P.x,P.y,-ma);G=0;for(M=F.length;G<M;G++)for(B=F[G],N=ca[G],L=0,R=
        B.length;L<R;L++)P=c(B[L],N[L],C),f(P.x,P.y,-ma)}C=l;for(L=0;L<ia;L++)P=n?c(u[L],ja[L],C):u[L],v?(H.copy(y.normals[0]).multiplyScalar(P.x),I.copy(y.binormals[0]).multiplyScalar(P.y),D.copy(r[0]).add(H).add(I),f(D.x,D.y,D.z)):f(P.x,P.y,0);for(R=1;R<=t;R++)for(L=0;L<ia;L++)P=n?c(u[L],ja[L],C):u[L],v?(H.copy(y.normals[R]).multiplyScalar(P.x),I.copy(y.binormals[R]).multiplyScalar(P.y),D.copy(r[R]).add(H).add(I),f(D.x,D.y,D.z)):f(P.x,P.y,h/t*R);for(J=p-1;0<=J;J--){R=J/p;ma=k*(1-R);C=l*Math.sin(R*Math.PI/
        2);L=0;for(R=A.length;L<R;L++)P=c(A[L],s[L],C),f(P.x,P.y,h+ma);G=0;for(M=F.length;G<M;G++)for(B=F[G],N=ca[G],L=0,R=B.length;L<R;L++)P=c(B[L],N[L],C),v?f(P.x,P.y+r[t-1].y,r[t-1].x+ma):f(P.x,P.y,h+ma)}(function(){if(n){var a;a=0*ia;for(L=0;L<Y;L++)Z=E[L],g(Z[2]+a,Z[1]+a,Z[0]+a,!0);a=t+2*p;a*=ia;for(L=0;L<Y;L++)Z=E[L],g(Z[0]+a,Z[1]+a,Z[2]+a,!1)}else{for(L=0;L<Y;L++)Z=E[L],g(Z[2],Z[1],Z[0],!0);for(L=0;L<Y;L++)Z=E[L],g(Z[0]+ia*t,Z[1]+ia*t,Z[2]+ia*t,!1)}})();(function(){var a=0;e(A,a);a+=A.length;G=0;for(M=
length;G<M;G++)B=F[G],e(B,a),a+=B.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,k,l,p,n){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;k=a.vertices[f].y;f=a.vertices[f].z;l=a.vertices[g].x;
    p=a.vertices[g].y;g=a.vertices[g].z;n=a.vertices[h].x;var u=a.vertices[h].y;a=a.vertices[h].z;return.01>Math.abs(c-k)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(l,1-g),new THREE.Vector2(n,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(k,1-f),new THREE.Vector2(p,1-g),new THREE.Vector2(u,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,f=l.length;e<f;e++)g=l[e],THREE.Shape.Utils.isClockWise(g)&&(l[e]=g.reverse());var p=THREE.Shape.Utils.triangulateShape(k,l);e=0;for(f=l.length;e<f;e++)g=l[e],
    k=k.concat(g);l=k.length;f=p.length;for(e=0;e<l;e++)g=k[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)l=p[e],k=l[0]+h,g=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,g,l,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,k,g,l))};
THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);b=b||12;c=c||0;d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var k=c+g*f*d,l=Math.cos(k),p=Math.sin(k),k=0,n=a.length;k<n;k++){var u=a[k],t=new THREE.Vector3;t.x=l*u.x-p*u.y;t.y=p*u.x+l*u.y;t.z=u.z;this.vertices.push(t)}c=a.length;g=0;for(h=b;g<h;g++)for(k=0,n=a.length-1;k<n;k++){b=p=k+c*g;d=p+c;var l=p+1+c,p=p+1,u=g*f,t=k*e,s=u+f,r=t+e;this.faces.push(new THREE.Face3(b,d,p));this.faceVertexUvs[0].push([new THREE.Vector2(u,
    t),new THREE.Vector2(s,t),new THREE.Vector2(u,r)]);this.faces.push(new THREE.Face3(d,l,p));this.faceVertexUvs[0].push([new THREE.Vector2(s,t),new THREE.Vector2(s,r),new THREE.Vector2(u,r)])}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;var e=a/2,f=b/2;c=this.widthSegments;d=this.heightSegments;var g=c+1,h=d+1,k=this.width/c,l=this.height/d,p=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*k-e,-(a*l-f),0));for(a=0;a<d;a++)for(b=0;b<c;b++){var n=b+g*a,e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,k=new THREE.Vector2(b/c,1-a/d),l=new THREE.Vector2(b/c,1-(a+
    1)/d),u=new THREE.Vector2((b+1)/c,1-(a+1)/d),t=new THREE.Vector2((b+1)/c,1-a/d),n=new THREE.Face3(n,e,h);n.normal.copy(p);n.vertexNormals.push(p.clone(),p.clone(),p.clone());this.faces.push(n);this.faceVertexUvs[0].push([k,l,t]);n=new THREE.Face3(e,f,h);n.normal.copy(p);n.vertexNormals.push(p.clone(),p.clone(),p.clone());this.faces.push(n);this.faceVertexUvs[0].push([l.clone(),u,t.clone()])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=a||0;b=b||50;e=void 0!==e?e:0;f=void 0!==f?f:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(3,d):8;var g,h=[],k=a,l=(b-a)/d;for(a=0;a<=d;a++){for(g=0;g<=c;g++){var p=new THREE.Vector3,n=e+g/c*f;p.x=k*Math.cos(n);p.y=k*Math.sin(n);this.vertices.push(p);h.push(new THREE.Vector2((p.x/b+1)/2,(p.y/b+1)/2))}k+=l}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++)for(e=a*c,g=0;g<=c;g++)n=g+e,f=n+a,l=n+c+a,p=n+c+1+a,this.faces.push(new THREE.Face3(f,
    l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]),f=n+a,l=n+c+1+a,p=n+1+a,this.faces.push(new THREE.Face3(f,l,p,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[l].clone(),h[p].clone()]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,k)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);this.radius=a=a||50;this.widthSegments=b=Math.max(3,Math.floor(b)||8);this.heightSegments=c=Math.max(2,Math.floor(c)||6);this.phiStart=d=void 0!==d?d:0;this.phiLength=e=void 0!==e?e:2*Math.PI;this.thetaStart=f=void 0!==f?f:0;this.thetaLength=g=void 0!==g?g:Math.PI;var h,k,l=[],p=[];for(k=0;k<=c;k++){var n=[],u=[];for(h=0;h<=b;h++){var t=h/b,s=k/c,r=new THREE.Vector3;r.x=-a*Math.cos(d+t*e)*Math.sin(f+s*g);r.y=a*Math.cos(f+s*g);
    r.z=a*Math.sin(d+t*e)*Math.sin(f+s*g);this.vertices.push(r);n.push(this.vertices.length-1);u.push(new THREE.Vector2(t,1-s))}l.push(n);p.push(u)}for(k=0;k<this.heightSegments;k++)for(h=0;h<this.widthSegments;h++){b=l[k][h+1];c=l[k][h];d=l[k+1][h];e=l[k+1][h+1];f=this.vertices[b].clone().normalize();g=this.vertices[c].clone().normalize();var n=this.vertices[d].clone().normalize(),u=this.vertices[e].clone().normalize(),t=p[k][h+1].clone(),s=p[k][h].clone(),r=p[k+1][h].clone(),v=p[k+1][h+1].clone();Math.abs(this.vertices[b].y)===
this.radius?(t.x=(t.x+s.x)/2,this.faces.push(new THREE.Face3(b,d,e,[f,n,u])),this.faceVertexUvs[0].push([t,r,v])):Math.abs(this.vertices[d].y)===this.radius?(r.x=(r.x+v.x)/2,this.faces.push(new THREE.Face3(b,c,d,[f,g,n])),this.faceVertexUvs[0].push([t,s,r])):(this.faces.push(new THREE.Face3(b,c,e,[f,g,u])),this.faceVertexUvs[0].push([t,s,v]),this.faces.push(new THREE.Face3(c,d,e,[g.clone(),n,u.clone()])),this.faceVertexUvs[0].push([s.clone(),r,v.clone()]))}this.computeCentroids();this.computeFaceNormals();
    this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=c/this.radialSegments*Math.PI*2;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
    Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().sub(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){e=(this.tubularSegments+1)*c+d-1;var f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,k=new THREE.Face3(e,f,h,[b[e],b[f],b[h]]);k.normal.add(b[e]);k.normal.add(b[f]);k.normal.add(b[h]);k.normal.normalize();
    this.faces.push(k);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[h].clone()]);k=new THREE.Face3(f,g,h,[b[f],b[g],b[h]]);k.normal.add(b[f]);k.normal.add(b[g]);k.normal.add(b[h]);k.normal.normalize();this.faces.push(k);this.faceVertexUvs[0].push([a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=b/c;b=Math.cos(a);f*=d*(2+b)*.5;g=d*(2+b)*g*.5;d=e*d*Math.sin(a)*.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a)for(this.grid[a]=
rray(this.tubularSegments),b=a/this.radialSegments*2*this.p*Math.PI,f=h(b,this.q,this.p,this.radius,this.heightScale),b=h(b+.01,this.q,this.p,this.radius,this.heightScale),c.subVectors(b,f),d.addVectors(b,f),e.crossVectors(c,d),d.crossVectors(e,c),e.normalize(),d.normalize(),b=0;b<this.tubularSegments;++b){var k=b/this.tubularSegments*2*Math.PI;g=-this.tube*Math.cos(k);var k=this.tube*Math.sin(k),l=new THREE.Vector3;l.x=f.x+g*d.x+k*e.x;l.y=f.y+g*d.y+k*e.y;l.z=f.z+g*d.z+k*e.z;this.grid[a][b]=this.vertices.push(l)-
    1}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){e=(a+1)%this.radialSegments;f=(b+1)%this.tubularSegments;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments);var k=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),l=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),p=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face3(c,
    d,f));this.faceVertexUvs[0].push([g,k,p]);this.faces.push(new THREE.Face3(d,e,f));this.faceVertexUvs[0].push([k.clone(),l,p.clone()])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radialSegments=d||8;this.closed=e||!1;this.grid=[];var f,g;d=this.segments+1;var h,k,l;e=new THREE.Vector3;var p,n;b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);p=b.normals;n=b.binormals;this.tangents=b.tangents;this.normals=p;this.binormals=n;for(b=0;b<d;b++)for(this.grid[b]=[],c=b/(d-1),l=a.getPointAt(c),f=p[b],g=n[b],c=0;c<this.radialSegments;c++)h=
    c/this.radialSegments*2*Math.PI,k=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),e.copy(l),e.x+=k*f.x+h*g.x,e.y+=k*f.y+h*g.y,e.z+=k*f.z+h*g.z,this.grid[b][c]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1;for(b=0;b<this.segments;b++)for(c=0;c<this.radialSegments;c++)e=this.closed?(b+1)%this.segments:b+1,p=(c+1)%this.radialSegments,a=this.grid[b][c],d=this.grid[e][c],e=this.grid[e][p],p=this.grid[b][p],n=new THREE.Vector2(b/this.segments,c/this.radialSegments),f=new THREE.Vector2((b+1)/this.segments,
        c/this.radialSegments),g=new THREE.Vector2((b+1)/this.segments,(c+1)/this.radialSegments),k=new THREE.Vector2(b/this.segments,(c+1)/this.radialSegments),this.faces.push(new THREE.Face3(a,d,p)),this.faceVertexUvs[0].push([n,f,k]),this.faces.push(new THREE.Face3(d,e,p)),this.faceVertexUvs[0].push([f.clone(),g,k.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,p,n;this.tangents=e;this.normals=f;this.binormals=g;for(l=0;l<b;l++)p=l/(b-1),e[l]=a.getTangentAt(p),e[l].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);p=Math.abs(e[0].y);n=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));p<=a&&(a=p,d.set(0,1,0));n<=a&&d.set(0,0,1);h.crossVectors(e[0],
    d).normalize();f[0].crossVectors(e[0],h);g[0].crossVectors(e[0],f[0]);for(l=1;l<b;l++)f[l]=f[l-1].clone(),g[l]=g[l-1].clone(),h.crossVectors(e[l-1],e[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),f[l].applyMatrix4(k.makeRotationAxis(h,d))),g[l].crossVectors(e[l],f[l]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),l=1;l<b;l++)f[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),g[l].crossVectors(e[l],
    f[l])};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.add(a).add(b).add(c).divideScalar(3);k.faces.push(d);d=d.centroid;d=Math.atan2(d.z,-d.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,
    c,d)])}function g(a,b){var c=Math.pow(2,b);Math.pow(4,b);for(var d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],n=0;n<=c;n++){l[n]=[];for(var p=e(d.clone().lerp(h,n/c)),s=e(g.clone().lerp(h,n/c)),t=c-n,u=0;u<=t;u++)l[n][u]=0==u&&n==c?p:e(p.clone().lerp(s,u/t))}for(n=0;n<c;n++)for(u=0;u<2*(c-n)-1;u++)d=Math.floor(u/2),0==u%2?f(l[n][d+1],l[n+1][d],l[n][d]):f(l[n][d+1],l[n+1][d+1],l[n+1][d])}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/
    2/Math.PI+.5,a.y));return a.clone()}THREE.Geometry.call(this);c=c||1;d=d||0;for(var k=this,l=0,p=a.length;l<p;l++)e(new THREE.Vector3(a[l][0],a[l][1],a[l][2]));a=this.vertices;for(var n=[],l=0,p=b.length;l<p;l++){var u=a[b[l][0]],t=a[b[l][1]],s=a[b[l][2]];n[l]=new THREE.Face3(u.index,t.index,s.index,[u.clone(),t.clone(),s.clone()])}l=0;for(p=n.length;l<p;l++)g(n[l],d);l=0;for(p=this.faceVertexUvs[0].length;l<p;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,n=b[2].x,u=Math.max(d,Math.max(a,n)),t=
    Math.min(d,Math.min(a,n)),.9<u&&.1>t&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>n&&(b[2].x+=1));l=0;for(p=this.vertices.length;l<p;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){this.radius=a;this.detail=b;var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);var d=this.vertices,e=this.faces,f=this.faceVertexUvs[0],g,h,k,l,p=b+1;for(g=0;g<=c;g++)for(l=g/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var n,u,t,s;for(g=0;g<c;g++)for(h=0;h<b;h++)a=g*p+h,d=g*p+h+1,l=(g+1)*p+h+1,k=(g+1)*p+h,n=new THREE.Vector2(h/b,g/c),u=new THREE.Vector2((h+1)/b,g/c),t=new THREE.Vector2((h+1)/b,(g+1)/c),s=new THREE.Vector2(h/b,(g+1)/c),e.push(new THREE.Face3(a,d,k)),f.push([n,u,s]),e.push(new THREE.Face3(d,l,k)),
    f.push([u.clone(),t,s.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){a=a||1;var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a,0,0),new THREE.Vector3,new THREE.Vector3(0,a,0),new THREE.Vector3,new THREE.Vector3(0,0,a));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d,e,f){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=1);void 0===e&&(e=.2*c);void 0===f&&(f=.2*e);this.position=b;b=new THREE.Geometry;b.vertices.push(new THREE.Vector3(0,0,0));b.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(b,new THREE.LineBasicMaterial({color:d}));this.line.matrixAutoUpdate=!1;this.add(this.line);b=new THREE.CylinderGeometry(0,.5,1,5,1);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));this.cone=new THREE.Mesh(b,
    new THREE.MeshBasicMaterial({color:d}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(a);this.setLength(c,e,f)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();
THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);this.line.scale.set(1,a,1);this.line.updateMatrix();this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.BoxHelper=function(a){var b=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=b;var c=new THREE.Geometry;c.vertices.push(b[0],b[1],b[1],b[2],b[2],b[3],b[3],b[0],b[4],b[5],b[5],b[6],b[6],b[7],b[7],b[4],b[0],b[4],b[1],b[5],b[2],b[6],b[3],b[7]);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);
    void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);
THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.vertices;d[0].set(b.x,b.y,b.z);d[1].set(c.x,b.y,b.z);d[2].set(c.x,c.y,b.z);d[3].set(b.x,c.y,b.z);d[4].set(b.x,b.y,c.z);d[5].set(c.x,b.y,c.z);d[6].set(c.x,c.y,c.z);d[7].set(b.x,c.y,c.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};
THREE.BoundingBoxHelper=function(a,b){var c=b||8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===f[a]&&(f[a]=[]);f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);
    b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1","cf2",3355443);b("cf3","cf4",3355443);THREE.Line.call(this,d,e,THREE.LinePieces);this.camera=a;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=f;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,g,h,k){a.set(g,h,k);c.unprojectVector(a,b);d=e.pointMap[d];if(void 0!==d)for(g=0,h=d.length;g<h;g++)e.geometry.vertices[d[g]].copy(a)}var e=this;b.projectionMatrix.copy(this.camera.projectionMatrix);d("c",0,0,-1);d("t",0,0,1);d("n1",-1,-1,-1);d("n2",1,-1,-1);d("n3",-1,1,-1);d("n4",1,1,-1);d("f1",-1,-1,1);d("f2",1,-1,1);d("f3",-1,1,1);d("f4",1,1,1);d("u1",.7,
    1.1,-1);d("u2",-.7,1.1,-1);d("u3",0,2,-1);d("cf1",-1,0,1);d("cf2",1,0,1);d("cf3",0,-1,1);d("cf4",0,1,1);d("cn1",-1,0,-1);d("cn2",1,0,-1);d("cn3",0,-1,-1);d("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();
THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.PlaneGeometry(b,b),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(c,d);this.add(this.lightPlane);c=new THREE.Geometry;c.vertices.push(new THREE.Vector3);c.vertices.push(new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});
    d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();
THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=b||1;a=c||16776960;d=d||1;b=new THREE.Geometry;c=0;for(var e=this.object.geometry.faces.length;c<e;c++)b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);a=this.geometry.vertices;for(var d=this.object.geometry.faces,e=this.object.matrixWorld,f=0,g=d.length;f<g;f++){var h=d[f];b.copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var k=2*f;a[k].copy(h.centroid).applyMatrix4(e);a[k+1].addVectors(a[k],b)}this.geometry.verticesNeedUpdate=
    !0;return this}}();THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);
THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};
THREE.HemisphereLightHelper=function(a,b,c,d){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];a=new THREE.SphereGeometry(b,4,2);a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(b=0;8>b;b++)a.faces[b].color=this.colors[4>b?0:1];b=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(a,b);this.add(this.lightSphere);
    this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();
THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=b||1;b=c||16711680;d=d||1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexNormals.length;g<h;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],n=0,u=p.vertexNormals.length;n<u;n++){var t=p.vertexNormals[n];d[h].copy(e[p[a[n]]]).applyMatrix4(g);b.copy(t).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
    b.add(d[h]);h+=1;d[h].copy(b);h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a;this.size=b||1;b=c||255;d=d||1;c=new THREE.Geometry;a=a.geometry.faces;for(var e=0,f=a.length;e<f;e++)for(var g=0,h=a[e].vertexTangents.length;g<h;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};
THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){a=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,k=0,l=f.length;k<l;k++)for(var p=f[k],n=0,u=p.vertexTangents.length;n<u;n++){var t=p.vertexTangents[n];d[h].copy(e[p[a[n]]]).applyMatrix4(g);b.copy(t).transformDirection(g).multiplyScalar(this.size);b.add(d[h]);h+=1;d[h].copy(b);
    h+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.WireframeHelper=function(a){var b=[0,0],c={},d=function(a,b){return a-b},e=["a","b","c","d"],f=new THREE.BufferGeometry,g=0;if(a.geometry instanceof THREE.Geometry){for(var h=a.geometry.vertices,k=a.geometry.faces,l=new Uint32Array(6*k.length),p=0,n=k.length;p<n;p++)for(var u=k[p],t=0;3>t;t++){b[0]=u[e[t]];b[1]=u[e[(t+1)%3]];b.sort(d);var s=b.toString();void 0===c[s]&&(l[2*g]=b[0],l[2*g+1]=b[1],c[s]=!0,g++)}f.addAttribute("position",Float32Array,2*g,3);b=f.attributes.position.array;p=0;for(n=
g;p<n;p++)for(t=0;2>t;t++)g=h[l[2*p+t]],e=6*p+3*t,b[e+0]=g.x,b[e+1]=g.y,b[e+2]=g.z}else{h=a.geometry.attributes.position.array;k=a.geometry.attributes.index.array;l=new Uint32Array(2*k.length);p=0;for(n=k.length/3;p<n;p++)for(t=0;3>t;t++)e=3*p,b[0]=k[e+t],b[1]=k[e+(t+1)%3],b.sort(d),s=b.toString(),void 0===c[s]&&(l[2*g]=b[0],l[2*g+1]=b[1],c[s]=!0,g++);f.addAttribute("position",Float32Array,2*g,3);b=f.attributes.position.array;p=0;for(n=g;p<n;p++)for(t=0;2>t;t++)e=6*p+3*t,g=3*l[2*p+t],b[e+0]=h[g],
    b[e+1]=h[g+1],b[e+2]=h[g+2]}THREE.Line.call(this,f,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=a.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
    f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,e,f,g,h,k,l,p,n,u,t;this.init=function(s){b=s.context;c=s;d=s.getPrecision();e=new Float32Array(16);f=new Uint16Array(6);s=0;e[s++]=-1;e[s++]=-1;
    e[s++]=0;e[s++]=0;e[s++]=1;e[s++]=-1;e[s++]=1;e[s++]=0;e[s++]=1;e[s++]=1;e[s++]=1;e[s++]=1;e[s++]=-1;e[s++]=1;e[s++]=0;e[s++]=1;s=0;f[s++]=0;f[s++]=1;f[s++]=2;f[s++]=0;f[s++]=2;f[s++]=3;g=b.createBuffer();h=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,g);b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);k=b.createTexture();l=b.createTexture();b.bindTexture(b.TEXTURE_2D,k);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
        0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
    b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(p=!1,n=a(THREE.ShaderFlares.lensFlare,d)):(p=!0,n=a(THREE.ShaderFlares.lensFlareVertexTexture,d));u={};t={};u.vertex=b.getAttribLocation(n,"position");u.uv=b.getAttribLocation(n,"uv");t.renderType=b.getUniformLocation(n,"renderType");t.map=b.getUniformLocation(n,"map");t.occlusionMap=b.getUniformLocation(n,"occlusionMap");t.opacity=
        b.getUniformLocation(n,"opacity");t.color=b.getUniformLocation(n,"color");t.scale=b.getUniformLocation(n,"scale");t.rotation=b.getUniformLocation(n,"rotation");t.screenPosition=b.getUniformLocation(n,"screenPosition")};this.render=function(a,d,e,f){a=a.__webglFlares;var q=a.length;if(q){var x=new THREE.Vector3,y=f/e,I=.5*e,H=.5*f,D=16/f,B=new THREE.Vector2(D*y,D),G=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1),z=t,D=u;b.useProgram(n);b.enableVertexAttribArray(u.vertex);b.enableVertexAttribArray(u.uv);
    b.uniform1i(z.occlusionMap,0);b.uniform1i(z.map,1);b.bindBuffer(b.ARRAY_BUFFER,g);b.vertexAttribPointer(D.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(D.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h);b.disable(b.CULL_FACE);b.depthMask(!1);var V,F,E,A,J;for(V=0;V<q;V++)if(D=16/f,B.set(D*y,D),A=a[V],x.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]),x.applyMatrix4(d.matrixWorldInverse),x.applyProjection(d.projectionMatrix),G.copy(x),M.x=G.x*I+I,
        M.y=G.y*H+H,p||0<M.x&&M.x<e&&0<M.y&&M.y<f)for(b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,k),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,M.x-8,M.y-8,16,16,0),b.uniform1i(z.renderType,0),b.uniform2f(z.scale,B.x,B.y),b.uniform3f(z.screenPosition,G.x,G.y,G.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,l),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,M.x-8,M.y-8,16,16,0),b.uniform1i(z.renderType,1),b.disable(b.DEPTH_TEST),
                                                          b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,k),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),A.positionScreen.copy(G),A.customUpdateCallback?A.customUpdateCallback(A):A.updateLensFlares(),b.uniform1i(z.renderType,2),b.enable(b.BLEND),F=0,E=A.lensFlares.length;F<E;F++)J=A.lensFlares[F],.001<J.opacity&&.001<J.scale&&(G.x=J.x,G.y=J.y,G.z=J.z,D=J.size*J.scale/f,B.x=D*y,B.y=D,b.uniform3f(z.screenPosition,G.x,G.y,G.z),b.uniform2f(z.scale,B.x,B.y),b.uniform1f(z.rotation,J.rotation),b.uniform1f(z.opacity,
        J.opacity),b.uniform3f(z.color,J.color.r,J.color.g,J.color.b),c.setBlending(J.blending,J.blendEquation,J.blendSrc,J.blendDst),c.setTexture(J.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,k=new THREE.Vector3,l=new THREE.Vector3,p=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
    vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(n,u){var t,s,r,v,w,q,x,y,I,H=[];v=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
    a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);t=0;for(s=n.__lights.length;t<s;t++)if(r=n.__lights[t],r.castShadow)if(r instanceof THREE.DirectionalLight&&r.shadowCascade)for(w=0;w<r.shadowCascadeCount;w++){var D;if(r.shadowCascadeArray[w])D=r.shadowCascadeArray[w];else{I=r;x=w;D=new THREE.DirectionalLight;D.isVirtual=!0;D.onlyShadow=!0;D.castShadow=!0;D.shadowCameraNear=I.shadowCameraNear;D.shadowCameraFar=I.shadowCameraFar;D.shadowCameraLeft=I.shadowCameraLeft;D.shadowCameraRight=I.shadowCameraRight;
    D.shadowCameraBottom=I.shadowCameraBottom;D.shadowCameraTop=I.shadowCameraTop;D.shadowCameraVisible=I.shadowCameraVisible;D.shadowDarkness=I.shadowDarkness;D.shadowBias=I.shadowCascadeBias[x];D.shadowMapWidth=I.shadowCascadeWidth[x];D.shadowMapHeight=I.shadowCascadeHeight[x];D.pointsWorld=[];D.pointsFrustum=[];y=D.pointsWorld;q=D.pointsFrustum;for(var B=0;8>B;B++)y[B]=new THREE.Vector3,q[B]=new THREE.Vector3;y=I.shadowCascadeNearZ[x];I=I.shadowCascadeFarZ[x];q[0].set(-1,-1,y);q[1].set(1,-1,y);q[2].set(-1,
        1,y);q[3].set(1,1,y);q[4].set(-1,-1,I);q[5].set(1,-1,I);q[6].set(-1,1,I);q[7].set(1,1,I);D.originalCamera=u;q=new THREE.Gyroscope;q.position=r.shadowCascadeOffset;q.add(D);q.add(D.target);u.add(q);r.shadowCascadeArray[w]=D;console.log("Created virtualLight",D)}x=r;y=w;I=x.shadowCascadeArray[y];I.position.copy(x.position);I.target.position.copy(x.target.position);I.lookAt(I.target);I.shadowCameraVisible=x.shadowCameraVisible;I.shadowDarkness=x.shadowDarkness;I.shadowBias=x.shadowCascadeBias[y];q=x.shadowCascadeNearZ[y];
    x=x.shadowCascadeFarZ[y];I=I.pointsFrustum;I[0].z=q;I[1].z=q;I[2].z=q;I[3].z=q;I[4].z=x;I[5].z=x;I[6].z=x;I[7].z=x;H[v]=D;v++}else H[v]=r,v++;t=0;for(s=H.length;t<s;t++){r=H[t];r.shadowMap||(w=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(w=THREE.NearestFilter),r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:w,magFilter:w,format:THREE.RGBAFormat}),r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight),r.shadowMatrix=new THREE.Matrix4);
    if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,r.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}n.add(r.shadowCamera);!0===n.autoUpdate&&n.updateMatrixWorld()}r.shadowCameraVisible&&
    !r.cameraHelper&&(r.cameraHelper=new THREE.CameraHelper(r.shadowCamera),r.shadowCamera.add(r.cameraHelper));if(r.isVirtual&&D.originalCamera==u){w=u;v=r.shadowCamera;q=r.pointsFrustum;I=r.pointsWorld;k.set(Infinity,Infinity,Infinity);l.set(-Infinity,-Infinity,-Infinity);for(x=0;8>x;x++)y=I[x],y.copy(q[x]),THREE.ShadowMapPlugin.__projector.unprojectVector(y,w),y.applyMatrix4(v.matrixWorldInverse),y.x<k.x&&(k.x=y.x),y.x>l.x&&(l.x=y.x),y.y<k.y&&(k.y=y.y),y.y>l.y&&(l.y=y.y),y.z<k.z&&(k.z=y.z),y.z>l.z&&
        (l.z=y.z);v.left=k.x;v.right=l.x;v.top=l.y;v.bottom=k.y;v.updateProjectionMatrix()}v=r.shadowMap;q=r.shadowMatrix;w=r.shadowCamera;w.position.setFromMatrixPosition(r.matrixWorld);p.setFromMatrixPosition(r.target.matrixWorld);w.lookAt(p);w.updateMatrixWorld();w.matrixWorldInverse.getInverse(w.matrixWorld);r.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();q.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);q.multiply(w.projectionMatrix);q.multiply(w.matrixWorldInverse);
    h.multiplyMatrices(w.projectionMatrix,w.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(v);b.clear();I=n.__webglObjects;r=0;for(v=I.length;r<v;r++)x=I[r],q=x.object,x.render=!1,!q.visible||!q.castShadow||(q instanceof THREE.Mesh||q instanceof THREE.ParticleSystem)&&q.frustumCulled&&!g.intersectsObject(q)||(q._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,q.matrixWorld),x.render=!0);r=0;for(v=I.length;r<v;r++)x=I[r],x.render&&(q=x.object,x=x.buffer,B=q.material instanceof THREE.MeshFaceMaterial?
        q.material.materials[0]:q.material,y=0<q.geometry.morphTargets.length&&B.morphTargets,B=q instanceof THREE.SkinnedMesh&&B.skinning,y=q.customDepthMaterial?q.customDepthMaterial:B?y?f:e:y?d:c,x instanceof THREE.BufferGeometry?b.renderBufferDirect(w,n.__lights,null,y,x,q):b.renderBuffer(w,n.__lights,null,y,x,q));I=n.__webglObjectsImmediate;r=0;for(v=I.length;r<v;r++)x=I[r],q=x.object,q.visible&&q.castShadow&&(q._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,q.matrixWorld),b.renderImmediateObject(w,
        n.__lights,null,c,q))}t=b.getClearColor();s=b.getClearAlpha();a.clearColor(t.r,t.g,t.b,s);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){var a,b,c,d,e,f,g,h,k,l,p,n,u,t,s,r,v;function w(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var q,x,y,I,H,D,B,G;this.init=function(w){q=w.context;x=w;I=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]);H=new Uint16Array([0,1,2,0,2,3]);D=q.createBuffer();B=q.createBuffer();q.bindBuffer(q.ARRAY_BUFFER,D);q.bufferData(q.ARRAY_BUFFER,I,q.STATIC_DRAW);q.bindBuffer(q.ELEMENT_ARRAY_BUFFER,B);q.bufferData(q.ELEMENT_ARRAY_BUFFER,H,q.STATIC_DRAW);w=q.createProgram();
    var z=q.createShader(q.VERTEX_SHADER),V=q.createShader(q.FRAGMENT_SHADER);q.shaderSource(z,["precision "+x.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
    q.shaderSource(V,["precision "+x.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
    q.compileShader(z);q.compileShader(V);q.attachShader(w,z);q.attachShader(w,V);q.linkProgram(w);G=w;r=q.getAttribLocation(G,"position");v=q.getAttribLocation(G,"uv");a=q.getUniformLocation(G,"uvOffset");b=q.getUniformLocation(G,"uvScale");c=q.getUniformLocation(G,"rotation");d=q.getUniformLocation(G,"scale");e=q.getUniformLocation(G,"color");f=q.getUniformLocation(G,"map");g=q.getUniformLocation(G,"opacity");h=q.getUniformLocation(G,"modelViewMatrix");k=q.getUniformLocation(G,"projectionMatrix");l=
        q.getUniformLocation(G,"fogType");p=q.getUniformLocation(G,"fogDensity");n=q.getUniformLocation(G,"fogNear");u=q.getUniformLocation(G,"fogFar");t=q.getUniformLocation(G,"fogColor");s=q.getUniformLocation(G,"alphaTest");w=document.createElement("canvas");w.width=8;w.height=8;z=w.getContext("2d");z.fillStyle="#ffffff";z.fillRect(0,0,w.width,w.height);y=new THREE.Texture(w);y.needsUpdate=!0};this.render=function(H,z,I,F){I=H.__webglSprites;if(F=I.length){q.useProgram(G);q.enableVertexAttribArray(r);
    q.enableVertexAttribArray(v);q.disable(q.CULL_FACE);q.enable(q.BLEND);q.bindBuffer(q.ARRAY_BUFFER,D);q.vertexAttribPointer(r,2,q.FLOAT,!1,16,0);q.vertexAttribPointer(v,2,q.FLOAT,!1,16,8);q.bindBuffer(q.ELEMENT_ARRAY_BUFFER,B);q.uniformMatrix4fv(k,!1,z.projectionMatrix.elements);q.activeTexture(q.TEXTURE0);q.uniform1i(f,0);var E=0,A=0,J=H.fog;J?(q.uniform3f(t,J.color.r,J.color.g,J.color.b),J instanceof THREE.Fog?(q.uniform1f(n,J.near),q.uniform1f(u,J.far),q.uniform1i(l,1),A=E=1):J instanceof THREE.FogExp2&&
        (q.uniform1f(p,J.density),q.uniform1i(l,2),A=E=2)):(q.uniform1i(l,0),A=E=0);for(var C,R=[],J=0;J<F;J++)C=I[J],!1!==C.visible&&(C._modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]);I.sort(w);for(J=0;J<F;J++)C=I[J],!1!==C.visible&&(z=C.material,q.uniform1f(s,z.alphaTest),q.uniformMatrix4fv(h,!1,C._modelViewMatrix.elements),R[0]=C.scale.x,R[1]=C.scale.y,C=H.fog&&z.fog?A:0,E!==C&&(q.uniform1i(l,C),E=C),q.uniform2f(b,z.uvScale.x,z.uvScale.y),q.uniform2f(a,
        z.uvOffset.x,z.uvOffset.y),q.uniform1f(g,z.opacity),q.uniform3f(e,z.color.r,z.color.g,z.color.b),q.uniform1f(c,z.rotation),q.uniform2fv(d,R),x.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst),x.setDepthTest(z.depthTest),x.setDepthWrite(z.depthWrite),z.map&&z.map.image&&z.map.image.width?x.setTexture(z.map,0):x.setTexture(y,0),q.drawElements(q.TRIANGLES,6,q.UNSIGNED_SHORT,0));q.enable(q.CULL_FACE)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
    vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(k,l){var p,n,u,t,s,r;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);!0===k.autoUpdate&&k.updateMatrixWorld();l.matrixWorldInverse.getInverse(l.matrixWorld);h.multiplyMatrices(l.projectionMatrix,
    l.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(this.renderTarget);b.clear();r=k.__webglObjects;p=0;for(n=r.length;p<n;p++)u=r[p],s=u.object,u.render=!1,!s.visible||(s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!g.intersectsObject(s)||(s._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,s.matrixWorld),u.render=!0);var v;p=0;for(n=r.length;p<n;p++)u=r[p],u.render&&(s=u.object,u=u.buffer,s instanceof THREE.ParticleSystem&&!s.customDepthMaterial||((v=
        s.material instanceof THREE.MeshFaceMaterial?s.material.materials[0]:s.material)&&b.setMaterialFaces(s.material),t=0<s.geometry.morphTargets.length&&v.morphTargets,v=s instanceof THREE.SkinnedMesh&&v.skinning,t=s.customDepthMaterial?s.customDepthMaterial:v?t?f:e:t?d:c,u instanceof THREE.BufferGeometry?b.renderBufferDirect(l,k.__lights,null,t,u,s):b.renderBuffer(l,k.__lights,null,t,u,s)));r=k.__webglObjectsImmediate;p=0;for(n=r.length;p<n;p++)u=r[p],s=u.object,s.visible&&(s._modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,
    s.matrixWorld),b.renderImmediateObject(l,k.__lights,null,c,s));p=b.getClearColor();n=b.getClearAlpha();a.clearColor(p.r,p.g,p.b,n);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
    lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
        fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
"use strict";
var PANDP={REVISION:"3",ButtonController:function(a){this.domElement=document;this.mainProcessor=a;this.openButton=document.getElementById("open");this.phonesButton=document.getElementById("phones");this.tabletsButton=document.getElementById("tablets");this.laptopsButton=document.getElementById("laptops");this.plansButton=document.getElementById("plans");this.contactsButton=document.getElementById("contacts");this.backButton=document.getElementById("back");document.getElementById("Open_Menu").style.display="none";
    document.getElementById("Back_Button").style.display="none"}};
PANDP.ButtonController.prototype.enableButtons=function(){var a=this;this.onPhonesClick=function(b){b.preventDefault();a.mainProcessor.moveToLocation(PANDP.LocationController.LOCATION_PHONES)};this.onTabletsClick=function(b){b.preventDefault();a.mainProcessor.moveToLocation(PANDP.LocationController.LOCATION_TABLETS)};this.onLaptopsClick=function(b){b.preventDefault();a.mainProcessor.moveToLocation(PANDP.LocationController.LOCATION_LAPTOPS)};this.onPlansClick=function(b){b.preventDefault();a.mainProcessor.moveToLocation(PANDP.LocationController.LOCATION_TARIFF)};
    this.onContactsClick=function(b){b.preventDefault();a.mainProcessor.moveToLocation(PANDP.LocationController.LOCATION_CONTACTS)};this.phonesButton.addEventListener("click",this.onPhonesClick);this.tabletsButton.addEventListener("click",this.onTabletsClick);this.laptopsButton.addEventListener("click",this.onLaptopsClick);this.plansButton.addEventListener("click",this.onPlansClick);this.contactsButton.addEventListener("click",this.onContactsClick);this.mainProcessor.queueController.executeNext()};
PANDP.ButtonController.prototype.disableButtons=function(){this.openButton.removeEventListener("click",this.onOpenClick,!1);this.phonesButton.removeEventListener("click",this.onPhonesClick,!1);this.tabletsButton.removeEventListener("click",this.onTabletsClick,!1);this.laptopsButton.removeEventListener("click",this.onLaptopsClick,!1);this.plansButton.removeEventListener("click",this.onPlansClick,!1);this.contactsButton.removeEventListener("click",this.onContactsClick,!1);this.mainProcessor.queueController.executeNext()};
PANDP.ButtonController.prototype.enableBack=function(){var a=this;document.getElementById("Back_Button").style.display="block";this.onBackClick=function(b){b.preventDefault();a.mainProcessor.deviceRotationManager.stopDeviceManaging()};this.backButton.addEventListener("click",this.onBackClick);this.mainProcessor.queueController.executeNext()};
PANDP.ButtonController.prototype.disableBack=function(){this.backButton.removeEventListener("click",this.onBackClick,!1);document.getElementById("Back_Button").style.display="none";this.mainProcessor.queueController.executeNext()};PANDP.ButtonController.prototype.enableOpen=function(){var a=this;document.getElementById("Open_Menu").style.display="block";this.onOpenClick=function(b){b.preventDefault();a.mainProcessor.startAnimation()};this.openButton.addEventListener("click",this.onOpenClick);this.mainProcessor.queueController.executeNext()};
PANDP.ButtonController.prototype.disableOpen=function(){this.openButton.removeEventListener("click",this.onOpenClick,!1);document.getElementById("Open_Menu").style.display="none";this.mainProcessor.queueController.executeNext()};PANDP.ClickController=function(a){this.mainProcessor=a;this.domElement=document;this.camera=this.mainProcessor.camera;this.meshDeviceArray=this.mainProcessor.loader.meshDeviceArray;this.projector=new THREE.Projector};PANDP.ClickController.prototype=Object.create(THREE.EventDispatcher.prototype);
PANDP.ClickController.prototype.startMouseClickProcessing=function(){var a=this;this.onMouseDown=function(b){b.preventDefault();var c=0,d=0,c=b.clientX/window.innerWidth*2-1,d=2*-(b.clientY/window.innerHeight)+1;b=new THREE.Vector3;b.set(c,d,1);a.projector.unprojectVector(b,a.camera);c=b.sub(a.camera.position).normalize();d=new THREE.Raycaster(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0));d.set(a.camera.position,c);c=d.intersectObjects(a.meshDeviceArray,null);d=a.mainProcessor.deviceRotationManager;
    c.length&&(d.prepareDeviceForRotation(c[0].object),globalIndex=d=c[0].object.index,22<=d&&(a.mainProcessor.animationActive=c[0].object.index-22))};this.domElement.addEventListener("mousedown",this.onMouseDown);this.mainProcessor.queueController.executeNext()};PANDP.ClickController.prototype.stopMouseClickProcessing=function(){this.domElement.removeEventListener("mousedown",this.onMouseDown,!1);this.mainProcessor.queueController.executeNext()};PANDP.CssManager=function(a){this.mainProcessor=a};
PANDP.CssManager.prototype.makeCssVisible=function(a){a=a[0];"StageParent"==a?this.setCssTextForDevice():"StageParentPlans"==a&&(comp1.play(0),comp1.stop(0));this.div=document.getElementById(a);this.div.style.display="block";vc_play();this.mainProcessor.queueController.executeNext()};
PANDP.CssManager.prototype.setCssTextForDevice=function(){$("#Stage_Text").html(namemas[globalIndex]);$("#Stage_TextCopy12").html("system: "+systemmas[globalIndex]);$("#Stage_TextCopy34").html("screen size: "+screenmas[globalIndex]+'"');$("#Stage_TextCopy45").html("resolution:"+resolutionmas[globalIndex]+"px");$("#Stage_TextCopy46").html("size: "+sizemas[globalIndex]+"mm");$("#Stage_TextCopy47").html("weight: "+weightmas[globalIndex]+"g");$("#Stage_TextCopy48").html("CPU: "+cpumas[globalIndex]+"GHz");
    $("#Stage_TextCopy49").html("RAM: "+rammas[globalIndex]+"MB");$("#Stage_TextCopy50").html("Memory: "+memorymas[globalIndex]+"MB");$("#Stage_TextCopy51").html("camera: "+cammas[globalIndex]+"MP");$("#Stage_TextCopy52").html("Standby Time: "+stimemas[globalIndex]+"h");$("#Stage_TextCopy25").html("Talk Time: "+ttimemas[globalIndex]+"h")};PANDP.CssManager.prototype.makeCssInvisible=function(){void 0!==this.div&&(this.div.style.display="none");this.mainProcessor.queueController.executeNext()};
PANDP.DeviceRotationManager=function(a){this.mainProcessor=a;this.queueController=this.mainProcessor.queueController;this.moveController=this.mainProcessor.moveController;this.rotationController=this.mainProcessor.rotationController;this.sphereManager=this.mainProcessor.sphereManager;this.pointLaptops=[{x:28.21345,y:25.0523,z:52.3558},{x:29.1476,y:24.0771,z:66.3906},{x:29.0754,y:14.3491,z:52.36},{x:29.0754,y:14.3491,z:66.3877}];this.textureCube=new THREE.ImageUtils.loadTextureCube("model/env/nx.jpg model/env/ny.jpg model/env/nz.jpg model/env/px.jpg model/env/py.jpg model/env/pz.jpg".split(" "))};
PANDP.DeviceRotationManager.prototype.prepareDeviceForRotation=function(a){this.meshRotated=a;this.mainProcessor.clickController.stopMouseClickProcessing();this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.deviceRotationManager;this.entity.func="addEnvMap";this.entity.params=[];this.queueController.addToQueue(this.entity);"phone"==this.meshRotated.name?this.preparePhones():"tablet"==this.meshRotated.name?this.prepareTablets():"laptop"==this.meshRotated.name&&this.prepareLaptops()};
PANDP.DeviceRotationManager.prototype.preparePhones=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);var a={x:this.meshRotated.position.x,y:this.meshRotated.position.y+1,z:this.meshRotated.position.z};this.meshOldPosition={x:a.x,y:a.y,z:a.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";
    this.entity.params=[this,this.meshRotated,a,.05];this.queueController.addToQueue(this.entity);a={x:-11.5,y:26.5,z:27.5};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.5];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.littleRotationController;this.entity.func="startLittleRotation";this.entity.params=[this.meshRotated,
            Math.PI/6,Math.PI/90];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.sphereManager;this.entity.func="createColorSpheresForDevice";this.entity.params=[this.meshRotated,PANDP.SphereManager.PHONES];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="startRotationForItem";this.entity.params=[this.meshRotated,PANDP.RotationController.PHONES_AND_TABLETS_MODE];this.queueController.addToQueue(this.entity);
    this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssVisible";this.entity.params=["StageParent"];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.prepareTablets=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);var a={x:this.meshRotated.position.x,y:this.meshRotated.position.y+2,z:this.meshRotated.position.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,
    a,.05];this.queueController.addToQueue(this.entity);a={x:a.x-3,y:a.y,z:a.z};this.meshOldPosition={x:a.x,y:a.y,z:a.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.1];this.queueController.addToQueue(this.entity);a={x:18,y:25,z:3.5};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,
    a,.5];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.littleRotationController;this.entity.func="startLittleRotation";this.entity.params=[this.meshRotated,Math.PI/8,Math.PI/90];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.sphereManager;this.entity.func="createColorSpheresForDevice";this.entity.params=[this.meshRotated,PANDP.SphereManager.TABLETS];this.queueController.addToQueue(this.entity);
    this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="startRotationForItem";this.entity.params=[this.meshRotated,PANDP.RotationController.PHONES_AND_TABLETS_MODE];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;
    this.entity.func="makeCssVisible";this.entity.params=["StageParent"];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.prepareLaptops=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);var a=this.mainProcessor.camera.position;this.cameraOldPosition={x:a.x,y:a.y,z:a.z};a=this.pointLaptops[this.meshRotated.index-22];this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=
    [this,this.mainProcessor.camera,a,.5];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="startRotationForItem";this.entity.params=[this.meshRotated,PANDP.RotationController.LAPTOPS_MODE];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);
    this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableOpen";this.entity.params=[];this.queueController.addToQueue(this.entity);console.log(this.meshRotated.position.y);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssVisible";this.entity.params=["StageParent"];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.stopDeviceManaging=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssInvisible";this.entity.params=[];this.queueController.addToQueue(this.entity);void 0!=this.meshRotated&&("phone"==this.meshRotated.name?this.stopPhonesManaging():"tablet"==this.meshRotated.name?this.stopTabletsManaging():"laptop"==this.meshRotated.name&&this.stopLaptopsManaging());this.entity=new PANDP.Entity;this.entity.controller=
    this.mainProcessor.deviceRotationManager;this.entity.func="removeEnvMap";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.clickController;this.entity.func="startMouseClickProcessing";this.entity.params=[];this.queueController.addToQueue(this.entity)};
PANDP.DeviceRotationManager.prototype.stopPhonesManaging=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.sphereManager;this.entity.func="removeSpheres";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.queueController;this.entity.func=
    "joinNext";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="stopRotationForItem";this.entity.params=[this.meshRotated];this.queueController.addToQueue(this.entity);var a=this.meshOldPosition;this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.5];this.queueController.addToQueue(this.entity);
    a={x:a.x,y:a.y-1,z:a.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.05];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.stopTabletsManaging=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.sphereManager;this.entity.func="removeSpheres";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.queueController;this.entity.func=
    "joinNext";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="stopRotationForItem";this.entity.params=[this.meshRotated];this.queueController.addToQueue(this.entity);var a=this.meshOldPosition;this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.5];this.queueController.addToQueue(this.entity);
    a={x:a.x+3,y:a.y,z:a.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.1];this.queueController.addToQueue(this.entity);a={x:a.x,y:a.y-2,z:a.z};this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.meshRotated,a,.05];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=
        this.mainProcessor.buttonController;this.entity.func="enableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.stopLaptopsManaging=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableOpen";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="disableBack";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.queueController;
    this.entity.func="joinNext";this.entity.params=[];this.queueController.addToQueue(this.entity);this.entity=new PANDP.Entity;this.entity.controller=this.rotationController;this.entity.func="stopRotationForItem";this.entity.params=[this.meshRotated];this.queueController.addToQueue(this.entity);var a=this.cameraOldPosition;this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.mainProcessor.camera,a,.5];this.queueController.addToQueue(this.entity);
    this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.buttonController;this.entity.func="enableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity);this.queueController.executeNext()};PANDP.DeviceRotationManager.prototype.addEnvMap=function(){for(var a=this.meshRotated.material.materials,b=0;b<a.length;++b)void 0!==a[b].envOpt&&(a[b].reflectivity=.4,a[b].envMap=this.textureCube,a[b].needsUpdate=!0);this.queueController.executeNext()};
PANDP.DeviceRotationManager.prototype.removeEnvMap=function(){for(var a=this.meshRotated.material.materials,b=0;b<a.length;++b)void 0!==a[b].envOpt&&(a[b].envMap=null,a[b].needsUpdate=!0);this.queueController.executeNext()};PANDP.Entity=function(){};PANDP.Entity.prototype.setEntity=function(a,b,c){this.controller=a;this.func=b;this.params=c};var globalIndex=0;PANDP.GlobalScript=function(){};
PANDP.GlobalScript.prototype.init=function(){camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,2E4);this.scene=new THREE.Scene;this.scene.add(camera);this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0});this.renderer.setClearColor(15658734,1);this.renderer.setSize(window.innerWidth,window.innerHeight);this.renderer.sortObjects=!0;this.renderer.autoClear=!1;this.renderer.clear();this.container=document.getElementById("ThreeJS");this.container.appendChild(this.renderer.domElement);
    var a=new THREE.DirectionalLight(16777215,1);a.position.set(0,-1,1).normalize();this.scene.add(a);a=new THREE.DirectionalLight(16777215,1);a.position.set(0,1,-1).normalize();this.scene.add(a);a=new THREE.HemisphereLight(16777215,16777215,1);this.scene.add(a);this.mainProcessor=new PANDP.MainProcessor(camera,this.scene);this.render();var b=this;this.animate=function(){requestAnimationFrame(b.animate);b.mainProcessor.generalProcessing();b.render()};this.animate();window.addEventListener("resize",bind(this,
        this.onWindowResize),!1)};PANDP.GlobalScript.prototype.onWindowResize=function(){camera.aspect=window.innerWidth/window.innerHeight;camera.updateProjectionMatrix();this.renderer.setSize(window.innerWidth,window.innerHeight)};PANDP.GlobalScript.prototype.render=function(){this.renderer.render(this.scene,camera)};function bind(a,b){return function(){b.apply(a,arguments)}}PANDP.LittleRotationController=function(a){this.mainProcessor=a};
PANDP.LittleRotationController.prototype.startLittleRotation=function(a){this.meshRotated=a[0];this.rotationAngle=a[1];this.speed=a[2];this.queueController=this.mainProcessor.queueController;this.isLittleRotationEnabled=!0};PANDP.LittleRotationController.prototype.littleRotationProcessing=function(){this.isLittleRotationEnabled&&(this.meshRotated.rotation.y<this.rotationAngle?this.meshRotated.rotation.y+=this.speed:(this.isLittleRotationEnabled=!1,this.queueController.executeNext()))};
PANDP.LocationController=function(a){this.mainProcessor=a;this.camera=this.mainProcessor.camera;this.camera.position.x=-20;this.camera.position.y=28;this.camera.position.z=80;this.currentLookAtPoint=a={x:16,y:28,z:22};this.camera.lookAt(a);this.queueController=this.mainProcessor.queueController;this.moveController=this.mainProcessor.moveController;this.lookAtHorizontalController=this.mainProcessor.lookAtHorizontalController;this.lookAtVerticalController=this.mainProcessor.lookAtVerticalController;
    this.buttonController=this.mainProcessor.buttonController};PANDP.LocationController.LOCATION_CONTACTS=4;PANDP.LocationController.LOCATION_PHONES=1;PANDP.LocationController.LOCATION_TABLETS=2;PANDP.LocationController.LOCATION_LAPTOPS=3;PANDP.LocationController.LOCATION_TARIFF=0;
PANDP.LocationController.prototype.moveToLocation=function(a){switch(a){case PANDP.LocationController.LOCATION_PHONES:this.complexDisableCssPlans();this.complexRemoveClickListener();this.complexButtonDisable();a={x:this.camera.position.x,y:28,z:this.camera.position.z};this.complexMoveToPoint(a,1);a={x:-7,y:28,z:26};this.complexLookAtVertical(a,.03);this.complexLookAtHorizontal(a,.03);this.complexMoveToPoint(a,1);a={x:-60,y:-1700,z:26};this.complexLookAtHorizontal(a,.03);this.complexLookAtVertical(a,
    .03);this.complexButtonEnable();this.complexAddClickListener();this.queueController.executeNext();break;case PANDP.LocationController.LOCATION_TABLETS:this.complexDisableCssPlans();this.complexRemoveClickListener();this.complexButtonDisable();a={x:this.camera.position.x,y:28,z:this.camera.position.z};this.complexMoveToPoint(a,1);a={x:10,y:28,z:6};this.complexLookAtVertical(a,.03);this.complexLookAtHorizontal(a,.03);this.complexMoveToPoint(a,1);a={x:60,y:-1700,z:6};this.complexLookAtHorizontal(a,.03);
    this.complexLookAtVertical(a,.03);this.complexButtonEnable();this.complexAddClickListener();this.queueController.executeNext();break;case PANDP.LocationController.LOCATION_LAPTOPS:this.complexDisableCssPlans();this.complexRemoveClickListener();this.complexButtonDisable();a={x:this.camera.position.x,y:28,z:this.camera.position.z};this.complexMoveToPoint(a,.5);a={x:10,y:28,z:56};this.complexLookAtVertical(a,.03);this.complexLookAtHorizontal(a,.03);this.complexMoveToPoint(a,1);a={x:60,y:-1700,z:56};
    this.complexLookAtHorizontal(a,.03);this.complexLookAtVertical(a,.03);this.complexButtonEnable();this.complexAddClickListener();this.queueController.executeNext();break;case PANDP.LocationController.LOCATION_CONTACTS:this.complexDisableCssContacts();this.complexRemoveClickListener();this.complexButtonDisable();a={x:this.camera.position.x,y:28,z:this.camera.position.z};this.complexMoveToPoint(a,1);a={x:-7.5,y:28,z:-19.8};this.complexLookAtVertical(a,.03);this.complexLookAtHorizontal(a,.03);this.complexMoveToPoint(a,
    1);a={x:-6.5,y:-27E3,z:-19.8};this.complexLookAtHorizontal(a,.03);this.complexLookAtVertical(a,.03);a={x:-7.5,y:15,z:-19.8};this.complexMoveToPoint(a,1);this.complexEnableCssContacts();this.complexButtonEnable();this.queueController.executeNext();break;case PANDP.LocationController.LOCATION_TARIFF:this.complexDisableCssPlans(),this.complexRemoveClickListener(),this.complexButtonDisable(),a={x:this.camera.position.x,y:28,z:this.camera.position.z},this.complexMoveToPoint(a,1),a={x:10.5,y:28,z:-19.8},
    this.complexLookAtVertical(a,.03),this.complexLookAtHorizontal(a,.03),this.complexMoveToPoint(a,1),a={x:9,y:-27E3,z:-19.8},this.complexLookAtHorizontal(a,.03),this.complexLookAtVertical(a,.03),a={x:10.5,y:15,z:-19.8},this.complexMoveToPoint(a,1),this.complexEnableCssPlans(),this.complexButtonEnable(),this.queueController.executeNext()}};PANDP.LocationController.prototype.complexOpenBoxes=function(a,b){};
PANDP.LocationController.prototype.complexEnableCssContacts=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssVisible";this.entity.params=["StageParentContacts"];this.queueController.addToQueue(this.entity)};PANDP.LocationController.prototype.complexDisableCssContacts=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssInvisible";this.entity.params=[];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexEnableCssPlans=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssVisible";this.entity.params=["StageParentPlans"];this.queueController.addToQueue(this.entity)};PANDP.LocationController.prototype.complexDisableCssPlans=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.cssManager;this.entity.func="makeCssInvisible";this.entity.params=[];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexAddClickListener=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.clickController;this.entity.func="startMouseClickProcessing";this.entity.params=[];this.queueController.addToQueue(this.entity)};PANDP.LocationController.prototype.complexRemoveClickListener=function(){this.entity=new PANDP.Entity;this.entity.controller=this.mainProcessor.clickController;this.entity.func="stopMouseClickProcessing";this.entity.params=[];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexButtonEnable=function(){this.entity=new PANDP.Entity;this.entity.controller=this.buttonController;this.entity.func="enableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity)};PANDP.LocationController.prototype.complexButtonDisable=function(){this.entity=new PANDP.Entity;this.entity.controller=this.buttonController;this.entity.func="disableButtons";this.entity.params=[];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexMoveToPoint=function(a,b){this.entity=new PANDP.Entity;this.entity.controller=this.moveController;this.entity.func="moveItemToVectorPosition";this.entity.params=[this,this.camera,a,b];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexLookAtHorizontal=function(a,b){this.entity=new PANDP.Entity;this.entity.controller=this.lookAtHorizontalController;this.entity.func="lookAtPointHorizontal";this.entity.params=[this,this.camera,a,b];this.queueController.addToQueue(this.entity)};
PANDP.LocationController.prototype.complexLookAtVertical=function(a,b){this.entity=new PANDP.Entity;this.entity.controller=this.lookAtVerticalController;this.entity.func="lookAtPointVertical";this.entity.params=[this,this.camera,a,b];this.queueController.addToQueue(this.entity)};PANDP.LookAtHorizontalController=function(){};
PANDP.LookAtHorizontalController.prototype.lookAtPointHorizontal=function(a){this.locationController=a[0];this.camera=a[1];this.targetPoint={x:a[2].x,y:a[2].y,z:a[2].z};this.speed=a[3];this.cameraPosition=this.camera.position;this.startPoint=this.locationController.currentLookAtPoint;this.extrudeTarget();this.calculateEquestions();this.calculateRotationOrientation();this.isPositiveRotation||(this.speed=-this.speed);this.cosVectorStartCamera==this.cosVectorTargetCamera?this.finishRotation():this.isLookAtHorizontalEnabled=
    !0;this.isEr1Zero=this.eq1WasZero=!1};PANDP.LookAtHorizontalController.prototype.extrudeTarget=function(){this.targetPoint.x=100*(this.targetPoint.x-this.cameraPosition.x)+this.cameraPosition.x;this.targetPoint.z=100*(this.targetPoint.z-this.cameraPosition.z)+this.cameraPosition.z};
PANDP.LookAtHorizontalController.prototype.calculateEquestions=function(){this.aTargetCamera=this.cameraPosition.z-this.targetPoint.z;this.bTargetCamera=this.targetPoint.x-this.cameraPosition.x;this.cTargetCamera=this.targetPoint.z*this.cameraPosition.x-this.cameraPosition.z*this.targetPoint.x;this.aStartCamera=this.cameraPosition.z-this.startPoint.z;this.bStartCamera=this.startPoint.x-this.cameraPosition.x;this.cStartCamera=this.startPoint.z*this.cameraPosition.x-this.cameraPosition.z*this.startPoint.x;
    this.aStartTarget=this.targetPoint.z-this.startPoint.z;this.bStartTarget=this.startPoint.x-this.targetPoint.x};PANDP.LookAtHorizontalController.prototype.calculateEq2=function(){this.eq2=this.aStartCamera*this.targetPoint.x+this.bStartCamera*this.targetPoint.z+this.cStartCamera};PANDP.LookAtHorizontalController.prototype.calculateEq1=function(){this.eq1=this.aTargetCamera*this.startPoint.x+this.bTargetCamera*this.startPoint.z+this.cTargetCamera};
PANDP.LookAtHorizontalController.prototype.calculateRotationOrientation=function(){this.calculateEq1();this.calculateEq2();var a=Math.sqrt(Math.pow(this.targetPoint.x-this.cameraPosition.x,2)+Math.pow(this.targetPoint.z-this.cameraPosition.z,2)),b=(this.targetPoint.z-this.cameraPosition.z)/a;this.cosVectorTargetCamera=(this.targetPoint.x-this.cameraPosition.x)/a;var a=Math.sqrt(Math.pow(this.startPoint.x-this.cameraPosition.x,2)+Math.pow(this.startPoint.z-this.cameraPosition.z,2)),c=(this.startPoint.z-
    this.cameraPosition.z)/a;this.cosVectorStartCamera=(this.startPoint.x-this.cameraPosition.x)/a;this.sinDiv=b*this.cosVectorStartCamera-this.cosVectorTargetCamera*c;this.isPositiveRotation=0>this.sinDiv;this.isEq1Positive=0<this.eq1;this.cosVectorStartCamera==-this.cosVectorTargetCamera&&1==Math.abs(this.cosVectorStartCamera)&&(this.isEq1Zero=!0)};
PANDP.LookAtHorizontalController.prototype.lookAtHorizontalProcessing=function(){this.isLookAtHorizontalEnabled&&(this.calculateEq1(),this.solveEq1Trouble(),this.isEq1Positive==0<this.eq1||0==this.eq1?(this.startPoint=this.tempPoint={x:this.calculateX(),y:this.startPoint.y,z:this.calculateZ()},this.camera.lookAt(this.startPoint)):this.finishRotation())};
PANDP.LookAtHorizontalController.prototype.solveEq1Trouble=function(){this.eq1WasZero&&(this.isEq1Positive=0<this.eq1,this.eq1WasZero=!1);this.isEq1Zero&&(this.eq1WasZero=!0,this.isEq1Zero=!1)};PANDP.LookAtHorizontalController.prototype.finishRotation=function(){this.tempPoint=this.targetPoint;this.tempPoint.y=this.startPoint.y;this.camera.lookAt(this.tempPoint);this.isLookAtHorizontalEnabled=!1;this.locationController.currentLookAtPoint=this.tempPoint;this.locationController.queueController.executeNext()};
PANDP.LookAtHorizontalController.prototype.calculateX=function(){return(this.startPoint.x-this.cameraPosition.x)*Math.cos(this.speed)+(this.startPoint.z-this.cameraPosition.z)*Math.sin(this.speed)+this.cameraPosition.x};PANDP.LookAtHorizontalController.prototype.calculateZ=function(){return-(this.startPoint.x-this.cameraPosition.x)*Math.sin(this.speed)+(this.startPoint.z-this.cameraPosition.z)*Math.cos(this.speed)+this.cameraPosition.z};PANDP.LookAtVerticalController=function(){};
PANDP.LookAtVerticalController.prototype.lookAtPointVertical=function(a){this.locationController=a[0];this.camera=a[1];this.targetPoint={x:a[2].x,y:a[2].y,z:a[2].z};this.speed=a[3];this.startPoint=this.locationController.currentLookAtPoint;this.cameraPosition=this.camera.position;a=this.targetPoint.y-this.startPoint.y;this.signRotation=a/Math.abs(a);this.isLookAtVerticalEnabled=!0};
PANDP.LookAtVerticalController.prototype.lookAtVerticalProcessing=function(){this.isLookAtVerticalEnabled&&(this.startPoint.y+=this.calculateY(),0<(this.targetPoint.y-this.startPoint.y)*this.signRotation?this.camera.lookAt(this.startPoint):(this.startPoint.y=this.targetPoint.y,this.camera.lookAt(this.startPoint),this.isLookAtVerticalEnabled=!1,this.locationController.currentLookAtPoint=this.startPoint,this.locationController.queueController.executeNext()))};
PANDP.LookAtVerticalController.prototype.calculateY=function(){var a=Math.abs(this.cameraPosition.y-this.startPoint.y),b=Math.sqrt(Math.pow(this.cameraPosition.x-this.startPoint.x,2)+Math.pow(this.cameraPosition.z-this.startPoint.z,2)),c=Math.sqrt(a*a+b*b),a=a/c,b=b/c;return this.signRotation*c*Math.sin(this.speed)/(Math.sin(this.speed)*a+Math.cos(this.speed)*b)};
PANDP.MainProcessor=function(a,b){this.camera=a;this.scene=b;this.boxesParts=[];this.cssManager=new PANDP.CssManager(this);this.queueController=new PANDP.QueueController;this.transitManager=new PANDP.TransitManager(this);this.sphereManager=new PANDP.SphereManager(this);this.rotationController=new PANDP.RotationController(this);this.transformerManager=new PANDP.TransformerManager(this);this.animationActive=0;this.animations=[];this.loader=new PANDP.WebMobileLoader(this);this.loader.loadModels();this.moveController=
    new PANDP.MoveController;this.lookAtHorizontalController=new PANDP.LookAtHorizontalController;this.lookAtVerticalController=new PANDP.LookAtVerticalController;this.clickController=new PANDP.ClickController(this);this.buttonController=new PANDP.ButtonController(this);this.buttonController.enableButtons();this.locationController=new PANDP.LocationController(this);this.deviceRotationManager=new PANDP.DeviceRotationManager(this);this.littleRotationController=new PANDP.LittleRotationController(this);this.sceneManager=
    new PANDP.SceneManager(this);this.location=-1;this.midtime=.79;this.starttime=.01;this.stopa=.79;this.stopb=-1;this.delta=.01;this.isAnimated=!1};
PANDP.MainProcessor.prototype.generalProcessing=function(){this.moveController.moveProcessing();this.lookAtHorizontalController.lookAtHorizontalProcessing();this.lookAtVerticalController.lookAtVerticalProcessing();this.rotationController.revertRotationProcessing();this.littleRotationController.littleRotationProcessing();this.transitManager.transitProcessing();this.isAnimated&&(this.animations[this.animationActive].update(this.delta),this.check_laptop());this.transformerManager.transformerProcessing()};
PANDP.MainProcessor.prototype.startAnimation=function(){this.animations[this.animationActive].isPlaying=!0};PANDP.MainProcessor.prototype.check_laptop=function(){var a=this.animations[this.animationActive];a.currentTime>=this.stopa&&(a.isPlaying=!1,this.stopa=4,this.stopb=this.starttime);a.currentTime<=this.stopb&&(a.isPlaying=!1,this.stopa=this.midtime,this.stopb=-1)};PANDP.MainProcessor.prototype.moveToLocation=function(a){this.location!=a&&(this.location=a,this.locationController.moveToLocation(this.location))};
PANDP.MoveBoxesController=function(){this.isMovingEnabled=!1};PANDP.MoveBoxesController.prototype.setActiveItem=function(a){this.movingItem=a;this.isMovingEnabled=!0};PANDP.MoveBoxesController.prototype.removeActiveItem=function(){this.movingItem=null;this.isMovingEnabled=!1};PANDP.MoveBoxesController.prototype.moveItemToVectorPosition=function(a){this.movingItem=a[1];this.vectorTo=a[2];this.speed=a[3];this.calculateVectorSpeed();this.isMovingEnabled=!0};
PANDP.MoveBoxesController.prototype.calculateVectorSpeed=function(){var a=this.vectorTo.x-this.movingItem.position.x,b=this.vectorTo.y-this.movingItem.position.y,c=this.vectorTo.z-this.movingItem.position.z;this.sign=new THREE.Vector3;this.sign.x=a/Math.abs(a);this.sign.y=b/Math.abs(b);this.sign.z=c/Math.abs(c);var d=Math.abs(a)+Math.abs(b)+Math.abs(c);this.vectorSpeed=new THREE.Vector3;this.vectorSpeed.x=a/d*this.speed;this.vectorSpeed.y=b/d*this.speed;this.vectorSpeed.z=c/d*this.speed};
PANDP.MoveBoxesController.prototype.moveBoxesProcessing=function(){if(this.isMovingEnabled){var a=this.moveByAxis("x"),b=this.moveByAxis("y"),c=this.moveByAxis("z");a||b||c||(this.isMovingEnabled=!1)}return this.isMovingEnabled};PANDP.MoveBoxesController.prototype.moveByAxis=function(a){var b=!0;0<(this.vectorTo[a]-this.movingItem.position[a]-this.vectorSpeed[a])*this.sign[a]?this.movingItem.position[a]+=this.vectorSpeed[a]:(this.movingItem.position[a]=this.vectorTo[a],b=!1);return b};
PANDP.MoveController=function(){this.isMovingEnabled=!1};PANDP.MoveController.prototype.setActiveItem=function(a){this.movingItem=a;this.isMovingEnabled=!0};PANDP.MoveController.prototype.removeActiveItem=function(){this.movingItem=null;this.isMovingEnabled=!1};PANDP.MoveController.prototype.moveItemToVectorPosition=function(a){this.locationController=a[0];this.movingItem=a[1];this.vectorTo=a[2];this.speed=a[3];this.calculateVectorSpeed();this.isMovingEnabled=!0};
PANDP.MoveController.prototype.calculateVectorSpeed=function(){var a=this.vectorTo.x-this.movingItem.position.x,b=this.vectorTo.y-this.movingItem.position.y,c=this.vectorTo.z-this.movingItem.position.z;this.sign=new THREE.Vector3;this.sign.x=a/Math.abs(a);this.sign.y=b/Math.abs(b);this.sign.z=c/Math.abs(c);var d=Math.abs(a)+Math.abs(b)+Math.abs(c);this.vectorSpeed=new THREE.Vector3;this.vectorSpeed.x=a/d*this.speed;this.vectorSpeed.y=b/d*this.speed;this.vectorSpeed.z=c/d*this.speed};
PANDP.MoveController.prototype.moveProcessing=function(){if(this.isMovingEnabled){var a=this.moveByAxis("x"),b=this.moveByAxis("y"),c=this.moveByAxis("z");a||b||c||(this.isMovingEnabled=!1,this.locationController.queueController.executeNext())}};PANDP.MoveController.prototype.moveByAxis=function(a){var b=!0;0<(this.vectorTo[a]-this.movingItem.position[a]-this.vectorSpeed[a])*this.sign[a]?this.movingItem.position[a]+=this.vectorSpeed[a]:(this.movingItem.position[a]=this.vectorTo[a],b=!1);return b};
PANDP.QueueController=function(){this.queue=[];this.isFree=!0};PANDP.QueueController.prototype.addToQueue=function(a){this.queue.push(a)};PANDP.QueueController.prototype.releaseItem=function(){this.isFree=!0};PANDP.QueueController.prototype.executeNext=function(){if(0!=this.queue.length){var a=this.queue.shift();a.controller[a.func](a.params)}};PANDP.QueueController.prototype.joinNext=function(){this.executeNext();this.executeNext()};
PANDP.QueueController.prototype.push=function(a,b,c){var d=new PANDP.Entity;d.controller=a;d.func=b;d.params=c;this.addToQueue(d)};PANDP.RotationController=function(a){this.mainProcessor=a;this.domElement=document};PANDP.RotationController.PHONES_AND_TABLETS_MODE=0;PANDP.RotationController.LAPTOPS_MODE=1;PANDP.RotationController.prototype=Object.create(THREE.EventDispatcher.prototype);
PANDP.RotationController.prototype.startRotationForItem=function(a){this.rotatingItem=a[0];this.mode=a[1];this.mousePrev=null;this.mouse={x:0,y:0,z:1};this.mouseVector=new THREE.Vector3;this.isMousePressed=!1;var b=this;this.onMouseDown=function(a){b.isMousePressed=!0};this.onMouseMove=function(a){b.isMousePressed&&(b.mouse.z=a.clientX/window.innerWidth*2-1,b.mouse.y=2*-(a.clientY/window.innerHeight)+1,b.mouseVector.set(b.mouse.x,b.mouse.y,b.mouse.z),null==b.mousePrev&&(b.mousePrev=new THREE.Vector3,
    b.mousePrev.set(b.mouseVector.x,b.mouseVector.y,b.mouseVector.z)),b.mode==PANDP.RotationController.PHONES_AND_TABLETS_MODE&&(b.rotatingItem.rotation.z+=3*(b.mouseVector.y-b.mousePrev.y)),b.rotatingItem.rotation.y+=5*(b.mouseVector.z-b.mousePrev.z),b.mousePrev.set(b.mouseVector.x,b.mouseVector.y,b.mouseVector.z))};this.onMouseUp=function(a){b.isMousePressed=!1;b.mousePrev=null};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",
    this.onMouseDown);this.domElement.addEventListener("mousemove",this.onMouseMove);this.domElement.addEventListener("mouseup",this.onMouseUp);this.mainProcessor.queueController.executeNext()};
PANDP.RotationController.prototype.stopRotationForItem=function(){this.domElement.removeEventListener("mousedown",this.onMouseDown,!1);this.domElement.removeEventListener("mousemove",this.onMouseMove,!1);this.domElement.removeEventListener("mouseup",this.onMouseUp,!1);this.calculateRotationInformation();this.isRevertRotationEnabled=!0};
PANDP.RotationController.prototype.calculateRotationInformation=function(){this.normalizeRotationVector();var a=this.rotatingItem.rotation,b=a.x,c=a.y,a=a.z;this.sign=new THREE.Vector3;this.sign.x=-b/Math.abs(b);this.sign.y=-c/Math.abs(c);this.sign.z=-a/Math.abs(a);this.speed={x:this.sign.x*Math.PI/45,y:this.sign.y*Math.PI/45,z:this.sign.z*Math.PI/45}};
PANDP.RotationController.prototype.normalizeRotationVector=function(){this.rotatingItem.rotation.x%=2*Math.PI;this.rotatingItem.rotation.y%=2*Math.PI;this.rotatingItem.rotation.z%=2*Math.PI;var a=this.rotatingItem.rotation.x;Math.abs(a)>Math.PI&&(this.rotatingItem.rotation.x-=a/Math.abs(a)*2*Math.PI);a=this.rotatingItem.rotation.y;Math.abs(a)>Math.PI&&(this.rotatingItem.rotation.y-=a/Math.abs(a)*2*Math.PI);a=this.rotatingItem.rotation.z;Math.abs(a)>Math.PI&&(this.rotatingItem.rotation.z-=a/Math.abs(a)*
    2*Math.PI)};PANDP.RotationController.prototype.revertRotationProcessing=function(){if(this.isRevertRotationEnabled){var a=this.rotateByAxis("x"),b=this.rotateByAxis("y"),c=this.rotateByAxis("z");a||b||c||(this.isRevertRotationEnabled=!1)}};PANDP.RotationController.prototype.rotateByAxis=function(a){var b=!0;0>this.rotatingItem.rotation[a]*this.sign[a]?this.rotatingItem.rotation[a]+=this.speed[a]:(this.rotatingItem.rotation[a]=0,b=!1);return b};PANDP.ScaleManager=function(a){this.mainProcessor=a};
PANDP.ScaleManager.prototype.startScaleChange=function(a){this.meshScaled=a[0];this.scaleTarget=a[1];this.speed=a[2];this.sign=this.scaleTarget-this.meshScaled.scale.x;this.speed*=this.sign;this.isScaleEnabled=!0};
PANDP.ScaleManager.prototype.scaleProcessing=function(){this.isScaleEnabled&&(this.isScaleEnabled=!1,console.log(this.meshScaled.scale.x),0<(this.scaleTarget-(this.meshScaled.scale.x+this.speed))*this.sign&&(this.meshScaled.scale.x+=this.speed,this.meshScaled.scale.z+=this.speed,this.isScaleEnabled=!0),this.isScaleEnabled||(this.meshScaled.scale.x=this.scaleTarget,this.meshScaled.scale.z=this.scaleTarget,this.mainProcessor.queueController.executeNext()))};
PANDP.SceneManager=function(a){this.mainProcessor=a};PANDP.SceneManager.prototype.showPhones=function(a){this.scene=this.mainProcessor.scene;for(a=0;16>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!0;this.mainProcessor.queueController.executeNext()};PANDP.SceneManager.prototype.removePhones=function(a){this.scene=this.mainProcessor.scene;for(a=0;16>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!1;this.mainProcessor.queueController.executeNext()};
PANDP.SceneManager.prototype.showTablets=function(a){this.scene=this.mainProcessor.scene;for(a=16;22>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!0;this.mainProcessor.queueController.executeNext()};PANDP.SceneManager.prototype.removeTablets=function(a){this.scene=this.mainProcessor.scene;for(a=16;22>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!1;this.mainProcessor.queueController.executeNext()};
PANDP.SceneManager.prototype.showLaptops=function(a){this.scene=this.mainProcessor.scene;for(a=22;26>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!0;this.mainProcessor.queueController.executeNext()};PANDP.SceneManager.prototype.removeLaptops=function(a){this.scene=this.mainProcessor.scene;for(a=22;26>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!1;this.mainProcessor.queueController.executeNext()};
PANDP.SceneManager.prototype.showBoxes=function(a){this.scene=this.mainProcessor.scene;for(a=22;26>a;++a)this.scene.add(this.mainProcessor.boxesParts[a]);this.mainProcessor.queueController.executeNext()};PANDP.SceneManager.prototype.removeBoxes=function(a){this.scene=this.mainProcessor.scene;for(a=22;26>a;++a)this.scene.remove(this.mainProcessor.boxesParts[a]);this.mainProcessor.queueController.executeNext()};
PANDP.SceneManager.prototype.removeDevices=function(a){this.scene=this.mainProcessor.scene;for(a=0;26>a;++a)this.mainProcessor.loader.meshDeviceArray[a].visible=!1;this.mainProcessor.queueController.executeNext()};PANDP.SphereManager=function(a){this.mainProcessor=a;this.camera=this.mainProcessor.camera;this.domElement=document;this.projector=new THREE.Projector};PANDP.SphereManager.PHONES=0;PANDP.SphereManager.TABLETS=1;
PANDP.SphereManager.prototype.createColorSpheresForDevice=function(a){this.meshSelected=a[0];this.mode=a[1];this.mode==PANDP.SphereManager.PHONES?(this.sphereSize=.2,this.ypos=1.25,this.ycoef=.7,this.zpos=2.2,this.zcoef=.05):this.mode==PANDP.SphereManager.TABLETS&&(this.sphereSize=.37,this.ypos=2.4,this.ycoef=1.3,this.zpos=3.5,this.zcoef=.05);this.scene=this.mainProcessor.scene;this.sphereArray=[];a=this.meshSelected.textureInformation;var b=this.meshSelected.position,c=this.camera.position.z-b.z,
    c=c/Math.abs(c);if(void 0!==a&&void 0!==a.maps){for(var d=0;d<a.maps.length;++d){var e,f=a.maps[d].sphereColor;e=(255*f[0]<<16)+(255*f[1]<<8)+255*f[2];f=new THREE.SphereGeometry(this.sphereSize,32,32);e=new THREE.MeshPhongMaterial({color:e,transparent:!0,opacity:.9,ambient:0,specular:8947848});f=new THREE.Mesh(f,e);f.position={x:b.x,y:b.y+this.ypos-d*this.ycoef,z:b.z+c*(this.zpos+d*this.zcoef)};f.textureSrc=a.maps[d].textureSrc;this.sphereArray.push(f);this.scene.add(f)}this.addSphereListener()}this.mainProcessor.queueController.executeNext()};
PANDP.SphereManager.prototype.addSphereListener=function(){var a=this;this.onMouseDown=function(b){b.preventDefault();var c=0,d=0,c=b.clientX/window.innerWidth*2-1,d=2*-(b.clientY/window.innerHeight)+1;b=new THREE.Vector3;b.set(c,d,1);a.projector.unprojectVector(b,a.camera);c=b.sub(a.camera.position).normalize();d=new THREE.Raycaster(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,0));d.set(a.camera.position,c);c=d.intersectObjects(a.sphereArray,null);c.length&&a.changeColor(c[0].object)};this.domElement.addEventListener("mousedown",
    this.onMouseDown)};PANDP.SphereManager.prototype.removeEventListener=function(){this.domElement.removeEventListener("mousedown",this.onMouseDown,!1)};PANDP.SphereManager.prototype.changeColor=function(a){for(var b=this.meshSelected.textureInformation.arrayMaterials,c=0;c<b.length;++c)this.changeTextureForMaterial(this.meshSelected.material.materials[b[c]],this.meshSelected.textureInformation.texturePath+a.textureSrc)};
PANDP.SphereManager.prototype.changeTextureForMaterial=function(a,b){var c=new Image,d=document.createElement("canvas"),e=new THREE.Texture(d);e.wrapS=e.wrapT=THREE.RepeatWrapping;e.anisotropy=a.map.anisotropy;var f=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},g=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))};c.onload=function(){if(f(this.width)&&f(this.height))e.image=this;else{var b=g(this.width),c=g(this.height);e.image.width=b;e.image.height=c;e.image.getContext("2d").drawImage(this,
    0,0,b,c)}e.needsUpdate=!0;a.map=e;a.needsUpdate=!0};c.crossOrigin="anonymous";c.src=b};PANDP.SphereManager.prototype.removeSpheres=function(){for(var a=0;a<this.sphereArray.length;++a)this.scene.remove(this.sphereArray[a]);this.sphereArray[a]=[];this.removeEventListener();this.mainProcessor.queueController.executeNext()};
PANDP.TransformerManager=function(a){this.mainProcessor=a;this.moveBoxesManagers=[];this.transparencyManagers=[];this.isOpened=!1;this.boxesPoint=[{x:-3,y:0,z:0},{x:0,y:0,z:3},{x:0,y:3,z:0},{x:0,y:0,z:-3},{x:3,y:0,z:0}]};
PANDP.TransformerManager.prototype.openTransformerAction=function(a){if(this.isOpened)this.mainProcessor.queueController.executeNext();else{this.queueController=this.mainProcessor.queueController;for(a=0;a<this.mainProcessor.boxesParts.length;++a){var b=new PANDP.MoveBoxesController;this.moveBoxesManagers.push(b);b.moveItemToVectorPosition([this,this.mainProcessor.boxesParts[a],this.boxesPoint[a],.1]);b=new PANDP.TransparencyManager;this.transparencyManagers.push(b);b.startTransparencyChange([this.mainProcessor.boxesParts[a],
    -.04])}this.isOpened=this.isTransformationEnabled=!0}};
PANDP.TransformerManager.prototype.closeTransformerAction=function(a){if(this.isOpened){this.queueController=this.mainProcessor.queueController;for(a=0;a<this.mainProcessor.boxesParts.length;++a){var b=new PANDP.MoveBoxesController;this.moveBoxesManagers.push(b);b.moveItemToVectorPosition([this,this.mainProcessor.boxesParts[a],{x:0,y:0,z:0},.1]);b=new PANDP.TransparencyManager;this.transparencyManagers.push(b);b.startTransparencyChange([this.mainProcessor.boxesParts[a],.04])}this.isTransformationEnabled=
    !0;this.isOpened=!1}else this.mainProcessor.queueController.executeNext()};PANDP.TransformerManager.prototype.transformerProcessing=function(){if(this.isTransformationEnabled){this.isTransformationEnabled=!1;for(var a=0;5>a;++a)this.moveBoxesManagers[a].moveBoxesProcessing()&&(this.isTransformationEnabled=!0),this.transparencyManagers[a].transparencyChangeProcessing()&&(this.isTransformationEnabled=!0);this.isTransformationEnabled||(this.moveBoxesManagers=[],this.transparencyManagers=[],this.mainProcessor.queueController.executeNext())}};
PANDP.TransitManager=function(a){this.mainProcessor=a;this.speed=.06;this.div=document.getElementById("StageParentLoading")};PANDP.TransitManager.prototype.startTransition=function(){this.div.style.opacity=1;this.opacity=parseFloat(this.div.style.opacity);this.isEnabled=!0};
PANDP.TransitManager.prototype.transitProcessing=function(){this.isEnabled&&(0<this.opacity-this.speed?(this.opacity-=this.speed,this.div.style.opacity=this.opacity):(this.isEnabled=!1,this.mainProcessor.queueController.executeNext(),this.div.style.display="none"))};PANDP.TransparencyManager=function(a){this.mainProcessor=a};
PANDP.TransparencyManager.prototype.startTransparencyChange=function(a){this.meshChanging=a[0];this.speed=a[1];this.materials=this.meshChanging.material.materials;for(a=0;a<this.materials.length;++a)void 0!==this.materials[a].opacity?void 0===this.materials[a].opacityFixed&&(this.materials[a].opacityFixed=this.materials[a].opacity):this.materials[a].opacity=1,this.materials[a].transparent=!0;this.isChanging=!0};
PANDP.TransparencyManager.prototype.transparencyChangeProcessing=function(){if(this.isChanging){this.isChanging=!1;for(var a=0;a<this.materials.length;++a)0<this.materials[a].opacity+this.speed&&this.materials[a].opacity+this.speed<this.materials[a].opacityFixed&&(this.materials[a].opacity+=this.speed,this.isChanging=!0);if(!this.isChanging)for(a=0;a<this.materials.length;++a)0<this.speed?this.materials[a].opacity=this.materials[a].opacityFixed:(console.log(this.materials[a]),this.materials[a].opacity=
    0)}return this.isChanging};
PANDP.WebMobileLoader=function(a){this.domElement=document;this.laptopCoordArray=[{x:40.21345,y:17.8523,z:49.3558},{x:40.1476,y:19.5771,z:63.3906},{x:40.0754,y:9.3491,z:49.36},{x:40.1652,y:8.885,z:63.3877}];this.mainProcessor=a;this.scene=this.mainProcessor.scene;this.deviceCounter=0;this.loader=new THREE.JSONLoader;this.meshDeviceArray=Array(25);this.roomMesh=Array(1);this.playAnimation=function(a){this.scene.add(a);THREE.AnimationHandler.add(a.geometry.animation);a=new THREE.Animation(a,"ArmatureAction"+
    a.index,THREE.AnimationHandler.LINEAR);a.play();a.isPlaying=!1;this.mainProcessor.animations.push(a);this.mainProcessor.isAnimated=!0}};PANDP.WebMobileLoader.prototype.loadModels=function(){this.startLoadingModels()};PANDP.WebMobileLoader.prototype.startLoadingModels=function(){var a=this;this.loader.load("model/new_room_final4.js",function(b,c){var d=new THREE.Mesh(b,new THREE.MeshFaceMaterial(c));d.name="room";a.mainProcessor.room=d;a.scene.add(d);a.loadDevices()})};
PANDP.WebMobileLoader.prototype.loadDevices=function(){var a=this;26>this.deviceCounter?this.loader.load("model/"+this.deviceCounter+".js",function(b,c,d){if(22>a.deviceCounter){b.computeBoundingBox();var e=(b.boundingBox.max.x+b.boundingBox.min.x)/2,f=(b.boundingBox.max.y+b.boundingBox.min.y)/2,g=(b.boundingBox.max.z+b.boundingBox.min.z)/2;THREE.GeometryUtils.center(b)}if(22>a.deviceCounter)b=new THREE.Mesh(b,new THREE.MeshFaceMaterial(c)),b.index=a.deviceCounter;else{b=new THREE.SkinnedMesh(b,new THREE.MeshFaceMaterial(c));
    c=b.material.materials;for(var h=0,k=c.length;h<k;h++)c[h].skinning=!0;b.index=a.deviceCounter;a.playAnimation(b)}22>a.deviceCounter?(b.position.x=e,b.position.y=f,b.position.z=g):b.position=a.laptopCoordArray[a.deviceCounter-22];b.name=16>a.deviceCounter?"phone":22>a.deviceCounter?"tablet":"laptop";b.textureInformation=d;a.meshDeviceArray[a.deviceCounter]=b;a.deviceCounter++;a.scene.add(b);a.loadDevices()}):this.mainProcessor.transitManager.startTransition()};
PANDP.WebMobileLoader.prototype.addToScene=function(){var a=this,b=new Worker("RoomWorker.js");b.onmessage=function(){a.domElement.getElementById("StageParentLoading").style.display="none"};b.postMessage(this.scene,this.roomMesh)};